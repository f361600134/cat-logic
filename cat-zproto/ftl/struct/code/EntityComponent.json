{
	"content":"package com.game.module.${module.name?lower_case};\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\nimport com.game.common.ResultData;\nimport com.game.defines.ErrorCode;\nimport com.game.defines.ModuleDefines;\nimport com.game.module.cost.CostUtil;\nimport com.game.module.cost.structs.Cost;\nimport com.game.module.dress.ClothManager;\nimport com.game.module.log.LogCause;\nimport com.game.module.pay.event.PlayerVipLevelUpEvent;\nimport com.game.module.player.component.PlayerBeanComponent;\nimport com.game.module.resource.ResourceHelper;\nimport com.game.module.resource.define.ResourceType;\nimport com.game.module.reward.RewardUtil;\nimport com.game.module.reward.structs.Reward;\nimport com.game.module.reward.structs.RewardGroup;\nimport com.game.module.sundry.event.SundryAddEvent;\nimport com.game.module.sundry.structs.SundryType;\nimport com.game.module.${module.name?lower_case}.structs.${entityName}Bean;\nimport com.game.module.${module.name?lower_case}.protocol.*;\n\nimport common.communication.Protocol;\nimport common.component.event.GameEvent;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n/**\n * ${entityName}Component\n * @date ${.now?string(\"yyyy-MM-dd HH:mm:ss\")}\n */\npublic class ${module.name}Component extends PlayerBeanComponent<${module.name}Bean> {\n\t\n\tprivate final Logger logger = LoggerFactory.getLogger(${module.name}Component.class);\n\t\n\tprivate ${module.name}Bean bean;\n\t\n\t@Override\n    public Class<${module.name}Bean> getBeanClazz() {\n        return ${module.name}Bean.class;\n    }\n\n    @Override\n    public ${module.name}Bean getBean() {\n        return bean;\n    }\n\n    @Override\n    public void setBean(${module.name}Bean bean) {\n        this.bean = bean;\n    }\n\n    @Override\n    public int getModuleId() {\n        return ModuleDefines.${module.name ? upper_case};\n    }\n\n\t@Override\n    protected boolean isFunctionOpen() {\n        return true;\n    }\n    \n    @Override\n    protected Protocol handleProtocol(Protocol request) {\n        int msgId = request.getId();\n        <#assign  count = 0 />\n        <#if protoReqStructList ? exists>\n\t\t<#list protoReqStructList as proto>\n\t\t<#if count == 0>\n\t\tif (msgId == ${proto.name}.ID) {//${proto.comment}\n\t\t\treturn ${proto.name ? uncap_first}((${proto.name}) request);\n\t\t}\n\t\t<#else>\n\t\telse if (msgId == ${proto.name}.ID) {//${proto.comment}\n        \treturn ${proto.name ? uncap_first}((${proto.name}) request);\n    \t}\n\t\t</#if>\n\t\t<#assign  count ++ />\n\t\t</#list>\n\t\t</#if>\n        return null;\n    }\n    \n    @Override\n    public void handleGameEvent(GameEvent gameEvent) {\n    \t//TODO something\n        //if (gameEvent.isThisEvent(SundryAddEvent.Id)) {\n        //    refreshWishBottle((SundryAddEvent) gameEvent);\n        //} else if (gameEvent.isThisEvent(PlayerVipLevelUpEvent.ID)) {\n        //    refreshBottleSumTurnCount((PlayerVipLevelUpEvent) gameEvent);\n        //}\n    }\n    \n    @Override\n    protected int[] focusMessageIds() {\n    \t//TODO something\n    \treturn new int[] {\n    \t<#if protoReqStructList ? exists>\n    \t<#assign  count = protoReqStructList?size />\n\t\t<#list protoReqStructList as proto>\n\t\t<#assign  count -- />\n\t\t<#if count == 0>\n\t\t\t${proto.name}.ID\n\t\t<#else>\n\t\t\t${proto.name}.ID,\n\t\t</#if>\n\t\t</#list>\n\t\t</#if>\n\t\t};\n    }\n\n    @Override\n    protected String[] focusEventIds() {\n    \t//TODO something\n        return new String[] {};\n    }\n    \n    @Override\n    public void afterLogin(List<Protocol> protocols) {\n    \t//TODO something\n    \t//protocols.add(allWishInfo());\n    }\n\t\t\n\t////////////以下是协议方法入口/////////////\n\t<#if protoReqStructList ? exists>\n\t<#list protoReqStructList as proto>\n\t/**\n\t* ${proto.comment}\n\t*/\n\tprivate Protocol ${proto.name ? uncap_first}(${proto.name} req) {\n        //TODO something...\n        return null;\n    }\n\t</#list>\n\t</#if>\n\t\n\t////////////以下是Res协议构建/////////////\n\t\n\t<#if protoAckStructMap ? exists>\n\t<#list protoAckStructMap?values as proto>\n\t\n\tpublic Protocol build${proto.name}() {\n\t\t${proto.name} res = new ${proto.name}();\n\t\t//TODO something...\n\t\t<#list proto.fields as li>\n\t\t//res.set${li.name ? uncap_first}();\n\t\t</#list>\n\t\treturn res;\n\t}\n\t</#list>\n\t</#if>\n\t\n\t////////////以下是业务逻辑/////////////\n\t\n\t\n}\n",
	"id":1017,
	"name":"EntityComponent",
	"type":1
}