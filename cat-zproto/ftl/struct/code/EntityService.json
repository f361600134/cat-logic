{
	"content":"package com.cat.server.game.module.${entity.getEntityName()?lower_case}.service;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Collection;\n\nimport com.cat.server.game.helper.ResourceType;\nimport com.cat.server.game.helper.log.NatureEnum;\nimport com.cat.server.game.module.${entity.getEntityName()?lower_case}.service.I${entity.getEntityName()}Service;\nimport com.cat.server.game.module.${entity.getEntityName()?lower_case}.domain.${entity.getEntityName()};\nimport com.cat.server.game.module.${entity.getEntityName()?lower_case}.domain.${entity.getEntityName()}Domain;\nimport com.cat.server.game.module.${entity.getEntityName()?lower_case}.manager.${entity.getEntityName()}Manager;\nimport com.cat.server.game.module.player.service.IPlayerService;\nimport com.cat.server.game.module.resource.IResourceService;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport com.cat.server.game.helper.result.ErrorCode;\n\n\n/**\n * ${entity.getEntityName()}控制器\n * @author Jeremy\n */\n<#if module.getExtendInfo()?seq_contains(2)>\n<#assign text=\", IResourceService\" />\n</#if>\n@Service\npublic class ${entity.getEntityName()}Service implements I${entity.getEntityName()}Service ${text}{\n\t\n\tprivate static final Logger log = LoggerFactory.getLogger(${entity.getEntityName()}Service.class);\n\t\n\t@Autowired private IPlayerService playerService;\n\t\n\t@Autowired private ${entity.getEntityName()}Manager ${entity.getEntityName()?uncap_first}Manager;\n\t\n\t<#if module.getExtendInfo()?seq_contains(3)>\n\t/**\n\t * 登陆\n\t */\n\tpublic void onLogin(long playerId) {\n\t\t${entity.getEntityName()}Domain domain = ${entity.getEntityName()?uncap_first}Manager.getDomain(playerId);\n\t\tCollection<${entity.getEntityName()}> beans = domain.getBeans();\n\t\t//FSC todo somthing...\n\t\t//Codes for proto\n\t\t//playerService.sendMessage(playerId, ack);\n\t}\n\t\n\t/**\n\t * 当玩家离线,移除掉道具模块数据\n\t * @param playerId\n\t */\n\tpublic void onLogout(long playerId) {\n\t\t${entity.getEntityName()?uncap_first}Manager.remove(playerId);\n\t}\n\t\n\t/**\n\t * 更新信息\n\t */\n\tpublic void response${entity.getEntityName()}Info(${entity.getEntityName()}Domain domain) {\n\t\tCollection<${entity.getEntityName()}> beans = domain.getBeans();\n\t\ttry {\n\t\t\tfor (${entity.getEntityName()} ${entity.getEntityName() ? uncap_first} : beans) {\n\t\t\t\t//resp.addArtifactlist(${entity.getEntityName() ? uncap_first}.toProto());\n\t\t\t}\n\t\t\t//playerService.sendMessage(playerId, resp);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tlog.info(\"response${entity.getEntityName()}Info error, playerId:{}\", domain.getId());\n\t\t\tlog.error(\"response${entity.getEntityName()}Info error, e:\", e);\n\t\t}\n\t}\n\t</#if>\n\t\n\t/////////////业务逻辑//////////////////\n\t\n\t<#--  -->\n\t<#if protoReqStructList ? exists>\n\t<#list protoReqStructList as proto>\n\t/**\n\t* ${proto.comment}\n\t* @param long playerId\n\t* @param ${proto.name} req\n\t* @param ${protoAckStructMap[proto.name].name}Resp ack\n\t*/\n\tpublic ErrorCode ${proto.name ? uncap_first}(long playerId, ${proto.name} req, ${protoAckStructMap[proto.name].name}Resp ack){\n\t\ttry {\n\t\t\t${entity.getEntityName()}Domain domain = getDomain(playerId);\n\t\t\tif (domain == null) {\n\t\t\t\treturn ErrorCode.DOMAIN_IS_NULL;\n\t\t\t}\n\t\t\t//TODO Somthing.\n\t\t\tthis.response${entity.getEntityName()}Info(domain);\n\t\t\treturn ErrorCode.SUCCESS;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tlog.info(\"${proto.name ? uncap_first} error, playerId:{}\", playerId);\n\t\t\tlog.error(\"${proto.name ? uncap_first} error, e:\", e);\n\t\t\treturn ErrorCode.UNKNOWN_ERROR;\n\t\t}\n\t}\n\t</#list>\n\t</#if>\n\t\n\t/////////////接口方法////////////////////////\n\t\n\t<#if module.getExtendInfo()?seq_contains(2)>\n\t@Override\n\tpublic int resType() {\n\t\treturn ResourceType.${entity.getEntityName()}.getType();\n\t}\n\t\n\t@Override\n\tpublic boolean checkAdd(long playerId, Integer configId, Integer value) {\n\t\t${entity.getEntityName()}Domain domain = ${entity.getEntityName() ? uncap_first}Manager.getDomain(playerId);\n\t\tif (domain == null) return false;\n\t\treturn domain.checkAdd(configId, value);\n\t}\n\t\n\t@Override\n\tpublic boolean checkEnough(long playerId, Integer configId, Integer value) {\n\t\t${entity.getEntityName()}Domain domain = ${entity.getEntityName() ? uncap_first}Manager.getDomain(playerId);\n\t\tif (domain == null) return false;\n\t\treturn domain.checkEnough(configId, value);\n\t}\n\n\t@Override\n\tpublic void reward(long playerId, Integer configId, Integer value, NatureEnum nEnum) {\n\t\t${entity.getEntityName()}Domain domain = ${entity.getEntityName() ? uncap_first}Manager.getDomain(playerId);\n\t\tif (domain == null)\treturn;\n\t\t//背包加入普通道具\n\t\tdomain.addItem(configId, value, nEnum);\n\t}\n\n\t@Override\n\tpublic void cost(long playerId, Integer configId, Integer value, NatureEnum nEnum) {\n\t\t${entity.getEntityName()}Domain domain = ${entity.getEntityName() ? uncap_first}Manager.getDomain(playerId);\n\t\tif (domain == null)\treturn;\n\t\tdomain.deductItemByConfigId(configId, value, nEnum);\n\t}\n\t\n\t@Override\n\tpublic void cost(long playerId, Long id, NatureEnum nEnum) {\n\t\t${entity.getEntityName()}Domain domain = ${entity.getEntityName() ? uncap_first}Manager.getDomain(playerId);\n\t\tif (domain == null) {\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t * 道具默认有数量概念, 唯一的物品数量默认为1.\n\t\t * 所以唯一道具,跟普通道具在扣除上面,逻辑相同,当数量为0则清除.\n\t\t * 这里参数就默认扣除未1\n\t\t */\n\t\tdomain.deductItemById(id, 1, nEnum);\n\t}\n\t</#if>\n}\n \n \n ",
	"id":1010,
	"name":"EntityService",
	"type":1
}