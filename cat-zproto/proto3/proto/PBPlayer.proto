syntax = "proto3";
package Protocol;
//option optimize_for = LITE_RUNTIME;
option java_package = "com.cat.server.game.data.proto";
option java_outer_classname = "PBPlayer";

import "PBItem.proto";

//玩家协议对象,自己看的
message PBPlayerInfo
{
	string accountName = 1;		//账号
	int64 playerId = 2;	//角色id
	string nickName = 3;			//角色昵称
	int32 power = 4;				//战力
	int32 channel = 5;				//渠道
	int32 level = 6;				//等级
	int32 exp = 7;					//经验
	int32 vip = 8;					//vip等级
	int32 vipExp = 9;				//VIP经验
	repeated PBPairInfo properties = 10; 	//玩家资源信息
	repeated PBPairInfo attrs = 11; 		//玩家属性信息
}


//玩家简要信息,给其他玩家看的
message PBPlayerProfile
{
	int32 playerId = 1;	//角色id
	string nickName = 2;			//角色昵称
    int32 level = 3;				//等级
    int32 power = 4;				//战力
    string familyName = 5;			//家族名称
    int32 vip = 6;					//vip等级
}

//资源协议对象
//message PBPropertieInfo
//{
//    int32 configId = 1;
//	int32 value = 2;
//}

//属性协议对象
//message PBAttrInfo
//{
//    int32 configId = 1;
//	int32 attrValue = 2;
//}


//////////////////登录////////////////////

//请求连接游戏服
message ReqPlayerLogin{
    string accountName=1;	//游戏账号
	int32 channel = 2;		//渠道
	string sessionKey=3;	//密匙
	int32 serverId = 4;		//游戏服id
	string version = 5;		//版本号
	int32 loginSid = 6;		//登录服id
	string device = 7;		//设备码
}


//响应连接游戏服结果
message AckPlayerLogin{
    int32 code = 1;
	int32 status = 2;	//是否进入创建角色环节, 0=否,1=是
}

//请求获取随机名
message ReqPlayerRandName{
	
}

//响应获取随机名结果
message AckPlayerRandName{
	repeated string names = 1;
}

//请求创建角色
message ReqPlayerCreateRole{
	int32 roleType = 1;	    //角色类型(策划表里的ID,不是男女)
	string nickName = 2;    //昵称
	string inputName = 3;	//玩家输入账号
}

//响应创建角色结果
message AckPlayerCreateRole{
	int32 code = 1;
}

//响应进入游戏消息
message AckPlayerEnterGame{
	
}

//请求断线重连
message ReqPlayerReLogin{
    string userName=1;
	int32 channel = 2;
	string sessionKey=3;
	int32 recvSequenceNo = 4;	//客户端收到的服务器流水号
	int32 serverId = 5;		//登陆时所选游戏服id
	string version = 6;		//版本号
}
//响应重连结果
message AckPlayerReLogin{
    int32 code = 1;
	int32 recvSequenceNo = 2;	//服务器收到的客户端流水号
}

//通知客户端已经断开连接,要退出游戏,不能触发重连
message AckPlayerDisconnect{
	int32 code = 1;	//提示信息
}

//请求心跳
message ReqPlayerHeart{
    int32 recvSequenceNo = 1;	//客户端收到的服务器流水号
}
//响应心跳
message AckPlayerHeart{
    int32 recvSequenceNo = 1;	//服务器收到的客户端流水号
}



////////////////////玩家信息/////////////////////////////


//响应主公基本信息
message AckInitPlayerInfo
{
	PBPlayerInfo playerInfo = 1;
}

//更新主公基本信息
message AckUpdatePlayerInfo
{
	PBPlayerInfo playinfo = 1;
}
