// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yamun.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto.YamunMessage {

  /// <summary>Holder for reflection information generated from yamun.proto</summary>
  public static partial class YamunReflection {

    #region Descriptor
    /// <summary>File descriptor for yamun.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static YamunReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgt5YW11bi5wcm90bxIWY29tLnByb3RvLnlhbXVuTWVzc2FnZRoOcmVzb3Vy",
            "Y2UucHJvdG8iOQoSRm9yYmlkQ2FyZER0b1Byb3RvEg4KBmNhcmRJZBgBIAEo",
            "BRITCgt1bkJsb2NrVGltZRgCIAEoBSJTChFGaWdodENhcmREdG9Qcm90bxIO",
            "CgZjYXJkSWQYASABKAUSDwoHcmFpc2VMdhgCIAEoBRIRCglpbmZsdWVuY2UY",
            "AyABKAMSCgoCaHAYBCABKAMiowEKEUVuZW15SW5mb0R0b1Byb3RvEhAKCHBs",
            "YXllcklkGAEgASgDEgwKBG5hbWUYAiABKAkSDQoFc2NvcmUYAyABKAUSDwoH",
            "Y2FyZE51bRgEIAEoBRIKCgJsdhgFIAEoBRIQCghhdmF0YXJJZBgGIAEoBRIR",
            "CglpbmZsdWVuY2UYByABKAMSDAoEcmFuaxgIIAEoBRIPCgdzbG90SWRzGAkg",
            "AygJIscDChVGaWdodFNuYXBzaG90RHRvUHJvdG8SEQoJZmlnaHRUeXBlGAEg",
            "ASgFEhEKCWJ1eUF0dHJJZBgCIAEoBRI8CgllbmVteUluZm8YAyABKAsyKS5j",
            "b20ucHJvdG8ueWFtdW5NZXNzYWdlLkVuZW15SW5mb0R0b1Byb3RvEhEKCXdh",
            "aXRDYXJkcxgEIAMoBRI5CgZteUNhcmQYBSABKAsyKS5jb20ucHJvdG8ueWFt",
            "dW5NZXNzYWdlLkZpZ2h0Q2FyZER0b1Byb3RvEhkKEWNvbnRpbnVlRmluaXNo",
            "TnVtGAYgASgFEj8KCHRlbXBBdHRyGAcgASgLMi0uY29tLnByb3RvLnlhbXVu",
            "TWVzc2FnZS5GaWdodFRlbXBBdHRyRHRvUHJvdG8SRgoOYXR0ckNvbW1vZHRp",
            "ZXMYCCADKAsyLi5jb20ucHJvdG8ueWFtdW5NZXNzYWdlLkZpZ2h0QnVmZkJv",
            "bnVzRHRvUHJvdG8SPAoJZW5lbXlDYXJkGAkgASgLMikuY29tLnByb3RvLnlh",
            "bXVuTWVzc2FnZS5GaWdodENhcmREdG9Qcm90bxIaChJlbmVteVJlbWFpbkNh",
            "cmROdW0YCiABKAUiOgoWRmlnaHRCdWZmQm9udXNEdG9Qcm90bxIQCghjb25m",
            "aWdJZBgBIAEoBRIOCgZhZGROdW0YAiABKAUiQAoTUm91bmRSZXN1bHREdG9Q",
            "cm90bxIVCg1lbmVteVJlZHVjZUhwGAEgASgDEhIKCm15UmVkdWNlSHAYAiAB",
            "KAMibQoSRGVmZW5zZUxvZ0R0b1Byb3RvEg8KB2VuZW15SWQYASABKAMSDAoE",
            "bmFtZRgCIAEoCRIVCg1kZWZlYXRDYXJkTnVuGAMgASgFEhMKC2NoYW5nZVNj",
            "b3JlGAQgASgFEgwKBHRpbWUYBSABKAUiXgoQRW5lbXlMb2dEdG9Qcm90bxIP",
            "CgdlbmVteUlkGAEgASgDEgwKBG5hbWUYAiABKAkSCgoCbHYYAyABKAUSEQoJ",
            "aW5mbHVlbmNlGAQgASgDEgwKBHRpbWUYBSABKAUiQQoVRmlnaHRUZW1wQXR0",
            "ckR0b1Byb3RvEhQKDG5vSW5qdXJ5QnVmZhgBIAEoBRISCgphdHRhY2tCdWZm",
            "GAIgASgFImQKF0F1dG9Sb3VuZFJlc3VsdER0b1Byb3RvEhMKC2VuZW15Q2Fy",
            "ZElkGAEgASgFEhAKCHJlZHVjZUhwGAIgASgDEhMKC2NoYW5nZVNjb3JlGAMg",
            "ASgFEg0KBWlzV2luGAQgASgIIlUKF0hpZ2hTY29yZVJlY29yZER0b1Byb3Rv",
            "EhAKCHBsYXllcklkGAEgASgDEgwKBG5hbWUYAiABKAkSDQoFbG9zZXIYAyAB",
            "KAkSCwoDbnVtGAQgASgFIhMKEVJlcVlhbXVuSW5mb1Byb3RvIhQKElJlcU1h",
            "dGNoRW5lbXlQcm90byIkCg9SZXFCdXlBdHRyUHJvdG8SEQoJYnV5QXR0cklk",
            "GAEgASgFIhQKElJlcUZpZ2h0RW5lbXlQcm90byITChFSZXFBdXRvRmlnaHRQ",
            "cm90byIZChdSZXFIaWdoU2NvcmVSZWNvcmRQcm90byIUChJSZXFEZWZlbnNl",
            "TG9nUHJvdG8iFgoUUmVxRW5lbXlMb2dJbmZvUHJvdG8iNQoTUmVxU2VhcmNo",
            "RW5lbXlQcm90bxIQCghwbGF5ZXJJZBgBIAEoAxIMCgRuYW1lGAIgASgJIkYK",
            "D1JlcVJldmVuZ2VQcm90bxIQCghwbGF5ZXJJZBgBIAEoAxIOCgZjYXJkSWQY",
            "AiABKAUSEQoJZmlnaHRUeXBlGAMgASgFIiYKElJlcUZvcmJpZENhcmRQcm90",
            "bxIQCghjYXJkTGlzdBgBIAMoBSIWChRSZXFVbkZvcmJpZENhcmRQcm90byIp",
            "ChdSZXFTZWxlY3RFbmVteUNhcmRQcm90bxIOCgZjYXJkSWQYASABKAUiqQIK",
            "EVJlc1lhbXVuSW5mb1Byb3RvEg0KBXNjb3JlGAEgASgDEhkKEXRvZGF5RnJl",
            "ZU1hdGNoTnVtGAIgASgFEhoKEmxhc3RNYXRjaEZpZ2h0VGltZRgDIAEoBRIX",
            "Cg9maWdodEl0ZW1Vc2VOdW0YBCABKAUSRAoNZmlnaHRTbmFwc2hvdBgFIAEo",
            "CzItLmNvbS5wcm90by55YW11bk1lc3NhZ2UuRmlnaHRTbmFwc2hvdER0b1By",
            "b3RvEj8KC2ZvcmJpZENhcmRzGAYgAygLMiouY29tLnByb3RvLnlhbXVuTWVz",
            "c2FnZS5Gb3JiaWRDYXJkRHRvUHJvdG8SGQoRdG9kYXlSZXZlbmdlQ2FyZHMY",
            "ByADKAUSEwoLbWF0Y2hDYXJkSWQYCCABKAUiVgoSUmVzTWF0Y2hFbmVteVBy",
            "b3RvEkAKCWZpZ2h0SW5mbxgBIAEoCzItLmNvbS5wcm90by55YW11bk1lc3Nh",
            "Z2UuRmlnaHRTbmFwc2hvdER0b1Byb3RvInEKD1Jlc0J1eUF0dHJQcm90bxIR",
            "CglidXlBdHRySWQYASABKAUSPwoIdGVtcEF0dHIYAiABKAsyLS5jb20ucHJv",
            "dG8ueWFtdW5NZXNzYWdlLkZpZ2h0VGVtcEF0dHJEdG9Qcm90bxIKCgJocBgD",
            "IAEoAyLQAwoSUmVzRmlnaHRFbmVteVByb3RvEg8KB2VuZW15SHAYASABKAMS",
            "DAoEbXlIcBgCIAEoAxJACgtyb3VuZFJlc3VsdBgDIAMoCzIrLmNvbS5wcm90",
            "by55YW11bk1lc3NhZ2UuUm91bmRSZXN1bHREdG9Qcm90bxINCgVpc1dpbhgE",
            "IAEoCBIWCg5jb250aW51ZVdpbk51bRgFIAEoBRIUCgx3YWl0Q2FyZExpc3QY",
            "BiADKAUSSQoRY29udGludWVXaW5SZXdhcmQYByABKAsyLi5jb20ucHJvdG8u",
            "cmVzb3VyY2VNZXNzYWdlLlJld2FyZEdyb3VwRHRvUHJvdG8SFQoNZGVmZWF0",
            "Q2FyZE51bRgIIAEoBRJGCg5hdHRyQ29tbW9kdGllcxgJIAMoCzIuLmNvbS5w",
            "cm90by55YW11bk1lc3NhZ2UuRmlnaHRCdWZmQm9udXNEdG9Qcm90bxJBCgl3",
            "aW5SZXdhcmQYCiABKAsyLi5jb20ucHJvdG8ucmVzb3VyY2VNZXNzYWdlLlJl",
            "d2FyZEdyb3VwRHRvUHJvdG8SFQoNbXlDaGFuZ2VTY29yZRgLIAEoBRIYChBl",
            "bmVteUNoYW5nZVNjb3JlGAwgASgFIoYCChFSZXNBdXRvRmlnaHRQcm90bxIN",
            "CgVpc1dpbhgBIAEoCBIVCg1kZWZlYXRDYXJkTnVtGAIgASgFEhYKDmNvbnRp",
            "bnVlV2luTnVtGAMgASgFEkgKD2F1dG9GaWdodFJlc3VsdBgEIAMoCzIvLmNv",
            "bS5wcm90by55YW11bk1lc3NhZ2UuQXV0b1JvdW5kUmVzdWx0RHRvUHJvdG8S",
            "TQoVY29udGludWVXaW5SZXdhcmRMaXN0GAUgAygLMi4uY29tLnByb3RvLnJl",
            "c291cmNlTWVzc2FnZS5SZXdhcmRHcm91cER0b1Byb3RvEhoKEnRvdGFsRGVm",
            "ZWF0Q2FyZE51bRgGIAEoBSJbChdSZXNIaWdoU2NvcmVSZWNvcmRQcm90bxJA",
            "CgdyZWNvcmRzGAEgAygLMi8uY29tLnByb3RvLnlhbXVuTWVzc2FnZS5IaWdo",
            "U2NvcmVSZWNvcmREdG9Qcm90byJVChJSZXNEZWZlbnNlTG9nUHJvdG8SPwoL",
            "ZGVmZW5zZUxvZ3MYASADKAsyKi5jb20ucHJvdG8ueWFtdW5NZXNzYWdlLkRl",
            "ZmVuc2VMb2dEdG9Qcm90byJTChRSZXNFbmVteUxvZ0luZm9Qcm90bxI7Cgll",
            "bmVteUxpc3QYASADKAsyKC5jb20ucHJvdG8ueWFtdW5NZXNzYWdlLkVuZW15",
            "TG9nRHRvUHJvdG8iUwoTUmVzU2VhcmNoRW5lbXlQcm90bxI8CgllbmVteUlu",
            "Zm8YASABKAsyKS5jb20ucHJvdG8ueWFtdW5NZXNzYWdlLkVuZW15SW5mb0R0",
            "b1Byb3RvIlMKD1Jlc1JldmVuZ2VQcm90bxJACglmaWdodEluZm8YASABKAsy",
            "LS5jb20ucHJvdG8ueWFtdW5NZXNzYWdlLkZpZ2h0U25hcHNob3REdG9Qcm90",
            "byJtChJSZXNGb3JiaWRDYXJkUHJvdG8SQgoOZm9yYmlkQ2FyZExpc3QYASAD",
            "KAsyKi5jb20ucHJvdG8ueWFtdW5NZXNzYWdlLkZvcmJpZENhcmREdG9Qcm90",
            "bxITCgttYXRjaENhcmRJZBgCIAEoBSJVChNSZXNBZGREZW5zZUxvZ1Byb3Rv",
            "Ej4KCmRlZmVuc2VMb2cYASABKAsyKi5jb20ucHJvdG8ueWFtdW5NZXNzYWdl",
            "LkRlZmVuc2VMb2dEdG9Qcm90byJRChNSZXNBZGRFbmVteUxvZ1Byb3RvEjoK",
            "CGVuZW15TG9nGAEgASgLMiguY29tLnByb3RvLnlhbXVuTWVzc2FnZS5FbmVt",
            "eUxvZ0R0b1Byb3RvIj4KGFJlc0NoYW5nZUZpZ2h0U2NvcmVQcm90bxINCgVz",
            "Y29yZRgBIAEoAxITCgt1cGRhdGVWYWx1ZRgCIAEoBSIrChRSZXNVbkZvcmJp",
            "ZENhcmRQcm90bxITCgttYXRjaENhcmRJZBgBIAEoBSJXChdSZXNTZWxlY3RF",
            "bmVteUNhcmRQcm90bxI8CgllbmVteUNhcmQYASABKAsyKS5jb20ucHJvdG8u",
            "eWFtdW5NZXNzYWdlLkZpZ2h0Q2FyZER0b1Byb3RvQi0KHmNvbS5nYW1lLm1v",
            "ZHVsZS55YW11bi5wcm90b2NvbEILWWFtdW5Qcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.Proto.ResourceMessage.ResourceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ForbidCardDtoProto), global::Com.Proto.YamunMessage.ForbidCardDtoProto.Parser, new[]{ "CardId", "UnBlockTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.FightCardDtoProto), global::Com.Proto.YamunMessage.FightCardDtoProto.Parser, new[]{ "CardId", "RaiseLv", "Influence", "Hp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.EnemyInfoDtoProto), global::Com.Proto.YamunMessage.EnemyInfoDtoProto.Parser, new[]{ "PlayerId", "Name", "Score", "CardNum", "Lv", "AvatarId", "Influence", "Rank", "SlotIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.FightSnapshotDtoProto), global::Com.Proto.YamunMessage.FightSnapshotDtoProto.Parser, new[]{ "FightType", "BuyAttrId", "EnemyInfo", "WaitCards", "MyCard", "ContinueFinishNum", "TempAttr", "AttrCommodties", "EnemyCard", "EnemyRemainCardNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.FightBuffBonusDtoProto), global::Com.Proto.YamunMessage.FightBuffBonusDtoProto.Parser, new[]{ "ConfigId", "AddNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.RoundResultDtoProto), global::Com.Proto.YamunMessage.RoundResultDtoProto.Parser, new[]{ "EnemyReduceHp", "MyReduceHp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.DefenseLogDtoProto), global::Com.Proto.YamunMessage.DefenseLogDtoProto.Parser, new[]{ "EnemyId", "Name", "DefeatCardNun", "ChangeScore", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.EnemyLogDtoProto), global::Com.Proto.YamunMessage.EnemyLogDtoProto.Parser, new[]{ "EnemyId", "Name", "Lv", "Influence", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.FightTempAttrDtoProto), global::Com.Proto.YamunMessage.FightTempAttrDtoProto.Parser, new[]{ "NoInjuryBuff", "AttackBuff" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.AutoRoundResultDtoProto), global::Com.Proto.YamunMessage.AutoRoundResultDtoProto.Parser, new[]{ "EnemyCardId", "ReduceHp", "ChangeScore", "IsWin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.HighScoreRecordDtoProto), global::Com.Proto.YamunMessage.HighScoreRecordDtoProto.Parser, new[]{ "PlayerId", "Name", "Loser", "Num" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqYamunInfoProto), global::Com.Proto.YamunMessage.ReqYamunInfoProto.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqMatchEnemyProto), global::Com.Proto.YamunMessage.ReqMatchEnemyProto.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqBuyAttrProto), global::Com.Proto.YamunMessage.ReqBuyAttrProto.Parser, new[]{ "BuyAttrId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqFightEnemyProto), global::Com.Proto.YamunMessage.ReqFightEnemyProto.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqAutoFightProto), global::Com.Proto.YamunMessage.ReqAutoFightProto.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqHighScoreRecordProto), global::Com.Proto.YamunMessage.ReqHighScoreRecordProto.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqDefenseLogProto), global::Com.Proto.YamunMessage.ReqDefenseLogProto.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqEnemyLogInfoProto), global::Com.Proto.YamunMessage.ReqEnemyLogInfoProto.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqSearchEnemyProto), global::Com.Proto.YamunMessage.ReqSearchEnemyProto.Parser, new[]{ "PlayerId", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqRevengeProto), global::Com.Proto.YamunMessage.ReqRevengeProto.Parser, new[]{ "PlayerId", "CardId", "FightType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqForbidCardProto), global::Com.Proto.YamunMessage.ReqForbidCardProto.Parser, new[]{ "CardList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqUnForbidCardProto), global::Com.Proto.YamunMessage.ReqUnForbidCardProto.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ReqSelectEnemyCardProto), global::Com.Proto.YamunMessage.ReqSelectEnemyCardProto.Parser, new[]{ "CardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResYamunInfoProto), global::Com.Proto.YamunMessage.ResYamunInfoProto.Parser, new[]{ "Score", "TodayFreeMatchNum", "LastMatchFightTime", "FightItemUseNum", "FightSnapshot", "ForbidCards", "TodayRevengeCards", "MatchCardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResMatchEnemyProto), global::Com.Proto.YamunMessage.ResMatchEnemyProto.Parser, new[]{ "FightInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResBuyAttrProto), global::Com.Proto.YamunMessage.ResBuyAttrProto.Parser, new[]{ "BuyAttrId", "TempAttr", "Hp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResFightEnemyProto), global::Com.Proto.YamunMessage.ResFightEnemyProto.Parser, new[]{ "EnemyHp", "MyHp", "RoundResult", "IsWin", "ContinueWinNum", "WaitCardList", "ContinueWinReward", "DefeatCardNum", "AttrCommodties", "WinReward", "MyChangeScore", "EnemyChangeScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResAutoFightProto), global::Com.Proto.YamunMessage.ResAutoFightProto.Parser, new[]{ "IsWin", "DefeatCardNum", "ContinueWinNum", "AutoFightResult", "ContinueWinRewardList", "TotalDefeatCardNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResHighScoreRecordProto), global::Com.Proto.YamunMessage.ResHighScoreRecordProto.Parser, new[]{ "Records" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResDefenseLogProto), global::Com.Proto.YamunMessage.ResDefenseLogProto.Parser, new[]{ "DefenseLogs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResEnemyLogInfoProto), global::Com.Proto.YamunMessage.ResEnemyLogInfoProto.Parser, new[]{ "EnemyList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResSearchEnemyProto), global::Com.Proto.YamunMessage.ResSearchEnemyProto.Parser, new[]{ "EnemyInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResRevengeProto), global::Com.Proto.YamunMessage.ResRevengeProto.Parser, new[]{ "FightInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResForbidCardProto), global::Com.Proto.YamunMessage.ResForbidCardProto.Parser, new[]{ "ForbidCardList", "MatchCardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResAddDenseLogProto), global::Com.Proto.YamunMessage.ResAddDenseLogProto.Parser, new[]{ "DefenseLog" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResAddEnemyLogProto), global::Com.Proto.YamunMessage.ResAddEnemyLogProto.Parser, new[]{ "EnemyLog" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResChangeFightScoreProto), global::Com.Proto.YamunMessage.ResChangeFightScoreProto.Parser, new[]{ "Score", "UpdateValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResUnForbidCardProto), global::Com.Proto.YamunMessage.ResUnForbidCardProto.Parser, new[]{ "MatchCardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.YamunMessage.ResSelectEnemyCardProto), global::Com.Proto.YamunMessage.ResSelectEnemyCardProto.Parser, new[]{ "EnemyCard" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 协议列表
  /// 封禁卡牌		msgId=178001
  /// </summary>
  public sealed partial class ForbidCardDtoProto : pb::IMessage<ForbidCardDtoProto> {
    private static readonly pb::MessageParser<ForbidCardDtoProto> _parser = new pb::MessageParser<ForbidCardDtoProto>(() => new ForbidCardDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ForbidCardDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForbidCardDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForbidCardDtoProto(ForbidCardDtoProto other) : this() {
      cardId_ = other.cardId_;
      unBlockTime_ = other.unBlockTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForbidCardDtoProto Clone() {
      return new ForbidCardDtoProto(this);
    }

    /// <summary>Field number for the "cardId" field.</summary>
    public const int CardIdFieldNumber = 1;
    private int cardId_;
    /// <summary>
    ///卡牌 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "unBlockTime" field.</summary>
    public const int UnBlockTimeFieldNumber = 2;
    private int unBlockTime_;
    /// <summary>
    ///解封时间(unix 时间戳)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnBlockTime {
      get { return unBlockTime_; }
      set {
        unBlockTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ForbidCardDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ForbidCardDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardId != other.CardId) return false;
      if (UnBlockTime != other.UnBlockTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (UnBlockTime != 0) hash ^= UnBlockTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CardId);
      }
      if (UnBlockTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UnBlockTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardId);
      }
      if (UnBlockTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnBlockTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ForbidCardDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.UnBlockTime != 0) {
        UnBlockTime = other.UnBlockTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CardId = input.ReadInt32();
            break;
          }
          case 16: {
            UnBlockTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 战斗卡牌(其他数据待定)		msgId=178002
  /// </summary>
  public sealed partial class FightCardDtoProto : pb::IMessage<FightCardDtoProto> {
    private static readonly pb::MessageParser<FightCardDtoProto> _parser = new pb::MessageParser<FightCardDtoProto>(() => new FightCardDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FightCardDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightCardDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightCardDtoProto(FightCardDtoProto other) : this() {
      cardId_ = other.cardId_;
      raiseLv_ = other.raiseLv_;
      influence_ = other.influence_;
      hp_ = other.hp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightCardDtoProto Clone() {
      return new FightCardDtoProto(this);
    }

    /// <summary>Field number for the "cardId" field.</summary>
    public const int CardIdFieldNumber = 1;
    private int cardId_;
    /// <summary>
    ///卡牌 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "raiseLv" field.</summary>
    public const int RaiseLvFieldNumber = 2;
    private int raiseLv_;
    /// <summary>
    ///卡牌升华（只读）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RaiseLv {
      get { return raiseLv_; }
      set {
        raiseLv_ = value;
      }
    }

    /// <summary>Field number for the "influence" field.</summary>
    public const int InfluenceFieldNumber = 3;
    private long influence_;
    /// <summary>
    ///影响力（只读）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Influence {
      get { return influence_; }
      set {
        influence_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 4;
    private long hp_;
    /// <summary>
    ///血量（初始和最大血量为影响力）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FightCardDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FightCardDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardId != other.CardId) return false;
      if (RaiseLv != other.RaiseLv) return false;
      if (Influence != other.Influence) return false;
      if (Hp != other.Hp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (RaiseLv != 0) hash ^= RaiseLv.GetHashCode();
      if (Influence != 0L) hash ^= Influence.GetHashCode();
      if (Hp != 0L) hash ^= Hp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CardId);
      }
      if (RaiseLv != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RaiseLv);
      }
      if (Influence != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Influence);
      }
      if (Hp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Hp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardId);
      }
      if (RaiseLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RaiseLv);
      }
      if (Influence != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Influence);
      }
      if (Hp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Hp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FightCardDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.RaiseLv != 0) {
        RaiseLv = other.RaiseLv;
      }
      if (other.Influence != 0L) {
        Influence = other.Influence;
      }
      if (other.Hp != 0L) {
        Hp = other.Hp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CardId = input.ReadInt32();
            break;
          }
          case 16: {
            RaiseLv = input.ReadInt32();
            break;
          }
          case 24: {
            Influence = input.ReadInt64();
            break;
          }
          case 32: {
            Hp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 敌人信息		msgId=178003
  /// </summary>
  public sealed partial class EnemyInfoDtoProto : pb::IMessage<EnemyInfoDtoProto> {
    private static readonly pb::MessageParser<EnemyInfoDtoProto> _parser = new pb::MessageParser<EnemyInfoDtoProto>(() => new EnemyInfoDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnemyInfoDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnemyInfoDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnemyInfoDtoProto(EnemyInfoDtoProto other) : this() {
      playerId_ = other.playerId_;
      name_ = other.name_;
      score_ = other.score_;
      cardNum_ = other.cardNum_;
      lv_ = other.lv_;
      avatarId_ = other.avatarId_;
      influence_ = other.influence_;
      rank_ = other.rank_;
      slotIds_ = other.slotIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnemyInfoDtoProto Clone() {
      return new EnemyInfoDtoProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    /// <summary>
    ///玩家 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///玩家名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    /// <summary>
    ///论战分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "cardNum" field.</summary>
    public const int CardNumFieldNumber = 4;
    private int cardNum_;
    /// <summary>
    ///卡牌数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardNum {
      get { return cardNum_; }
      set {
        cardNum_ = value;
      }
    }

    /// <summary>Field number for the "lv" field.</summary>
    public const int LvFieldNumber = 5;
    private int lv_;
    /// <summary>
    ///敌方等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lv {
      get { return lv_; }
      set {
        lv_ = value;
      }
    }

    /// <summary>Field number for the "avatarId" field.</summary>
    public const int AvatarIdFieldNumber = 6;
    private int avatarId_;
    /// <summary>
    ///头像 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvatarId {
      get { return avatarId_; }
      set {
        avatarId_ = value;
      }
    }

    /// <summary>Field number for the "influence" field.</summary>
    public const int InfluenceFieldNumber = 7;
    private long influence_;
    /// <summary>
    ///影响力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Influence {
      get { return influence_; }
      set {
        influence_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 8;
    private int rank_;
    /// <summary>
    ///当前排行(0 未上榜)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "slotIds" field.</summary>
    public const int SlotIdsFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_slotIds_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> slotIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///龙骨图集
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SlotIds {
      get { return slotIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnemyInfoDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnemyInfoDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Name != other.Name) return false;
      if (Score != other.Score) return false;
      if (CardNum != other.CardNum) return false;
      if (Lv != other.Lv) return false;
      if (AvatarId != other.AvatarId) return false;
      if (Influence != other.Influence) return false;
      if (Rank != other.Rank) return false;
      if(!slotIds_.Equals(other.slotIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (CardNum != 0) hash ^= CardNum.GetHashCode();
      if (Lv != 0) hash ^= Lv.GetHashCode();
      if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
      if (Influence != 0L) hash ^= Influence.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      hash ^= slotIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (CardNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CardNum);
      }
      if (Lv != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Lv);
      }
      if (AvatarId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AvatarId);
      }
      if (Influence != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Influence);
      }
      if (Rank != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Rank);
      }
      slotIds_.WriteTo(output, _repeated_slotIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (CardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardNum);
      }
      if (Lv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv);
      }
      if (AvatarId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarId);
      }
      if (Influence != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Influence);
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      size += slotIds_.CalculateSize(_repeated_slotIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnemyInfoDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.CardNum != 0) {
        CardNum = other.CardNum;
      }
      if (other.Lv != 0) {
        Lv = other.Lv;
      }
      if (other.AvatarId != 0) {
        AvatarId = other.AvatarId;
      }
      if (other.Influence != 0L) {
        Influence = other.Influence;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      slotIds_.Add(other.slotIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            CardNum = input.ReadInt32();
            break;
          }
          case 40: {
            Lv = input.ReadInt32();
            break;
          }
          case 48: {
            AvatarId = input.ReadInt32();
            break;
          }
          case 56: {
            Influence = input.ReadInt64();
            break;
          }
          case 64: {
            Rank = input.ReadInt32();
            break;
          }
          case 74: {
            slotIds_.AddEntriesFrom(input, _repeated_slotIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 战斗快照		msgId=178004
  /// </summary>
  public sealed partial class FightSnapshotDtoProto : pb::IMessage<FightSnapshotDtoProto> {
    private static readonly pb::MessageParser<FightSnapshotDtoProto> _parser = new pb::MessageParser<FightSnapshotDtoProto>(() => new FightSnapshotDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FightSnapshotDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightSnapshotDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightSnapshotDtoProto(FightSnapshotDtoProto other) : this() {
      fightType_ = other.fightType_;
      buyAttrId_ = other.buyAttrId_;
      enemyInfo_ = other.enemyInfo_ != null ? other.enemyInfo_.Clone() : null;
      waitCards_ = other.waitCards_.Clone();
      myCard_ = other.myCard_ != null ? other.myCard_.Clone() : null;
      continueFinishNum_ = other.continueFinishNum_;
      tempAttr_ = other.tempAttr_ != null ? other.tempAttr_.Clone() : null;
      attrCommodties_ = other.attrCommodties_.Clone();
      enemyCard_ = other.enemyCard_ != null ? other.enemyCard_.Clone() : null;
      enemyRemainCardNum_ = other.enemyRemainCardNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightSnapshotDtoProto Clone() {
      return new FightSnapshotDtoProto(this);
    }

    /// <summary>Field number for the "fightType" field.</summary>
    public const int FightTypeFieldNumber = 1;
    private int fightType_;
    /// <summary>
    ///战斗类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FightType {
      get { return fightType_; }
      set {
        fightType_ = value;
      }
    }

    /// <summary>Field number for the "buyAttrId" field.</summary>
    public const int BuyAttrIdFieldNumber = 2;
    private int buyAttrId_;
    /// <summary>
    ///当前回合购买属性的 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyAttrId {
      get { return buyAttrId_; }
      set {
        buyAttrId_ = value;
      }
    }

    /// <summary>Field number for the "enemyInfo" field.</summary>
    public const int EnemyInfoFieldNumber = 3;
    private global::Com.Proto.YamunMessage.EnemyInfoDtoProto enemyInfo_;
    /// <summary>
    ///敌方信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.EnemyInfoDtoProto EnemyInfo {
      get { return enemyInfo_; }
      set {
        enemyInfo_ = value;
      }
    }

    /// <summary>Field number for the "waitCards" field.</summary>
    public const int WaitCardsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_waitCards_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> waitCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///敌方等待出战卡牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> WaitCards {
      get { return waitCards_; }
    }

    /// <summary>Field number for the "myCard" field.</summary>
    public const int MyCardFieldNumber = 5;
    private global::Com.Proto.YamunMessage.FightCardDtoProto myCard_;
    /// <summary>
    ///我的出战卡牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.FightCardDtoProto MyCard {
      get { return myCard_; }
      set {
        myCard_ = value;
      }
    }

    /// <summary>Field number for the "continueFinishNum" field.</summary>
    public const int ContinueFinishNumFieldNumber = 6;
    private int continueFinishNum_;
    /// <summary>
    ///当前连胜回合数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContinueFinishNum {
      get { return continueFinishNum_; }
      set {
        continueFinishNum_ = value;
      }
    }

    /// <summary>Field number for the "tempAttr" field.</summary>
    public const int TempAttrFieldNumber = 7;
    private global::Com.Proto.YamunMessage.FightTempAttrDtoProto tempAttr_;
    /// <summary>
    ///临时属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.FightTempAttrDtoProto TempAttr {
      get { return tempAttr_; }
      set {
        tempAttr_ = value;
      }
    }

    /// <summary>Field number for the "attrCommodties" field.</summary>
    public const int AttrCommodtiesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Com.Proto.YamunMessage.FightBuffBonusDtoProto> _repeated_attrCommodties_codec
        = pb::FieldCodec.ForMessage(66, global::Com.Proto.YamunMessage.FightBuffBonusDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.YamunMessage.FightBuffBonusDtoProto> attrCommodties_ = new pbc::RepeatedField<global::Com.Proto.YamunMessage.FightBuffBonusDtoProto>();
    /// <summary>
    ///当前属性商品列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.YamunMessage.FightBuffBonusDtoProto> AttrCommodties {
      get { return attrCommodties_; }
    }

    /// <summary>Field number for the "enemyCard" field.</summary>
    public const int EnemyCardFieldNumber = 9;
    private global::Com.Proto.YamunMessage.FightCardDtoProto enemyCard_;
    /// <summary>
    ///敌方当前出战卡牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.FightCardDtoProto EnemyCard {
      get { return enemyCard_; }
      set {
        enemyCard_ = value;
      }
    }

    /// <summary>Field number for the "enemyRemainCardNum" field.</summary>
    public const int EnemyRemainCardNumFieldNumber = 10;
    private int enemyRemainCardNum_;
    /// <summary>
    ///敌方剩余卡牌数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnemyRemainCardNum {
      get { return enemyRemainCardNum_; }
      set {
        enemyRemainCardNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FightSnapshotDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FightSnapshotDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FightType != other.FightType) return false;
      if (BuyAttrId != other.BuyAttrId) return false;
      if (!object.Equals(EnemyInfo, other.EnemyInfo)) return false;
      if(!waitCards_.Equals(other.waitCards_)) return false;
      if (!object.Equals(MyCard, other.MyCard)) return false;
      if (ContinueFinishNum != other.ContinueFinishNum) return false;
      if (!object.Equals(TempAttr, other.TempAttr)) return false;
      if(!attrCommodties_.Equals(other.attrCommodties_)) return false;
      if (!object.Equals(EnemyCard, other.EnemyCard)) return false;
      if (EnemyRemainCardNum != other.EnemyRemainCardNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FightType != 0) hash ^= FightType.GetHashCode();
      if (BuyAttrId != 0) hash ^= BuyAttrId.GetHashCode();
      if (enemyInfo_ != null) hash ^= EnemyInfo.GetHashCode();
      hash ^= waitCards_.GetHashCode();
      if (myCard_ != null) hash ^= MyCard.GetHashCode();
      if (ContinueFinishNum != 0) hash ^= ContinueFinishNum.GetHashCode();
      if (tempAttr_ != null) hash ^= TempAttr.GetHashCode();
      hash ^= attrCommodties_.GetHashCode();
      if (enemyCard_ != null) hash ^= EnemyCard.GetHashCode();
      if (EnemyRemainCardNum != 0) hash ^= EnemyRemainCardNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FightType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FightType);
      }
      if (BuyAttrId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuyAttrId);
      }
      if (enemyInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EnemyInfo);
      }
      waitCards_.WriteTo(output, _repeated_waitCards_codec);
      if (myCard_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MyCard);
      }
      if (ContinueFinishNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ContinueFinishNum);
      }
      if (tempAttr_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TempAttr);
      }
      attrCommodties_.WriteTo(output, _repeated_attrCommodties_codec);
      if (enemyCard_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EnemyCard);
      }
      if (EnemyRemainCardNum != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EnemyRemainCardNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FightType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FightType);
      }
      if (BuyAttrId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyAttrId);
      }
      if (enemyInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemyInfo);
      }
      size += waitCards_.CalculateSize(_repeated_waitCards_codec);
      if (myCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MyCard);
      }
      if (ContinueFinishNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContinueFinishNum);
      }
      if (tempAttr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TempAttr);
      }
      size += attrCommodties_.CalculateSize(_repeated_attrCommodties_codec);
      if (enemyCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemyCard);
      }
      if (EnemyRemainCardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnemyRemainCardNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FightSnapshotDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.FightType != 0) {
        FightType = other.FightType;
      }
      if (other.BuyAttrId != 0) {
        BuyAttrId = other.BuyAttrId;
      }
      if (other.enemyInfo_ != null) {
        if (enemyInfo_ == null) {
          EnemyInfo = new global::Com.Proto.YamunMessage.EnemyInfoDtoProto();
        }
        EnemyInfo.MergeFrom(other.EnemyInfo);
      }
      waitCards_.Add(other.waitCards_);
      if (other.myCard_ != null) {
        if (myCard_ == null) {
          MyCard = new global::Com.Proto.YamunMessage.FightCardDtoProto();
        }
        MyCard.MergeFrom(other.MyCard);
      }
      if (other.ContinueFinishNum != 0) {
        ContinueFinishNum = other.ContinueFinishNum;
      }
      if (other.tempAttr_ != null) {
        if (tempAttr_ == null) {
          TempAttr = new global::Com.Proto.YamunMessage.FightTempAttrDtoProto();
        }
        TempAttr.MergeFrom(other.TempAttr);
      }
      attrCommodties_.Add(other.attrCommodties_);
      if (other.enemyCard_ != null) {
        if (enemyCard_ == null) {
          EnemyCard = new global::Com.Proto.YamunMessage.FightCardDtoProto();
        }
        EnemyCard.MergeFrom(other.EnemyCard);
      }
      if (other.EnemyRemainCardNum != 0) {
        EnemyRemainCardNum = other.EnemyRemainCardNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FightType = input.ReadInt32();
            break;
          }
          case 16: {
            BuyAttrId = input.ReadInt32();
            break;
          }
          case 26: {
            if (enemyInfo_ == null) {
              EnemyInfo = new global::Com.Proto.YamunMessage.EnemyInfoDtoProto();
            }
            input.ReadMessage(EnemyInfo);
            break;
          }
          case 34:
          case 32: {
            waitCards_.AddEntriesFrom(input, _repeated_waitCards_codec);
            break;
          }
          case 42: {
            if (myCard_ == null) {
              MyCard = new global::Com.Proto.YamunMessage.FightCardDtoProto();
            }
            input.ReadMessage(MyCard);
            break;
          }
          case 48: {
            ContinueFinishNum = input.ReadInt32();
            break;
          }
          case 58: {
            if (tempAttr_ == null) {
              TempAttr = new global::Com.Proto.YamunMessage.FightTempAttrDtoProto();
            }
            input.ReadMessage(TempAttr);
            break;
          }
          case 66: {
            attrCommodties_.AddEntriesFrom(input, _repeated_attrCommodties_codec);
            break;
          }
          case 74: {
            if (enemyCard_ == null) {
              EnemyCard = new global::Com.Proto.YamunMessage.FightCardDtoProto();
            }
            input.ReadMessage(EnemyCard);
            break;
          }
          case 80: {
            EnemyRemainCardNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 论战协议Buff加成		msgId=178005
  /// </summary>
  public sealed partial class FightBuffBonusDtoProto : pb::IMessage<FightBuffBonusDtoProto> {
    private static readonly pb::MessageParser<FightBuffBonusDtoProto> _parser = new pb::MessageParser<FightBuffBonusDtoProto>(() => new FightBuffBonusDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FightBuffBonusDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightBuffBonusDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightBuffBonusDtoProto(FightBuffBonusDtoProto other) : this() {
      configId_ = other.configId_;
      addNum_ = other.addNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightBuffBonusDtoProto Clone() {
      return new FightBuffBonusDtoProto(this);
    }

    /// <summary>Field number for the "configId" field.</summary>
    public const int ConfigIdFieldNumber = 1;
    private int configId_;
    /// <summary>
    ///商品配置(commodityId) id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigId {
      get { return configId_; }
      set {
        configId_ = value;
      }
    }

    /// <summary>Field number for the "addNum" field.</summary>
    public const int AddNumFieldNumber = 2;
    private int addNum_;
    /// <summary>
    ///属性加成数量(万分比)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AddNum {
      get { return addNum_; }
      set {
        addNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FightBuffBonusDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FightBuffBonusDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigId != other.ConfigId) return false;
      if (AddNum != other.AddNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
      if (AddNum != 0) hash ^= AddNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigId);
      }
      if (AddNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AddNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
      }
      if (AddNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FightBuffBonusDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.ConfigId != 0) {
        ConfigId = other.ConfigId;
      }
      if (other.AddNum != 0) {
        AddNum = other.AddNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigId = input.ReadInt32();
            break;
          }
          case 16: {
            AddNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 回合战斗结果		msgId=178006
  /// </summary>
  public sealed partial class RoundResultDtoProto : pb::IMessage<RoundResultDtoProto> {
    private static readonly pb::MessageParser<RoundResultDtoProto> _parser = new pb::MessageParser<RoundResultDtoProto>(() => new RoundResultDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoundResultDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundResultDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundResultDtoProto(RoundResultDtoProto other) : this() {
      enemyReduceHp_ = other.enemyReduceHp_;
      myReduceHp_ = other.myReduceHp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundResultDtoProto Clone() {
      return new RoundResultDtoProto(this);
    }

    /// <summary>Field number for the "enemyReduceHp" field.</summary>
    public const int EnemyReduceHpFieldNumber = 1;
    private long enemyReduceHp_;
    /// <summary>
    ///敌人减少的生命值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnemyReduceHp {
      get { return enemyReduceHp_; }
      set {
        enemyReduceHp_ = value;
      }
    }

    /// <summary>Field number for the "myReduceHp" field.</summary>
    public const int MyReduceHpFieldNumber = 2;
    private long myReduceHp_;
    /// <summary>
    ///我方减少的生命值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MyReduceHp {
      get { return myReduceHp_; }
      set {
        myReduceHp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoundResultDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoundResultDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnemyReduceHp != other.EnemyReduceHp) return false;
      if (MyReduceHp != other.MyReduceHp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnemyReduceHp != 0L) hash ^= EnemyReduceHp.GetHashCode();
      if (MyReduceHp != 0L) hash ^= MyReduceHp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnemyReduceHp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EnemyReduceHp);
      }
      if (MyReduceHp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MyReduceHp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnemyReduceHp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnemyReduceHp);
      }
      if (MyReduceHp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MyReduceHp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoundResultDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.EnemyReduceHp != 0L) {
        EnemyReduceHp = other.EnemyReduceHp;
      }
      if (other.MyReduceHp != 0L) {
        MyReduceHp = other.MyReduceHp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnemyReduceHp = input.ReadInt64();
            break;
          }
          case 16: {
            MyReduceHp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 防御日志		msgId=178007
  /// </summary>
  public sealed partial class DefenseLogDtoProto : pb::IMessage<DefenseLogDtoProto> {
    private static readonly pb::MessageParser<DefenseLogDtoProto> _parser = new pb::MessageParser<DefenseLogDtoProto>(() => new DefenseLogDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DefenseLogDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefenseLogDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefenseLogDtoProto(DefenseLogDtoProto other) : this() {
      enemyId_ = other.enemyId_;
      name_ = other.name_;
      defeatCardNun_ = other.defeatCardNun_;
      changeScore_ = other.changeScore_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefenseLogDtoProto Clone() {
      return new DefenseLogDtoProto(this);
    }

    /// <summary>Field number for the "enemyId" field.</summary>
    public const int EnemyIdFieldNumber = 1;
    private long enemyId_;
    /// <summary>
    ///敌方 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnemyId {
      get { return enemyId_; }
      set {
        enemyId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///敌方名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "defeatCardNun" field.</summary>
    public const int DefeatCardNunFieldNumber = 3;
    private int defeatCardNun_;
    /// <summary>
    ///击败卡牌数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefeatCardNun {
      get { return defeatCardNun_; }
      set {
        defeatCardNun_ = value;
      }
    }

    /// <summary>Field number for the "changeScore" field.</summary>
    public const int ChangeScoreFieldNumber = 4;
    private int changeScore_;
    /// <summary>
    ///我方分数变化
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChangeScore {
      get { return changeScore_; }
      set {
        changeScore_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 5;
    private int time_;
    /// <summary>
    ///战斗时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DefenseLogDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DefenseLogDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnemyId != other.EnemyId) return false;
      if (Name != other.Name) return false;
      if (DefeatCardNun != other.DefeatCardNun) return false;
      if (ChangeScore != other.ChangeScore) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnemyId != 0L) hash ^= EnemyId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DefeatCardNun != 0) hash ^= DefeatCardNun.GetHashCode();
      if (ChangeScore != 0) hash ^= ChangeScore.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnemyId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EnemyId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (DefeatCardNun != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefeatCardNun);
      }
      if (ChangeScore != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ChangeScore);
      }
      if (Time != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnemyId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnemyId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DefeatCardNun != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefeatCardNun);
      }
      if (ChangeScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChangeScore);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DefenseLogDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.EnemyId != 0L) {
        EnemyId = other.EnemyId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DefeatCardNun != 0) {
        DefeatCardNun = other.DefeatCardNun;
      }
      if (other.ChangeScore != 0) {
        ChangeScore = other.ChangeScore;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnemyId = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            DefeatCardNun = input.ReadInt32();
            break;
          }
          case 32: {
            ChangeScore = input.ReadInt32();
            break;
          }
          case 40: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 仇人日志		msgId=178008
  /// </summary>
  public sealed partial class EnemyLogDtoProto : pb::IMessage<EnemyLogDtoProto> {
    private static readonly pb::MessageParser<EnemyLogDtoProto> _parser = new pb::MessageParser<EnemyLogDtoProto>(() => new EnemyLogDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnemyLogDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnemyLogDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnemyLogDtoProto(EnemyLogDtoProto other) : this() {
      enemyId_ = other.enemyId_;
      name_ = other.name_;
      lv_ = other.lv_;
      influence_ = other.influence_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnemyLogDtoProto Clone() {
      return new EnemyLogDtoProto(this);
    }

    /// <summary>Field number for the "enemyId" field.</summary>
    public const int EnemyIdFieldNumber = 1;
    private long enemyId_;
    /// <summary>
    ///玩家 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnemyId {
      get { return enemyId_; }
      set {
        enemyId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///玩家名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lv" field.</summary>
    public const int LvFieldNumber = 3;
    private int lv_;
    /// <summary>
    ///等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lv {
      get { return lv_; }
      set {
        lv_ = value;
      }
    }

    /// <summary>Field number for the "influence" field.</summary>
    public const int InfluenceFieldNumber = 4;
    private long influence_;
    /// <summary>
    ///影响力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Influence {
      get { return influence_; }
      set {
        influence_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 5;
    private int time_;
    /// <summary>
    ///发生时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnemyLogDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnemyLogDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnemyId != other.EnemyId) return false;
      if (Name != other.Name) return false;
      if (Lv != other.Lv) return false;
      if (Influence != other.Influence) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnemyId != 0L) hash ^= EnemyId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Lv != 0) hash ^= Lv.GetHashCode();
      if (Influence != 0L) hash ^= Influence.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnemyId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EnemyId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Lv != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Lv);
      }
      if (Influence != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Influence);
      }
      if (Time != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnemyId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnemyId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Lv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv);
      }
      if (Influence != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Influence);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnemyLogDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.EnemyId != 0L) {
        EnemyId = other.EnemyId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Lv != 0) {
        Lv = other.Lv;
      }
      if (other.Influence != 0L) {
        Influence = other.Influence;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnemyId = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Lv = input.ReadInt32();
            break;
          }
          case 32: {
            Influence = input.ReadInt64();
            break;
          }
          case 40: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 战斗临时(购买)属性		msgId=178009
  /// </summary>
  public sealed partial class FightTempAttrDtoProto : pb::IMessage<FightTempAttrDtoProto> {
    private static readonly pb::MessageParser<FightTempAttrDtoProto> _parser = new pb::MessageParser<FightTempAttrDtoProto>(() => new FightTempAttrDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FightTempAttrDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightTempAttrDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightTempAttrDtoProto(FightTempAttrDtoProto other) : this() {
      noInjuryBuff_ = other.noInjuryBuff_;
      attackBuff_ = other.attackBuff_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightTempAttrDtoProto Clone() {
      return new FightTempAttrDtoProto(this);
    }

    /// <summary>Field number for the "noInjuryBuff" field.</summary>
    public const int NoInjuryBuffFieldNumber = 1;
    private int noInjuryBuff_;
    /// <summary>
    ///免伤buff（x100）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NoInjuryBuff {
      get { return noInjuryBuff_; }
      set {
        noInjuryBuff_ = value;
      }
    }

    /// <summary>Field number for the "attackBuff" field.</summary>
    public const int AttackBuffFieldNumber = 2;
    private int attackBuff_;
    /// <summary>
    ///攻击buff（x100）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackBuff {
      get { return attackBuff_; }
      set {
        attackBuff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FightTempAttrDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FightTempAttrDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NoInjuryBuff != other.NoInjuryBuff) return false;
      if (AttackBuff != other.AttackBuff) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NoInjuryBuff != 0) hash ^= NoInjuryBuff.GetHashCode();
      if (AttackBuff != 0) hash ^= AttackBuff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NoInjuryBuff != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NoInjuryBuff);
      }
      if (AttackBuff != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AttackBuff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NoInjuryBuff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoInjuryBuff);
      }
      if (AttackBuff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackBuff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FightTempAttrDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.NoInjuryBuff != 0) {
        NoInjuryBuff = other.NoInjuryBuff;
      }
      if (other.AttackBuff != 0) {
        AttackBuff = other.AttackBuff;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NoInjuryBuff = input.ReadInt32();
            break;
          }
          case 16: {
            AttackBuff = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 自动战斗回合结果		msgId=178010
  /// </summary>
  public sealed partial class AutoRoundResultDtoProto : pb::IMessage<AutoRoundResultDtoProto> {
    private static readonly pb::MessageParser<AutoRoundResultDtoProto> _parser = new pb::MessageParser<AutoRoundResultDtoProto>(() => new AutoRoundResultDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AutoRoundResultDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoRoundResultDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoRoundResultDtoProto(AutoRoundResultDtoProto other) : this() {
      enemyCardId_ = other.enemyCardId_;
      reduceHp_ = other.reduceHp_;
      changeScore_ = other.changeScore_;
      isWin_ = other.isWin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoRoundResultDtoProto Clone() {
      return new AutoRoundResultDtoProto(this);
    }

    /// <summary>Field number for the "enemyCardId" field.</summary>
    public const int EnemyCardIdFieldNumber = 1;
    private int enemyCardId_;
    /// <summary>
    ///敌方卡牌 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnemyCardId {
      get { return enemyCardId_; }
      set {
        enemyCardId_ = value;
      }
    }

    /// <summary>Field number for the "reduceHp" field.</summary>
    public const int ReduceHpFieldNumber = 2;
    private long reduceHp_;
    /// <summary>
    ///我方减少的血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReduceHp {
      get { return reduceHp_; }
      set {
        reduceHp_ = value;
      }
    }

    /// <summary>Field number for the "changeScore" field.</summary>
    public const int ChangeScoreFieldNumber = 3;
    private int changeScore_;
    /// <summary>
    ///分数变化
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChangeScore {
      get { return changeScore_; }
      set {
        changeScore_ = value;
      }
    }

    /// <summary>Field number for the "isWin" field.</summary>
    public const int IsWinFieldNumber = 4;
    private bool isWin_;
    /// <summary>
    ///是否胜利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWin {
      get { return isWin_; }
      set {
        isWin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AutoRoundResultDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AutoRoundResultDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnemyCardId != other.EnemyCardId) return false;
      if (ReduceHp != other.ReduceHp) return false;
      if (ChangeScore != other.ChangeScore) return false;
      if (IsWin != other.IsWin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnemyCardId != 0) hash ^= EnemyCardId.GetHashCode();
      if (ReduceHp != 0L) hash ^= ReduceHp.GetHashCode();
      if (ChangeScore != 0) hash ^= ChangeScore.GetHashCode();
      if (IsWin != false) hash ^= IsWin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnemyCardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EnemyCardId);
      }
      if (ReduceHp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReduceHp);
      }
      if (ChangeScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChangeScore);
      }
      if (IsWin != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnemyCardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnemyCardId);
      }
      if (ReduceHp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReduceHp);
      }
      if (ChangeScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChangeScore);
      }
      if (IsWin != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AutoRoundResultDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.EnemyCardId != 0) {
        EnemyCardId = other.EnemyCardId;
      }
      if (other.ReduceHp != 0L) {
        ReduceHp = other.ReduceHp;
      }
      if (other.ChangeScore != 0) {
        ChangeScore = other.ChangeScore;
      }
      if (other.IsWin != false) {
        IsWin = other.IsWin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnemyCardId = input.ReadInt32();
            break;
          }
          case 16: {
            ReduceHp = input.ReadInt64();
            break;
          }
          case 24: {
            ChangeScore = input.ReadInt32();
            break;
          }
          case 32: {
            IsWin = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 高分记录信息		msgId=178011
  /// </summary>
  public sealed partial class HighScoreRecordDtoProto : pb::IMessage<HighScoreRecordDtoProto> {
    private static readonly pb::MessageParser<HighScoreRecordDtoProto> _parser = new pb::MessageParser<HighScoreRecordDtoProto>(() => new HighScoreRecordDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HighScoreRecordDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighScoreRecordDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighScoreRecordDtoProto(HighScoreRecordDtoProto other) : this() {
      playerId_ = other.playerId_;
      name_ = other.name_;
      loser_ = other.loser_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighScoreRecordDtoProto Clone() {
      return new HighScoreRecordDtoProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    /// <summary>
    ///玩家 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///玩家名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loser" field.</summary>
    public const int LoserFieldNumber = 3;
    private string loser_ = "";
    /// <summary>
    ///败者名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Loser {
      get { return loser_; }
      set {
        loser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 4;
    private int num_;
    /// <summary>
    ///击败卡牌数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HighScoreRecordDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HighScoreRecordDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Name != other.Name) return false;
      if (Loser != other.Loser) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Loser.Length != 0) hash ^= Loser.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Loser.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Loser);
      }
      if (Num != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Loser.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Loser);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HighScoreRecordDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Loser.Length != 0) {
        Loser = other.Loser;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Loser = input.ReadString();
            break;
          }
          case 32: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求别院论战数据		msgId=178101
  /// </summary>
  public sealed partial class ReqYamunInfoProto : pb::IMessage<ReqYamunInfoProto> {
    private static readonly pb::MessageParser<ReqYamunInfoProto> _parser = new pb::MessageParser<ReqYamunInfoProto>(() => new ReqYamunInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqYamunInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqYamunInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqYamunInfoProto(ReqYamunInfoProto other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqYamunInfoProto Clone() {
      return new ReqYamunInfoProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqYamunInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqYamunInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqYamunInfoProto other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求匹配		msgId=178102
  /// </summary>
  public sealed partial class ReqMatchEnemyProto : pb::IMessage<ReqMatchEnemyProto> {
    private static readonly pb::MessageParser<ReqMatchEnemyProto> _parser = new pb::MessageParser<ReqMatchEnemyProto>(() => new ReqMatchEnemyProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqMatchEnemyProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqMatchEnemyProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqMatchEnemyProto(ReqMatchEnemyProto other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqMatchEnemyProto Clone() {
      return new ReqMatchEnemyProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqMatchEnemyProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqMatchEnemyProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqMatchEnemyProto other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求购买属性		msgId=178103
  /// </summary>
  public sealed partial class ReqBuyAttrProto : pb::IMessage<ReqBuyAttrProto> {
    private static readonly pb::MessageParser<ReqBuyAttrProto> _parser = new pb::MessageParser<ReqBuyAttrProto>(() => new ReqBuyAttrProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqBuyAttrProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqBuyAttrProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqBuyAttrProto(ReqBuyAttrProto other) : this() {
      buyAttrId_ = other.buyAttrId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqBuyAttrProto Clone() {
      return new ReqBuyAttrProto(this);
    }

    /// <summary>Field number for the "buyAttrId" field.</summary>
    public const int BuyAttrIdFieldNumber = 1;
    private int buyAttrId_;
    /// <summary>
    ///购买选项的属性选项
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyAttrId {
      get { return buyAttrId_; }
      set {
        buyAttrId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqBuyAttrProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqBuyAttrProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuyAttrId != other.BuyAttrId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuyAttrId != 0) hash ^= BuyAttrId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuyAttrId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuyAttrId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuyAttrId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyAttrId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqBuyAttrProto other) {
      if (other == null) {
        return;
      }
      if (other.BuyAttrId != 0) {
        BuyAttrId = other.BuyAttrId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuyAttrId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求战斗		msgId=178104
  /// </summary>
  public sealed partial class ReqFightEnemyProto : pb::IMessage<ReqFightEnemyProto> {
    private static readonly pb::MessageParser<ReqFightEnemyProto> _parser = new pb::MessageParser<ReqFightEnemyProto>(() => new ReqFightEnemyProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqFightEnemyProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqFightEnemyProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqFightEnemyProto(ReqFightEnemyProto other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqFightEnemyProto Clone() {
      return new ReqFightEnemyProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqFightEnemyProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqFightEnemyProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqFightEnemyProto other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求自动战斗		msgId=178105
  /// </summary>
  public sealed partial class ReqAutoFightProto : pb::IMessage<ReqAutoFightProto> {
    private static readonly pb::MessageParser<ReqAutoFightProto> _parser = new pb::MessageParser<ReqAutoFightProto>(() => new ReqAutoFightProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqAutoFightProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAutoFightProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAutoFightProto(ReqAutoFightProto other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqAutoFightProto Clone() {
      return new ReqAutoFightProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqAutoFightProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqAutoFightProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqAutoFightProto other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求高分玩家记录		msgId=178106
  /// </summary>
  public sealed partial class ReqHighScoreRecordProto : pb::IMessage<ReqHighScoreRecordProto> {
    private static readonly pb::MessageParser<ReqHighScoreRecordProto> _parser = new pb::MessageParser<ReqHighScoreRecordProto>(() => new ReqHighScoreRecordProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqHighScoreRecordProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqHighScoreRecordProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqHighScoreRecordProto(ReqHighScoreRecordProto other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqHighScoreRecordProto Clone() {
      return new ReqHighScoreRecordProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqHighScoreRecordProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqHighScoreRecordProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqHighScoreRecordProto other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求防守日志		msgId=178107
  /// </summary>
  public sealed partial class ReqDefenseLogProto : pb::IMessage<ReqDefenseLogProto> {
    private static readonly pb::MessageParser<ReqDefenseLogProto> _parser = new pb::MessageParser<ReqDefenseLogProto>(() => new ReqDefenseLogProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqDefenseLogProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqDefenseLogProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqDefenseLogProto(ReqDefenseLogProto other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqDefenseLogProto Clone() {
      return new ReqDefenseLogProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqDefenseLogProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqDefenseLogProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqDefenseLogProto other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求仇人信息		msgId=178108
  /// </summary>
  public sealed partial class ReqEnemyLogInfoProto : pb::IMessage<ReqEnemyLogInfoProto> {
    private static readonly pb::MessageParser<ReqEnemyLogInfoProto> _parser = new pb::MessageParser<ReqEnemyLogInfoProto>(() => new ReqEnemyLogInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqEnemyLogInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqEnemyLogInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqEnemyLogInfoProto(ReqEnemyLogInfoProto other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqEnemyLogInfoProto Clone() {
      return new ReqEnemyLogInfoProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqEnemyLogInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqEnemyLogInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqEnemyLogInfoProto other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求搜寻敌人(只发送一个)		msgId=178109
  /// </summary>
  public sealed partial class ReqSearchEnemyProto : pb::IMessage<ReqSearchEnemyProto> {
    private static readonly pb::MessageParser<ReqSearchEnemyProto> _parser = new pb::MessageParser<ReqSearchEnemyProto>(() => new ReqSearchEnemyProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqSearchEnemyProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSearchEnemyProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSearchEnemyProto(ReqSearchEnemyProto other) : this() {
      playerId_ = other.playerId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSearchEnemyProto Clone() {
      return new ReqSearchEnemyProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    /// <summary>
    ///玩家 id(优先判断)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///玩家名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqSearchEnemyProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqSearchEnemyProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqSearchEnemyProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求复仇		msgId=178110
  /// </summary>
  public sealed partial class ReqRevengeProto : pb::IMessage<ReqRevengeProto> {
    private static readonly pb::MessageParser<ReqRevengeProto> _parser = new pb::MessageParser<ReqRevengeProto>(() => new ReqRevengeProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqRevengeProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqRevengeProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqRevengeProto(ReqRevengeProto other) : this() {
      playerId_ = other.playerId_;
      cardId_ = other.cardId_;
      fightType_ = other.fightType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqRevengeProto Clone() {
      return new ReqRevengeProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    /// <summary>
    ///复仇对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "cardId" field.</summary>
    public const int CardIdFieldNumber = 2;
    private int cardId_;
    /// <summary>
    ///卡牌id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "fightType" field.</summary>
    public const int FightTypeFieldNumber = 3;
    private int fightType_;
    /// <summary>
    ///战斗类型(2 复仇， 3寻仇，不要问 1 哪里去了，留给匹配了)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FightType {
      get { return fightType_; }
      set {
        fightType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqRevengeProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqRevengeProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (CardId != other.CardId) return false;
      if (FightType != other.FightType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (FightType != 0) hash ^= FightType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (CardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CardId);
      }
      if (FightType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FightType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardId);
      }
      if (FightType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FightType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqRevengeProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.FightType != 0) {
        FightType = other.FightType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 16: {
            CardId = input.ReadInt32();
            break;
          }
          case 24: {
            FightType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求禁用卡牌		msgId=178113
  /// </summary>
  public sealed partial class ReqForbidCardProto : pb::IMessage<ReqForbidCardProto> {
    private static readonly pb::MessageParser<ReqForbidCardProto> _parser = new pb::MessageParser<ReqForbidCardProto>(() => new ReqForbidCardProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqForbidCardProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqForbidCardProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqForbidCardProto(ReqForbidCardProto other) : this() {
      cardList_ = other.cardList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqForbidCardProto Clone() {
      return new ReqForbidCardProto(this);
    }

    /// <summary>Field number for the "cardList" field.</summary>
    public const int CardListFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_cardList_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> cardList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///选择禁用的卡牌列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CardList {
      get { return cardList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqForbidCardProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqForbidCardProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cardList_.Equals(other.cardList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cardList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cardList_.WriteTo(output, _repeated_cardList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cardList_.CalculateSize(_repeated_cardList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqForbidCardProto other) {
      if (other == null) {
        return;
      }
      cardList_.Add(other.cardList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            cardList_.AddEntriesFrom(input, _repeated_cardList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 解除卡牌封禁		msgId=178117
  /// </summary>
  public sealed partial class ReqUnForbidCardProto : pb::IMessage<ReqUnForbidCardProto> {
    private static readonly pb::MessageParser<ReqUnForbidCardProto> _parser = new pb::MessageParser<ReqUnForbidCardProto>(() => new ReqUnForbidCardProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqUnForbidCardProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqUnForbidCardProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqUnForbidCardProto(ReqUnForbidCardProto other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqUnForbidCardProto Clone() {
      return new ReqUnForbidCardProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqUnForbidCardProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqUnForbidCardProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqUnForbidCardProto other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 选择敌方卡牌		msgId=178118
  /// </summary>
  public sealed partial class ReqSelectEnemyCardProto : pb::IMessage<ReqSelectEnemyCardProto> {
    private static readonly pb::MessageParser<ReqSelectEnemyCardProto> _parser = new pb::MessageParser<ReqSelectEnemyCardProto>(() => new ReqSelectEnemyCardProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqSelectEnemyCardProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSelectEnemyCardProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSelectEnemyCardProto(ReqSelectEnemyCardProto other) : this() {
      cardId_ = other.cardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqSelectEnemyCardProto Clone() {
      return new ReqSelectEnemyCardProto(this);
    }

    /// <summary>Field number for the "cardId" field.</summary>
    public const int CardIdFieldNumber = 1;
    private int cardId_;
    /// <summary>
    ///卡牌 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqSelectEnemyCardProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqSelectEnemyCardProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardId != other.CardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqSelectEnemyCardProto other) {
      if (other == null) {
        return;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CardId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回别院论战数据		msgId=178201
  /// </summary>
  public sealed partial class ResYamunInfoProto : pb::IMessage<ResYamunInfoProto> {
    private static readonly pb::MessageParser<ResYamunInfoProto> _parser = new pb::MessageParser<ResYamunInfoProto>(() => new ResYamunInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResYamunInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResYamunInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResYamunInfoProto(ResYamunInfoProto other) : this() {
      score_ = other.score_;
      todayFreeMatchNum_ = other.todayFreeMatchNum_;
      lastMatchFightTime_ = other.lastMatchFightTime_;
      fightItemUseNum_ = other.fightItemUseNum_;
      fightSnapshot_ = other.fightSnapshot_ != null ? other.fightSnapshot_.Clone() : null;
      forbidCards_ = other.forbidCards_.Clone();
      todayRevengeCards_ = other.todayRevengeCards_.Clone();
      matchCardId_ = other.matchCardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResYamunInfoProto Clone() {
      return new ResYamunInfoProto(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private long score_;
    /// <summary>
    ///论战分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "todayFreeMatchNum" field.</summary>
    public const int TodayFreeMatchNumFieldNumber = 2;
    private int todayFreeMatchNum_;
    /// <summary>
    ///今日免费匹配次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TodayFreeMatchNum {
      get { return todayFreeMatchNum_; }
      set {
        todayFreeMatchNum_ = value;
      }
    }

    /// <summary>Field number for the "lastMatchFightTime" field.</summary>
    public const int LastMatchFightTimeFieldNumber = 3;
    private int lastMatchFightTime_;
    /// <summary>
    ///上次匹配战斗结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastMatchFightTime {
      get { return lastMatchFightTime_; }
      set {
        lastMatchFightTime_ = value;
      }
    }

    /// <summary>Field number for the "fightItemUseNum" field.</summary>
    public const int FightItemUseNumFieldNumber = 4;
    private int fightItemUseNum_;
    /// <summary>
    ///切磋令使用次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FightItemUseNum {
      get { return fightItemUseNum_; }
      set {
        fightItemUseNum_ = value;
      }
    }

    /// <summary>Field number for the "fightSnapshot" field.</summary>
    public const int FightSnapshotFieldNumber = 5;
    private global::Com.Proto.YamunMessage.FightSnapshotDtoProto fightSnapshot_;
    /// <summary>
    ///战斗快照(可选值)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.FightSnapshotDtoProto FightSnapshot {
      get { return fightSnapshot_; }
      set {
        fightSnapshot_ = value;
      }
    }

    /// <summary>Field number for the "forbidCards" field.</summary>
    public const int ForbidCardsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Com.Proto.YamunMessage.ForbidCardDtoProto> _repeated_forbidCards_codec
        = pb::FieldCodec.ForMessage(50, global::Com.Proto.YamunMessage.ForbidCardDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.YamunMessage.ForbidCardDtoProto> forbidCards_ = new pbc::RepeatedField<global::Com.Proto.YamunMessage.ForbidCardDtoProto>();
    /// <summary>
    ///封禁的卡牌列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.YamunMessage.ForbidCardDtoProto> ForbidCards {
      get { return forbidCards_; }
    }

    /// <summary>Field number for the "todayRevengeCards" field.</summary>
    public const int TodayRevengeCardsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_todayRevengeCards_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> todayRevengeCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///今日报仇用过的卡牌(复仇,寻仇)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> TodayRevengeCards {
      get { return todayRevengeCards_; }
    }

    /// <summary>Field number for the "matchCardId" field.</summary>
    public const int MatchCardIdFieldNumber = 8;
    private int matchCardId_;
    /// <summary>
    ///当前匹配出战的卡牌(0 为没有可出战卡牌)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatchCardId {
      get { return matchCardId_; }
      set {
        matchCardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResYamunInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResYamunInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      if (TodayFreeMatchNum != other.TodayFreeMatchNum) return false;
      if (LastMatchFightTime != other.LastMatchFightTime) return false;
      if (FightItemUseNum != other.FightItemUseNum) return false;
      if (!object.Equals(FightSnapshot, other.FightSnapshot)) return false;
      if(!forbidCards_.Equals(other.forbidCards_)) return false;
      if(!todayRevengeCards_.Equals(other.todayRevengeCards_)) return false;
      if (MatchCardId != other.MatchCardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (TodayFreeMatchNum != 0) hash ^= TodayFreeMatchNum.GetHashCode();
      if (LastMatchFightTime != 0) hash ^= LastMatchFightTime.GetHashCode();
      if (FightItemUseNum != 0) hash ^= FightItemUseNum.GetHashCode();
      if (fightSnapshot_ != null) hash ^= FightSnapshot.GetHashCode();
      hash ^= forbidCards_.GetHashCode();
      hash ^= todayRevengeCards_.GetHashCode();
      if (MatchCardId != 0) hash ^= MatchCardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Score);
      }
      if (TodayFreeMatchNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TodayFreeMatchNum);
      }
      if (LastMatchFightTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LastMatchFightTime);
      }
      if (FightItemUseNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FightItemUseNum);
      }
      if (fightSnapshot_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FightSnapshot);
      }
      forbidCards_.WriteTo(output, _repeated_forbidCards_codec);
      todayRevengeCards_.WriteTo(output, _repeated_todayRevengeCards_codec);
      if (MatchCardId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MatchCardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (TodayFreeMatchNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TodayFreeMatchNum);
      }
      if (LastMatchFightTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastMatchFightTime);
      }
      if (FightItemUseNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FightItemUseNum);
      }
      if (fightSnapshot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FightSnapshot);
      }
      size += forbidCards_.CalculateSize(_repeated_forbidCards_codec);
      size += todayRevengeCards_.CalculateSize(_repeated_todayRevengeCards_codec);
      if (MatchCardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchCardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResYamunInfoProto other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0L) {
        Score = other.Score;
      }
      if (other.TodayFreeMatchNum != 0) {
        TodayFreeMatchNum = other.TodayFreeMatchNum;
      }
      if (other.LastMatchFightTime != 0) {
        LastMatchFightTime = other.LastMatchFightTime;
      }
      if (other.FightItemUseNum != 0) {
        FightItemUseNum = other.FightItemUseNum;
      }
      if (other.fightSnapshot_ != null) {
        if (fightSnapshot_ == null) {
          FightSnapshot = new global::Com.Proto.YamunMessage.FightSnapshotDtoProto();
        }
        FightSnapshot.MergeFrom(other.FightSnapshot);
      }
      forbidCards_.Add(other.forbidCards_);
      todayRevengeCards_.Add(other.todayRevengeCards_);
      if (other.MatchCardId != 0) {
        MatchCardId = other.MatchCardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Score = input.ReadInt64();
            break;
          }
          case 16: {
            TodayFreeMatchNum = input.ReadInt32();
            break;
          }
          case 24: {
            LastMatchFightTime = input.ReadInt32();
            break;
          }
          case 32: {
            FightItemUseNum = input.ReadInt32();
            break;
          }
          case 42: {
            if (fightSnapshot_ == null) {
              FightSnapshot = new global::Com.Proto.YamunMessage.FightSnapshotDtoProto();
            }
            input.ReadMessage(FightSnapshot);
            break;
          }
          case 50: {
            forbidCards_.AddEntriesFrom(input, _repeated_forbidCards_codec);
            break;
          }
          case 58:
          case 56: {
            todayRevengeCards_.AddEntriesFrom(input, _repeated_todayRevengeCards_codec);
            break;
          }
          case 64: {
            MatchCardId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回匹配信息		msgId=178202
  /// </summary>
  public sealed partial class ResMatchEnemyProto : pb::IMessage<ResMatchEnemyProto> {
    private static readonly pb::MessageParser<ResMatchEnemyProto> _parser = new pb::MessageParser<ResMatchEnemyProto>(() => new ResMatchEnemyProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResMatchEnemyProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResMatchEnemyProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResMatchEnemyProto(ResMatchEnemyProto other) : this() {
      fightInfo_ = other.fightInfo_ != null ? other.fightInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResMatchEnemyProto Clone() {
      return new ResMatchEnemyProto(this);
    }

    /// <summary>Field number for the "fightInfo" field.</summary>
    public const int FightInfoFieldNumber = 1;
    private global::Com.Proto.YamunMessage.FightSnapshotDtoProto fightInfo_;
    /// <summary>
    ///战斗信息(如果匹配到玩家)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.FightSnapshotDtoProto FightInfo {
      get { return fightInfo_; }
      set {
        fightInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResMatchEnemyProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResMatchEnemyProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FightInfo, other.FightInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fightInfo_ != null) hash ^= FightInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fightInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FightInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fightInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FightInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResMatchEnemyProto other) {
      if (other == null) {
        return;
      }
      if (other.fightInfo_ != null) {
        if (fightInfo_ == null) {
          FightInfo = new global::Com.Proto.YamunMessage.FightSnapshotDtoProto();
        }
        FightInfo.MergeFrom(other.FightInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fightInfo_ == null) {
              FightInfo = new global::Com.Proto.YamunMessage.FightSnapshotDtoProto();
            }
            input.ReadMessage(FightInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回购买属性		msgId=178203
  /// </summary>
  public sealed partial class ResBuyAttrProto : pb::IMessage<ResBuyAttrProto> {
    private static readonly pb::MessageParser<ResBuyAttrProto> _parser = new pb::MessageParser<ResBuyAttrProto>(() => new ResBuyAttrProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResBuyAttrProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResBuyAttrProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResBuyAttrProto(ResBuyAttrProto other) : this() {
      buyAttrId_ = other.buyAttrId_;
      tempAttr_ = other.tempAttr_ != null ? other.tempAttr_.Clone() : null;
      hp_ = other.hp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResBuyAttrProto Clone() {
      return new ResBuyAttrProto(this);
    }

    /// <summary>Field number for the "buyAttrId" field.</summary>
    public const int BuyAttrIdFieldNumber = 1;
    private int buyAttrId_;
    /// <summary>
    ///购买选项的属性类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyAttrId {
      get { return buyAttrId_; }
      set {
        buyAttrId_ = value;
      }
    }

    /// <summary>Field number for the "tempAttr" field.</summary>
    public const int TempAttrFieldNumber = 2;
    private global::Com.Proto.YamunMessage.FightTempAttrDtoProto tempAttr_;
    /// <summary>
    ///返回购买的临时属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.FightTempAttrDtoProto TempAttr {
      get { return tempAttr_; }
      set {
        tempAttr_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private long hp_;
    /// <summary>
    ///最新的血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResBuyAttrProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResBuyAttrProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuyAttrId != other.BuyAttrId) return false;
      if (!object.Equals(TempAttr, other.TempAttr)) return false;
      if (Hp != other.Hp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuyAttrId != 0) hash ^= BuyAttrId.GetHashCode();
      if (tempAttr_ != null) hash ^= TempAttr.GetHashCode();
      if (Hp != 0L) hash ^= Hp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuyAttrId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuyAttrId);
      }
      if (tempAttr_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TempAttr);
      }
      if (Hp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Hp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuyAttrId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyAttrId);
      }
      if (tempAttr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TempAttr);
      }
      if (Hp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Hp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResBuyAttrProto other) {
      if (other == null) {
        return;
      }
      if (other.BuyAttrId != 0) {
        BuyAttrId = other.BuyAttrId;
      }
      if (other.tempAttr_ != null) {
        if (tempAttr_ == null) {
          TempAttr = new global::Com.Proto.YamunMessage.FightTempAttrDtoProto();
        }
        TempAttr.MergeFrom(other.TempAttr);
      }
      if (other.Hp != 0L) {
        Hp = other.Hp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuyAttrId = input.ReadInt32();
            break;
          }
          case 18: {
            if (tempAttr_ == null) {
              TempAttr = new global::Com.Proto.YamunMessage.FightTempAttrDtoProto();
            }
            input.ReadMessage(TempAttr);
            break;
          }
          case 24: {
            Hp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回战斗结果		msgId=178204
  /// </summary>
  public sealed partial class ResFightEnemyProto : pb::IMessage<ResFightEnemyProto> {
    private static readonly pb::MessageParser<ResFightEnemyProto> _parser = new pb::MessageParser<ResFightEnemyProto>(() => new ResFightEnemyProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResFightEnemyProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResFightEnemyProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResFightEnemyProto(ResFightEnemyProto other) : this() {
      enemyHp_ = other.enemyHp_;
      myHp_ = other.myHp_;
      roundResult_ = other.roundResult_.Clone();
      isWin_ = other.isWin_;
      continueWinNum_ = other.continueWinNum_;
      waitCardList_ = other.waitCardList_.Clone();
      continueWinReward_ = other.continueWinReward_ != null ? other.continueWinReward_.Clone() : null;
      defeatCardNum_ = other.defeatCardNum_;
      attrCommodties_ = other.attrCommodties_.Clone();
      winReward_ = other.winReward_ != null ? other.winReward_.Clone() : null;
      myChangeScore_ = other.myChangeScore_;
      enemyChangeScore_ = other.enemyChangeScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResFightEnemyProto Clone() {
      return new ResFightEnemyProto(this);
    }

    /// <summary>Field number for the "enemyHp" field.</summary>
    public const int EnemyHpFieldNumber = 1;
    private long enemyHp_;
    /// <summary>
    ///敌方当前血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnemyHp {
      get { return enemyHp_; }
      set {
        enemyHp_ = value;
      }
    }

    /// <summary>Field number for the "myHp" field.</summary>
    public const int MyHpFieldNumber = 2;
    private long myHp_;
    /// <summary>
    ///我方当前血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MyHp {
      get { return myHp_; }
      set {
        myHp_ = value;
      }
    }

    /// <summary>Field number for the "roundResult" field.</summary>
    public const int RoundResultFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.YamunMessage.RoundResultDtoProto> _repeated_roundResult_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.YamunMessage.RoundResultDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.YamunMessage.RoundResultDtoProto> roundResult_ = new pbc::RepeatedField<global::Com.Proto.YamunMessage.RoundResultDtoProto>();
    /// <summary>
    ///回合的交战结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.YamunMessage.RoundResultDtoProto> RoundResult {
      get { return roundResult_; }
    }

    /// <summary>Field number for the "isWin" field.</summary>
    public const int IsWinFieldNumber = 4;
    private bool isWin_;
    /// <summary>
    ///是否胜利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWin {
      get { return isWin_; }
      set {
        isWin_ = value;
      }
    }

    /// <summary>Field number for the "continueWinNum" field.</summary>
    public const int ContinueWinNumFieldNumber = 5;
    private int continueWinNum_;
    /// <summary>
    ///连胜次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContinueWinNum {
      get { return continueWinNum_; }
      set {
        continueWinNum_ = value;
      }
    }

    /// <summary>Field number for the "waitCardList" field.</summary>
    public const int WaitCardListFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_waitCardList_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> waitCardList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///等待出战的卡牌列表(如果还有下次)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> WaitCardList {
      get { return waitCardList_; }
    }

    /// <summary>Field number for the "continueWinReward" field.</summary>
    public const int ContinueWinRewardFieldNumber = 7;
    private global::Com.Proto.ResourceMessage.RewardGroupDtoProto continueWinReward_;
    /// <summary>
    ///连胜奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.ResourceMessage.RewardGroupDtoProto ContinueWinReward {
      get { return continueWinReward_; }
      set {
        continueWinReward_ = value;
      }
    }

    /// <summary>Field number for the "defeatCardNum" field.</summary>
    public const int DefeatCardNumFieldNumber = 8;
    private int defeatCardNum_;
    /// <summary>
    ///总击败卡牌数(结算时才有数据)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefeatCardNum {
      get { return defeatCardNum_; }
      set {
        defeatCardNum_ = value;
      }
    }

    /// <summary>Field number for the "attrCommodties" field.</summary>
    public const int AttrCommodtiesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Com.Proto.YamunMessage.FightBuffBonusDtoProto> _repeated_attrCommodties_codec
        = pb::FieldCodec.ForMessage(74, global::Com.Proto.YamunMessage.FightBuffBonusDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.YamunMessage.FightBuffBonusDtoProto> attrCommodties_ = new pbc::RepeatedField<global::Com.Proto.YamunMessage.FightBuffBonusDtoProto>();
    /// <summary>
    ///可购买的属性列表(如果战斗没有完结)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.YamunMessage.FightBuffBonusDtoProto> AttrCommodties {
      get { return attrCommodties_; }
    }

    /// <summary>Field number for the "winReward" field.</summary>
    public const int WinRewardFieldNumber = 10;
    private global::Com.Proto.ResourceMessage.RewardGroupDtoProto winReward_;
    /// <summary>
    ///胜利奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.ResourceMessage.RewardGroupDtoProto WinReward {
      get { return winReward_; }
      set {
        winReward_ = value;
      }
    }

    /// <summary>Field number for the "myChangeScore" field.</summary>
    public const int MyChangeScoreFieldNumber = 11;
    private int myChangeScore_;
    /// <summary>
    ///我方改变的分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyChangeScore {
      get { return myChangeScore_; }
      set {
        myChangeScore_ = value;
      }
    }

    /// <summary>Field number for the "enemyChangeScore" field.</summary>
    public const int EnemyChangeScoreFieldNumber = 12;
    private int enemyChangeScore_;
    /// <summary>
    ///敌方改变分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnemyChangeScore {
      get { return enemyChangeScore_; }
      set {
        enemyChangeScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResFightEnemyProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResFightEnemyProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnemyHp != other.EnemyHp) return false;
      if (MyHp != other.MyHp) return false;
      if(!roundResult_.Equals(other.roundResult_)) return false;
      if (IsWin != other.IsWin) return false;
      if (ContinueWinNum != other.ContinueWinNum) return false;
      if(!waitCardList_.Equals(other.waitCardList_)) return false;
      if (!object.Equals(ContinueWinReward, other.ContinueWinReward)) return false;
      if (DefeatCardNum != other.DefeatCardNum) return false;
      if(!attrCommodties_.Equals(other.attrCommodties_)) return false;
      if (!object.Equals(WinReward, other.WinReward)) return false;
      if (MyChangeScore != other.MyChangeScore) return false;
      if (EnemyChangeScore != other.EnemyChangeScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnemyHp != 0L) hash ^= EnemyHp.GetHashCode();
      if (MyHp != 0L) hash ^= MyHp.GetHashCode();
      hash ^= roundResult_.GetHashCode();
      if (IsWin != false) hash ^= IsWin.GetHashCode();
      if (ContinueWinNum != 0) hash ^= ContinueWinNum.GetHashCode();
      hash ^= waitCardList_.GetHashCode();
      if (continueWinReward_ != null) hash ^= ContinueWinReward.GetHashCode();
      if (DefeatCardNum != 0) hash ^= DefeatCardNum.GetHashCode();
      hash ^= attrCommodties_.GetHashCode();
      if (winReward_ != null) hash ^= WinReward.GetHashCode();
      if (MyChangeScore != 0) hash ^= MyChangeScore.GetHashCode();
      if (EnemyChangeScore != 0) hash ^= EnemyChangeScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnemyHp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EnemyHp);
      }
      if (MyHp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MyHp);
      }
      roundResult_.WriteTo(output, _repeated_roundResult_codec);
      if (IsWin != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsWin);
      }
      if (ContinueWinNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ContinueWinNum);
      }
      waitCardList_.WriteTo(output, _repeated_waitCardList_codec);
      if (continueWinReward_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ContinueWinReward);
      }
      if (DefeatCardNum != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DefeatCardNum);
      }
      attrCommodties_.WriteTo(output, _repeated_attrCommodties_codec);
      if (winReward_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(WinReward);
      }
      if (MyChangeScore != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MyChangeScore);
      }
      if (EnemyChangeScore != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(EnemyChangeScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnemyHp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnemyHp);
      }
      if (MyHp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MyHp);
      }
      size += roundResult_.CalculateSize(_repeated_roundResult_codec);
      if (IsWin != false) {
        size += 1 + 1;
      }
      if (ContinueWinNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContinueWinNum);
      }
      size += waitCardList_.CalculateSize(_repeated_waitCardList_codec);
      if (continueWinReward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContinueWinReward);
      }
      if (DefeatCardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefeatCardNum);
      }
      size += attrCommodties_.CalculateSize(_repeated_attrCommodties_codec);
      if (winReward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WinReward);
      }
      if (MyChangeScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyChangeScore);
      }
      if (EnemyChangeScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnemyChangeScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResFightEnemyProto other) {
      if (other == null) {
        return;
      }
      if (other.EnemyHp != 0L) {
        EnemyHp = other.EnemyHp;
      }
      if (other.MyHp != 0L) {
        MyHp = other.MyHp;
      }
      roundResult_.Add(other.roundResult_);
      if (other.IsWin != false) {
        IsWin = other.IsWin;
      }
      if (other.ContinueWinNum != 0) {
        ContinueWinNum = other.ContinueWinNum;
      }
      waitCardList_.Add(other.waitCardList_);
      if (other.continueWinReward_ != null) {
        if (continueWinReward_ == null) {
          ContinueWinReward = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
        }
        ContinueWinReward.MergeFrom(other.ContinueWinReward);
      }
      if (other.DefeatCardNum != 0) {
        DefeatCardNum = other.DefeatCardNum;
      }
      attrCommodties_.Add(other.attrCommodties_);
      if (other.winReward_ != null) {
        if (winReward_ == null) {
          WinReward = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
        }
        WinReward.MergeFrom(other.WinReward);
      }
      if (other.MyChangeScore != 0) {
        MyChangeScore = other.MyChangeScore;
      }
      if (other.EnemyChangeScore != 0) {
        EnemyChangeScore = other.EnemyChangeScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnemyHp = input.ReadInt64();
            break;
          }
          case 16: {
            MyHp = input.ReadInt64();
            break;
          }
          case 26: {
            roundResult_.AddEntriesFrom(input, _repeated_roundResult_codec);
            break;
          }
          case 32: {
            IsWin = input.ReadBool();
            break;
          }
          case 40: {
            ContinueWinNum = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            waitCardList_.AddEntriesFrom(input, _repeated_waitCardList_codec);
            break;
          }
          case 58: {
            if (continueWinReward_ == null) {
              ContinueWinReward = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
            }
            input.ReadMessage(ContinueWinReward);
            break;
          }
          case 64: {
            DefeatCardNum = input.ReadInt32();
            break;
          }
          case 74: {
            attrCommodties_.AddEntriesFrom(input, _repeated_attrCommodties_codec);
            break;
          }
          case 82: {
            if (winReward_ == null) {
              WinReward = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
            }
            input.ReadMessage(WinReward);
            break;
          }
          case 88: {
            MyChangeScore = input.ReadInt32();
            break;
          }
          case 96: {
            EnemyChangeScore = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回自动战斗结果		msgId=178205
  /// </summary>
  public sealed partial class ResAutoFightProto : pb::IMessage<ResAutoFightProto> {
    private static readonly pb::MessageParser<ResAutoFightProto> _parser = new pb::MessageParser<ResAutoFightProto>(() => new ResAutoFightProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResAutoFightProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAutoFightProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAutoFightProto(ResAutoFightProto other) : this() {
      isWin_ = other.isWin_;
      defeatCardNum_ = other.defeatCardNum_;
      continueWinNum_ = other.continueWinNum_;
      autoFightResult_ = other.autoFightResult_.Clone();
      continueWinRewardList_ = other.continueWinRewardList_.Clone();
      totalDefeatCardNum_ = other.totalDefeatCardNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAutoFightProto Clone() {
      return new ResAutoFightProto(this);
    }

    /// <summary>Field number for the "isWin" field.</summary>
    public const int IsWinFieldNumber = 1;
    private bool isWin_;
    /// <summary>
    ///最后是否胜利
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWin {
      get { return isWin_; }
      set {
        isWin_ = value;
      }
    }

    /// <summary>Field number for the "defeatCardNum" field.</summary>
    public const int DefeatCardNumFieldNumber = 2;
    private int defeatCardNum_;
    /// <summary>
    ///自动切磋击败卡牌数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefeatCardNum {
      get { return defeatCardNum_; }
      set {
        defeatCardNum_ = value;
      }
    }

    /// <summary>Field number for the "continueWinNum" field.</summary>
    public const int ContinueWinNumFieldNumber = 3;
    private int continueWinNum_;
    /// <summary>
    ///当前总连胜次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContinueWinNum {
      get { return continueWinNum_; }
      set {
        continueWinNum_ = value;
      }
    }

    /// <summary>Field number for the "autoFightResult" field.</summary>
    public const int AutoFightResultFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.YamunMessage.AutoRoundResultDtoProto> _repeated_autoFightResult_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.YamunMessage.AutoRoundResultDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.YamunMessage.AutoRoundResultDtoProto> autoFightResult_ = new pbc::RepeatedField<global::Com.Proto.YamunMessage.AutoRoundResultDtoProto>();
    /// <summary>
    ///自动比赛结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.YamunMessage.AutoRoundResultDtoProto> AutoFightResult {
      get { return autoFightResult_; }
    }

    /// <summary>Field number for the "continueWinRewardList" field.</summary>
    public const int ContinueWinRewardListFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Com.Proto.ResourceMessage.RewardGroupDtoProto> _repeated_continueWinRewardList_codec
        = pb::FieldCodec.ForMessage(42, global::Com.Proto.ResourceMessage.RewardGroupDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ResourceMessage.RewardGroupDtoProto> continueWinRewardList_ = new pbc::RepeatedField<global::Com.Proto.ResourceMessage.RewardGroupDtoProto>();
    /// <summary>
    ///连胜奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ResourceMessage.RewardGroupDtoProto> ContinueWinRewardList {
      get { return continueWinRewardList_; }
    }

    /// <summary>Field number for the "totalDefeatCardNum" field.</summary>
    public const int TotalDefeatCardNumFieldNumber = 6;
    private int totalDefeatCardNum_;
    /// <summary>
    ///总共击败卡牌数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalDefeatCardNum {
      get { return totalDefeatCardNum_; }
      set {
        totalDefeatCardNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResAutoFightProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResAutoFightProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsWin != other.IsWin) return false;
      if (DefeatCardNum != other.DefeatCardNum) return false;
      if (ContinueWinNum != other.ContinueWinNum) return false;
      if(!autoFightResult_.Equals(other.autoFightResult_)) return false;
      if(!continueWinRewardList_.Equals(other.continueWinRewardList_)) return false;
      if (TotalDefeatCardNum != other.TotalDefeatCardNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsWin != false) hash ^= IsWin.GetHashCode();
      if (DefeatCardNum != 0) hash ^= DefeatCardNum.GetHashCode();
      if (ContinueWinNum != 0) hash ^= ContinueWinNum.GetHashCode();
      hash ^= autoFightResult_.GetHashCode();
      hash ^= continueWinRewardList_.GetHashCode();
      if (TotalDefeatCardNum != 0) hash ^= TotalDefeatCardNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsWin != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsWin);
      }
      if (DefeatCardNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DefeatCardNum);
      }
      if (ContinueWinNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ContinueWinNum);
      }
      autoFightResult_.WriteTo(output, _repeated_autoFightResult_codec);
      continueWinRewardList_.WriteTo(output, _repeated_continueWinRewardList_codec);
      if (TotalDefeatCardNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalDefeatCardNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsWin != false) {
        size += 1 + 1;
      }
      if (DefeatCardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefeatCardNum);
      }
      if (ContinueWinNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContinueWinNum);
      }
      size += autoFightResult_.CalculateSize(_repeated_autoFightResult_codec);
      size += continueWinRewardList_.CalculateSize(_repeated_continueWinRewardList_codec);
      if (TotalDefeatCardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalDefeatCardNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResAutoFightProto other) {
      if (other == null) {
        return;
      }
      if (other.IsWin != false) {
        IsWin = other.IsWin;
      }
      if (other.DefeatCardNum != 0) {
        DefeatCardNum = other.DefeatCardNum;
      }
      if (other.ContinueWinNum != 0) {
        ContinueWinNum = other.ContinueWinNum;
      }
      autoFightResult_.Add(other.autoFightResult_);
      continueWinRewardList_.Add(other.continueWinRewardList_);
      if (other.TotalDefeatCardNum != 0) {
        TotalDefeatCardNum = other.TotalDefeatCardNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsWin = input.ReadBool();
            break;
          }
          case 16: {
            DefeatCardNum = input.ReadInt32();
            break;
          }
          case 24: {
            ContinueWinNum = input.ReadInt32();
            break;
          }
          case 34: {
            autoFightResult_.AddEntriesFrom(input, _repeated_autoFightResult_codec);
            break;
          }
          case 42: {
            continueWinRewardList_.AddEntriesFrom(input, _repeated_continueWinRewardList_codec);
            break;
          }
          case 48: {
            TotalDefeatCardNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回高分玩家记录		msgId=178206
  /// </summary>
  public sealed partial class ResHighScoreRecordProto : pb::IMessage<ResHighScoreRecordProto> {
    private static readonly pb::MessageParser<ResHighScoreRecordProto> _parser = new pb::MessageParser<ResHighScoreRecordProto>(() => new ResHighScoreRecordProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResHighScoreRecordProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResHighScoreRecordProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResHighScoreRecordProto(ResHighScoreRecordProto other) : this() {
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResHighScoreRecordProto Clone() {
      return new ResHighScoreRecordProto(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.YamunMessage.HighScoreRecordDtoProto> _repeated_records_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.YamunMessage.HighScoreRecordDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.YamunMessage.HighScoreRecordDtoProto> records_ = new pbc::RepeatedField<global::Com.Proto.YamunMessage.HighScoreRecordDtoProto>();
    /// <summary>
    ///高分玩家记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.YamunMessage.HighScoreRecordDtoProto> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResHighScoreRecordProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResHighScoreRecordProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResHighScoreRecordProto other) {
      if (other == null) {
        return;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回防守日志		msgId=178207
  /// </summary>
  public sealed partial class ResDefenseLogProto : pb::IMessage<ResDefenseLogProto> {
    private static readonly pb::MessageParser<ResDefenseLogProto> _parser = new pb::MessageParser<ResDefenseLogProto>(() => new ResDefenseLogProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResDefenseLogProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResDefenseLogProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResDefenseLogProto(ResDefenseLogProto other) : this() {
      defenseLogs_ = other.defenseLogs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResDefenseLogProto Clone() {
      return new ResDefenseLogProto(this);
    }

    /// <summary>Field number for the "defenseLogs" field.</summary>
    public const int DefenseLogsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.YamunMessage.DefenseLogDtoProto> _repeated_defenseLogs_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.YamunMessage.DefenseLogDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.YamunMessage.DefenseLogDtoProto> defenseLogs_ = new pbc::RepeatedField<global::Com.Proto.YamunMessage.DefenseLogDtoProto>();
    /// <summary>
    ///防守日志
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.YamunMessage.DefenseLogDtoProto> DefenseLogs {
      get { return defenseLogs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResDefenseLogProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResDefenseLogProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!defenseLogs_.Equals(other.defenseLogs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= defenseLogs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      defenseLogs_.WriteTo(output, _repeated_defenseLogs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += defenseLogs_.CalculateSize(_repeated_defenseLogs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResDefenseLogProto other) {
      if (other == null) {
        return;
      }
      defenseLogs_.Add(other.defenseLogs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            defenseLogs_.AddEntriesFrom(input, _repeated_defenseLogs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回仇人日志信息		msgId=178208
  /// </summary>
  public sealed partial class ResEnemyLogInfoProto : pb::IMessage<ResEnemyLogInfoProto> {
    private static readonly pb::MessageParser<ResEnemyLogInfoProto> _parser = new pb::MessageParser<ResEnemyLogInfoProto>(() => new ResEnemyLogInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResEnemyLogInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResEnemyLogInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResEnemyLogInfoProto(ResEnemyLogInfoProto other) : this() {
      enemyList_ = other.enemyList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResEnemyLogInfoProto Clone() {
      return new ResEnemyLogInfoProto(this);
    }

    /// <summary>Field number for the "enemyList" field.</summary>
    public const int EnemyListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.YamunMessage.EnemyLogDtoProto> _repeated_enemyList_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.YamunMessage.EnemyLogDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.YamunMessage.EnemyLogDtoProto> enemyList_ = new pbc::RepeatedField<global::Com.Proto.YamunMessage.EnemyLogDtoProto>();
    /// <summary>
    ///仇人列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.YamunMessage.EnemyLogDtoProto> EnemyList {
      get { return enemyList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResEnemyLogInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResEnemyLogInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!enemyList_.Equals(other.enemyList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= enemyList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      enemyList_.WriteTo(output, _repeated_enemyList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += enemyList_.CalculateSize(_repeated_enemyList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResEnemyLogInfoProto other) {
      if (other == null) {
        return;
      }
      enemyList_.Add(other.enemyList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            enemyList_.AddEntriesFrom(input, _repeated_enemyList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回搜索结果		msgId=178209
  /// </summary>
  public sealed partial class ResSearchEnemyProto : pb::IMessage<ResSearchEnemyProto> {
    private static readonly pb::MessageParser<ResSearchEnemyProto> _parser = new pb::MessageParser<ResSearchEnemyProto>(() => new ResSearchEnemyProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResSearchEnemyProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResSearchEnemyProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResSearchEnemyProto(ResSearchEnemyProto other) : this() {
      enemyInfo_ = other.enemyInfo_ != null ? other.enemyInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResSearchEnemyProto Clone() {
      return new ResSearchEnemyProto(this);
    }

    /// <summary>Field number for the "enemyInfo" field.</summary>
    public const int EnemyInfoFieldNumber = 1;
    private global::Com.Proto.YamunMessage.EnemyInfoDtoProto enemyInfo_;
    /// <summary>
    ///敌人信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.EnemyInfoDtoProto EnemyInfo {
      get { return enemyInfo_; }
      set {
        enemyInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResSearchEnemyProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResSearchEnemyProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EnemyInfo, other.EnemyInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (enemyInfo_ != null) hash ^= EnemyInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (enemyInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EnemyInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (enemyInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemyInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResSearchEnemyProto other) {
      if (other == null) {
        return;
      }
      if (other.enemyInfo_ != null) {
        if (enemyInfo_ == null) {
          EnemyInfo = new global::Com.Proto.YamunMessage.EnemyInfoDtoProto();
        }
        EnemyInfo.MergeFrom(other.EnemyInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (enemyInfo_ == null) {
              EnemyInfo = new global::Com.Proto.YamunMessage.EnemyInfoDtoProto();
            }
            input.ReadMessage(EnemyInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回复仇信息		msgId=178210
  /// </summary>
  public sealed partial class ResRevengeProto : pb::IMessage<ResRevengeProto> {
    private static readonly pb::MessageParser<ResRevengeProto> _parser = new pb::MessageParser<ResRevengeProto>(() => new ResRevengeProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResRevengeProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResRevengeProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResRevengeProto(ResRevengeProto other) : this() {
      fightInfo_ = other.fightInfo_ != null ? other.fightInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResRevengeProto Clone() {
      return new ResRevengeProto(this);
    }

    /// <summary>Field number for the "fightInfo" field.</summary>
    public const int FightInfoFieldNumber = 1;
    private global::Com.Proto.YamunMessage.FightSnapshotDtoProto fightInfo_;
    /// <summary>
    ///战斗信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.FightSnapshotDtoProto FightInfo {
      get { return fightInfo_; }
      set {
        fightInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResRevengeProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResRevengeProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FightInfo, other.FightInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fightInfo_ != null) hash ^= FightInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fightInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FightInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fightInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FightInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResRevengeProto other) {
      if (other == null) {
        return;
      }
      if (other.fightInfo_ != null) {
        if (fightInfo_ == null) {
          FightInfo = new global::Com.Proto.YamunMessage.FightSnapshotDtoProto();
        }
        FightInfo.MergeFrom(other.FightInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fightInfo_ == null) {
              FightInfo = new global::Com.Proto.YamunMessage.FightSnapshotDtoProto();
            }
            input.ReadMessage(FightInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回禁用卡牌		msgId=178213
  /// </summary>
  public sealed partial class ResForbidCardProto : pb::IMessage<ResForbidCardProto> {
    private static readonly pb::MessageParser<ResForbidCardProto> _parser = new pb::MessageParser<ResForbidCardProto>(() => new ResForbidCardProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResForbidCardProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResForbidCardProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResForbidCardProto(ResForbidCardProto other) : this() {
      forbidCardList_ = other.forbidCardList_.Clone();
      matchCardId_ = other.matchCardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResForbidCardProto Clone() {
      return new ResForbidCardProto(this);
    }

    /// <summary>Field number for the "forbidCardList" field.</summary>
    public const int ForbidCardListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.YamunMessage.ForbidCardDtoProto> _repeated_forbidCardList_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.YamunMessage.ForbidCardDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.YamunMessage.ForbidCardDtoProto> forbidCardList_ = new pbc::RepeatedField<global::Com.Proto.YamunMessage.ForbidCardDtoProto>();
    /// <summary>
    ///封禁的卡牌列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.YamunMessage.ForbidCardDtoProto> ForbidCardList {
      get { return forbidCardList_; }
    }

    /// <summary>Field number for the "matchCardId" field.</summary>
    public const int MatchCardIdFieldNumber = 2;
    private int matchCardId_;
    /// <summary>
    ///我当前匹配的卡牌(如果有更新)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatchCardId {
      get { return matchCardId_; }
      set {
        matchCardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResForbidCardProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResForbidCardProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!forbidCardList_.Equals(other.forbidCardList_)) return false;
      if (MatchCardId != other.MatchCardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= forbidCardList_.GetHashCode();
      if (MatchCardId != 0) hash ^= MatchCardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      forbidCardList_.WriteTo(output, _repeated_forbidCardList_codec);
      if (MatchCardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MatchCardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += forbidCardList_.CalculateSize(_repeated_forbidCardList_codec);
      if (MatchCardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchCardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResForbidCardProto other) {
      if (other == null) {
        return;
      }
      forbidCardList_.Add(other.forbidCardList_);
      if (other.MatchCardId != 0) {
        MatchCardId = other.MatchCardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            forbidCardList_.AddEntriesFrom(input, _repeated_forbidCardList_codec);
            break;
          }
          case 16: {
            MatchCardId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 增加防守日志		msgId=178214
  /// </summary>
  public sealed partial class ResAddDenseLogProto : pb::IMessage<ResAddDenseLogProto> {
    private static readonly pb::MessageParser<ResAddDenseLogProto> _parser = new pb::MessageParser<ResAddDenseLogProto>(() => new ResAddDenseLogProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResAddDenseLogProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAddDenseLogProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAddDenseLogProto(ResAddDenseLogProto other) : this() {
      defenseLog_ = other.defenseLog_ != null ? other.defenseLog_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAddDenseLogProto Clone() {
      return new ResAddDenseLogProto(this);
    }

    /// <summary>Field number for the "defenseLog" field.</summary>
    public const int DefenseLogFieldNumber = 1;
    private global::Com.Proto.YamunMessage.DefenseLogDtoProto defenseLog_;
    /// <summary>
    ///防守日志
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.DefenseLogDtoProto DefenseLog {
      get { return defenseLog_; }
      set {
        defenseLog_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResAddDenseLogProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResAddDenseLogProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DefenseLog, other.DefenseLog)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (defenseLog_ != null) hash ^= DefenseLog.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (defenseLog_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DefenseLog);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (defenseLog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefenseLog);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResAddDenseLogProto other) {
      if (other == null) {
        return;
      }
      if (other.defenseLog_ != null) {
        if (defenseLog_ == null) {
          DefenseLog = new global::Com.Proto.YamunMessage.DefenseLogDtoProto();
        }
        DefenseLog.MergeFrom(other.DefenseLog);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (defenseLog_ == null) {
              DefenseLog = new global::Com.Proto.YamunMessage.DefenseLogDtoProto();
            }
            input.ReadMessage(DefenseLog);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 增加仇人日志		msgId=178215
  /// </summary>
  public sealed partial class ResAddEnemyLogProto : pb::IMessage<ResAddEnemyLogProto> {
    private static readonly pb::MessageParser<ResAddEnemyLogProto> _parser = new pb::MessageParser<ResAddEnemyLogProto>(() => new ResAddEnemyLogProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResAddEnemyLogProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAddEnemyLogProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAddEnemyLogProto(ResAddEnemyLogProto other) : this() {
      enemyLog_ = other.enemyLog_ != null ? other.enemyLog_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAddEnemyLogProto Clone() {
      return new ResAddEnemyLogProto(this);
    }

    /// <summary>Field number for the "enemyLog" field.</summary>
    public const int EnemyLogFieldNumber = 1;
    private global::Com.Proto.YamunMessage.EnemyLogDtoProto enemyLog_;
    /// <summary>
    ///仇人日志
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.EnemyLogDtoProto EnemyLog {
      get { return enemyLog_; }
      set {
        enemyLog_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResAddEnemyLogProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResAddEnemyLogProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EnemyLog, other.EnemyLog)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (enemyLog_ != null) hash ^= EnemyLog.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (enemyLog_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EnemyLog);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (enemyLog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemyLog);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResAddEnemyLogProto other) {
      if (other == null) {
        return;
      }
      if (other.enemyLog_ != null) {
        if (enemyLog_ == null) {
          EnemyLog = new global::Com.Proto.YamunMessage.EnemyLogDtoProto();
        }
        EnemyLog.MergeFrom(other.EnemyLog);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (enemyLog_ == null) {
              EnemyLog = new global::Com.Proto.YamunMessage.EnemyLogDtoProto();
            }
            input.ReadMessage(EnemyLog);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 论战分数变化		msgId=178216
  /// </summary>
  public sealed partial class ResChangeFightScoreProto : pb::IMessage<ResChangeFightScoreProto> {
    private static readonly pb::MessageParser<ResChangeFightScoreProto> _parser = new pb::MessageParser<ResChangeFightScoreProto>(() => new ResChangeFightScoreProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResChangeFightScoreProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResChangeFightScoreProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResChangeFightScoreProto(ResChangeFightScoreProto other) : this() {
      score_ = other.score_;
      updateValue_ = other.updateValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResChangeFightScoreProto Clone() {
      return new ResChangeFightScoreProto(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private long score_;
    /// <summary>
    ///最新的分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "updateValue" field.</summary>
    public const int UpdateValueFieldNumber = 2;
    private int updateValue_;
    /// <summary>
    ///变化值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UpdateValue {
      get { return updateValue_; }
      set {
        updateValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResChangeFightScoreProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResChangeFightScoreProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      if (UpdateValue != other.UpdateValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (UpdateValue != 0) hash ^= UpdateValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Score);
      }
      if (UpdateValue != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UpdateValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (UpdateValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpdateValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResChangeFightScoreProto other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0L) {
        Score = other.Score;
      }
      if (other.UpdateValue != 0) {
        UpdateValue = other.UpdateValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Score = input.ReadInt64();
            break;
          }
          case 16: {
            UpdateValue = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回解封卡牌		msgId=178217
  /// </summary>
  public sealed partial class ResUnForbidCardProto : pb::IMessage<ResUnForbidCardProto> {
    private static readonly pb::MessageParser<ResUnForbidCardProto> _parser = new pb::MessageParser<ResUnForbidCardProto>(() => new ResUnForbidCardProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResUnForbidCardProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResUnForbidCardProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResUnForbidCardProto(ResUnForbidCardProto other) : this() {
      matchCardId_ = other.matchCardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResUnForbidCardProto Clone() {
      return new ResUnForbidCardProto(this);
    }

    /// <summary>Field number for the "matchCardId" field.</summary>
    public const int MatchCardIdFieldNumber = 1;
    private int matchCardId_;
    /// <summary>
    ///我当前匹配的卡牌(如果有更新)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatchCardId {
      get { return matchCardId_; }
      set {
        matchCardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResUnForbidCardProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResUnForbidCardProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchCardId != other.MatchCardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchCardId != 0) hash ^= MatchCardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MatchCardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MatchCardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatchCardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchCardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResUnForbidCardProto other) {
      if (other == null) {
        return;
      }
      if (other.MatchCardId != 0) {
        MatchCardId = other.MatchCardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MatchCardId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回卡牌信息		msgId=178218
  /// </summary>
  public sealed partial class ResSelectEnemyCardProto : pb::IMessage<ResSelectEnemyCardProto> {
    private static readonly pb::MessageParser<ResSelectEnemyCardProto> _parser = new pb::MessageParser<ResSelectEnemyCardProto>(() => new ResSelectEnemyCardProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResSelectEnemyCardProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.YamunMessage.YamunReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResSelectEnemyCardProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResSelectEnemyCardProto(ResSelectEnemyCardProto other) : this() {
      enemyCard_ = other.enemyCard_ != null ? other.enemyCard_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResSelectEnemyCardProto Clone() {
      return new ResSelectEnemyCardProto(this);
    }

    /// <summary>Field number for the "enemyCard" field.</summary>
    public const int EnemyCardFieldNumber = 1;
    private global::Com.Proto.YamunMessage.FightCardDtoProto enemyCard_;
    /// <summary>
    ///敌方卡牌信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.YamunMessage.FightCardDtoProto EnemyCard {
      get { return enemyCard_; }
      set {
        enemyCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResSelectEnemyCardProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResSelectEnemyCardProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EnemyCard, other.EnemyCard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (enemyCard_ != null) hash ^= EnemyCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (enemyCard_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EnemyCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (enemyCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemyCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResSelectEnemyCardProto other) {
      if (other == null) {
        return;
      }
      if (other.enemyCard_ != null) {
        if (enemyCard_ == null) {
          EnemyCard = new global::Com.Proto.YamunMessage.FightCardDtoProto();
        }
        EnemyCard.MergeFrom(other.EnemyCard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (enemyCard_ == null) {
              EnemyCard = new global::Com.Proto.YamunMessage.FightCardDtoProto();
            }
            input.ReadMessage(EnemyCard);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
