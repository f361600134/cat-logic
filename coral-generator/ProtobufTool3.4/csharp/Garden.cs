// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: garden.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto.GardenMessage {

  /// <summary>Holder for reflection information generated from garden.proto</summary>
  public static partial class GardenReflection {

    #region Descriptor
    /// <summary>File descriptor for garden.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GardenReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxnYXJkZW4ucHJvdG8SF2NvbS5wcm90by5nYXJkZW5NZXNzYWdlGg5yZXNv",
            "dXJjZS5wcm90byJjCgxTb2lsRHRvUHJvdG8SDgoGc29pbElkGAEgASgFEg0K",
            "BXN0YXRlGAIgASgFEg4KBnByb3BJZBgDIAEoBRIRCgliZWdpblRpbWUYBCAB",
            "KAUSEQoJc3BlZWRUaW1lGAUgASgFIhQKElJlcUdhcmRlbkluZm9Qcm90byIk",
            "ChJSZXFFeHBhbmRTb2lsUHJvdG8SDgoGc29pbElkGAEgASgFIjMKEVJlcVBs",
            "YW50Q3JvcFByb3RvEg4KBnNvaWxJZBgBIAEoBRIOCgZwcm9wSWQYAiABKAUi",
            "OAoWUmVxQXBwbHlGZXJ0aWxpemVQcm90bxIOCgZzb2lsSWQYASABKAUSDgoG",
            "bXVja0lkGAIgASgFIiIKEFJlcVJlYXBDcm9wUHJvdG8SDgoGc29pbElkGAEg",
            "ASgFIhkKF1JlcVF1aWNrUGxhbnRDcm9wc1Byb3RvIiQKElJlcVJlbW92ZUNy",
            "b3BQcm90bxIOCgZzb2lsSWQYASABKAUiGAoWUmVxUXVpY2tSZWFwQ3JvcHNQ",
            "cm90byKLAQoRR3JhZGVuTG9nRHRvUHJvdG8SDQoFbG9nSWQYASABKAUSEgoK",
            "Y3JlYXRlVGltZRgCIAEoBRIRCglwYXJhbUxpc3QYAyADKAkSQAoIcmVzb3Vy",
            "Y2UYBCABKAsyLi5jb20ucHJvdG8ucmVzb3VyY2VNZXNzYWdlLlJld2FyZEdy",
            "b3VwRHRvUHJvdG8ijgEKElJlc0dhcmRlbkluZm9Qcm90bxI7Cgxzb2lsSW5m",
            "b0xpc3QYASADKAsyJS5jb20ucHJvdG8uZ2FyZGVuTWVzc2FnZS5Tb2lsRHRv",
            "UHJvdG8SOwoHbG9nTGlzdBgCIAMoCzIqLmNvbS5wcm90by5nYXJkZW5NZXNz",
            "YWdlLkdyYWRlbkxvZ0R0b1Byb3RvIk0KElJlc0V4cGFuZFNvaWxQcm90bxI3",
            "Cghzb2lsSW5mbxgBIAEoCzIlLmNvbS5wcm90by5nYXJkZW5NZXNzYWdlLlNv",
            "aWxEdG9Qcm90byJMChFSZXNQbGFudENyb3BQcm90bxI3Cghzb2lsSW5mbxgB",
            "IAEoCzIlLmNvbS5wcm90by5nYXJkZW5NZXNzYWdlLlNvaWxEdG9Qcm90byJR",
            "ChZSZXNBcHBseUZlcnRpbGl6ZVByb3RvEjcKCHNvaWxJbmZvGAEgASgLMiUu",
            "Y29tLnByb3RvLmdhcmRlbk1lc3NhZ2UuU29pbER0b1Byb3RvIrgBChBSZXNS",
            "ZWFwQ3JvcFByb3RvEkAKCHJlc291cmNlGAEgASgLMi4uY29tLnByb3RvLnJl",
            "c291cmNlTWVzc2FnZS5SZXdhcmRHcm91cER0b1Byb3RvEjcKCHNvaWxJbmZv",
            "GAIgASgLMiUuY29tLnByb3RvLmdhcmRlbk1lc3NhZ2UuU29pbER0b1Byb3Rv",
            "EhMKC2ZvaXNvblN0YXRlGAMgASgIEhQKDGdvZExpa2VDb3VudBgEIAEoBSJW",
            "ChdSZXNRdWlja1BsYW50Q3JvcHNQcm90bxI7Cgxzb2lsSW5mb0xpc3QYASAD",
            "KAsyJS5jb20ucHJvdG8uZ2FyZGVuTWVzc2FnZS5Tb2lsRHRvUHJvdG8ijwEK",
            "ElJlc1JlbW92ZUNyb3BQcm90bxJACghyZXNvdXJjZRgBIAEoCzIuLmNvbS5w",
            "cm90by5yZXNvdXJjZU1lc3NhZ2UuUmV3YXJkR3JvdXBEdG9Qcm90bxI3Cghz",
            "b2lsSW5mbxgCIAEoCzIlLmNvbS5wcm90by5nYXJkZW5NZXNzYWdlLlNvaWxE",
            "dG9Qcm90byLDAQoWUmVzUXVpY2tSZWFwQ3JvcHNQcm90bxJACghyZXNvdXJj",
            "ZRgBIAEoCzIuLmNvbS5wcm90by5yZXNvdXJjZU1lc3NhZ2UuUmV3YXJkR3Jv",
            "dXBEdG9Qcm90bxI7Cgxzb2lsSW5mb0xpc3QYAiADKAsyJS5jb20ucHJvdG8u",
            "Z2FyZGVuTWVzc2FnZS5Tb2lsRHRvUHJvdG8SFAoMZm9pc29uSWRMaXN0GAMg",
            "AygFEhQKDGdvZExpa2VDb3VudBgEIAEoBSJTChRSZXNBZGRHYXJkZW5Mb2dQ",
            "cm90bxI7Cgdsb2dJbmZvGAEgASgLMiouY29tLnByb3RvLmdhcmRlbk1lc3Nh",
            "Z2UuR3JhZGVuTG9nRHRvUHJvdG9CLwofY29tLmdhbWUubW9kdWxlLmdhcmRl",
            "bi5wcm90b2NvbEIMR2FyZGVuUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.Proto.ResourceMessage.ResourceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.SoilDtoProto), global::Com.Proto.GardenMessage.SoilDtoProto.Parser, new[]{ "SoilId", "State", "PropId", "BeginTime", "SpeedTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ReqGardenInfoProto), global::Com.Proto.GardenMessage.ReqGardenInfoProto.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ReqExpandSoilProto), global::Com.Proto.GardenMessage.ReqExpandSoilProto.Parser, new[]{ "SoilId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ReqPlantCropProto), global::Com.Proto.GardenMessage.ReqPlantCropProto.Parser, new[]{ "SoilId", "PropId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ReqApplyFertilizeProto), global::Com.Proto.GardenMessage.ReqApplyFertilizeProto.Parser, new[]{ "SoilId", "MuckId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ReqReapCropProto), global::Com.Proto.GardenMessage.ReqReapCropProto.Parser, new[]{ "SoilId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ReqQuickPlantCropsProto), global::Com.Proto.GardenMessage.ReqQuickPlantCropsProto.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ReqRemoveCropProto), global::Com.Proto.GardenMessage.ReqRemoveCropProto.Parser, new[]{ "SoilId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ReqQuickReapCropsProto), global::Com.Proto.GardenMessage.ReqQuickReapCropsProto.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.GradenLogDtoProto), global::Com.Proto.GardenMessage.GradenLogDtoProto.Parser, new[]{ "LogId", "CreateTime", "ParamList", "Resource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ResGardenInfoProto), global::Com.Proto.GardenMessage.ResGardenInfoProto.Parser, new[]{ "SoilInfoList", "LogList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ResExpandSoilProto), global::Com.Proto.GardenMessage.ResExpandSoilProto.Parser, new[]{ "SoilInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ResPlantCropProto), global::Com.Proto.GardenMessage.ResPlantCropProto.Parser, new[]{ "SoilInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ResApplyFertilizeProto), global::Com.Proto.GardenMessage.ResApplyFertilizeProto.Parser, new[]{ "SoilInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ResReapCropProto), global::Com.Proto.GardenMessage.ResReapCropProto.Parser, new[]{ "Resource", "SoilInfo", "FoisonState", "GodLikeCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ResQuickPlantCropsProto), global::Com.Proto.GardenMessage.ResQuickPlantCropsProto.Parser, new[]{ "SoilInfoList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ResRemoveCropProto), global::Com.Proto.GardenMessage.ResRemoveCropProto.Parser, new[]{ "Resource", "SoilInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ResQuickReapCropsProto), global::Com.Proto.GardenMessage.ResQuickReapCropsProto.Parser, new[]{ "Resource", "SoilInfoList", "FoisonIdList", "GodLikeCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.GardenMessage.ResAddGardenLogProto), global::Com.Proto.GardenMessage.ResAddGardenLogProto.Parser, new[]{ "LogInfo" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 协议列表
  /// 土地信息		msgId=176001
  /// </summary>
  public sealed partial class SoilDtoProto : pb::IMessage<SoilDtoProto> {
    private static readonly pb::MessageParser<SoilDtoProto> _parser = new pb::MessageParser<SoilDtoProto>(() => new SoilDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SoilDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoilDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoilDtoProto(SoilDtoProto other) : this() {
      soilId_ = other.soilId_;
      state_ = other.state_;
      propId_ = other.propId_;
      beginTime_ = other.beginTime_;
      speedTime_ = other.speedTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoilDtoProto Clone() {
      return new SoilDtoProto(this);
    }

    /// <summary>Field number for the "soilId" field.</summary>
    public const int SoilIdFieldNumber = 1;
    private int soilId_;
    /// <summary>
    ///土地编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SoilId {
      get { return soilId_; }
      set {
        soilId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private int state_;
    /// <summary>
    ///土地状态(-1-未解锁,0-未扩建,1-未种植,2-已种植,3-已成熟)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "propId" field.</summary>
    public const int PropIdFieldNumber = 3;
    private int propId_;
    /// <summary>
    ///种子道具id(客户端做映射)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    /// <summary>Field number for the "beginTime" field.</summary>
    public const int BeginTimeFieldNumber = 4;
    private int beginTime_;
    /// <summary>
    ///种植作物开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BeginTime {
      get { return beginTime_; }
      set {
        beginTime_ = value;
      }
    }

    /// <summary>Field number for the "speedTime" field.</summary>
    public const int SpeedTimeFieldNumber = 5;
    private int speedTime_;
    /// <summary>
    ///加速时间(这个值说明土地的颜色需要变化)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedTime {
      get { return speedTime_; }
      set {
        speedTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SoilDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SoilDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoilId != other.SoilId) return false;
      if (State != other.State) return false;
      if (PropId != other.PropId) return false;
      if (BeginTime != other.BeginTime) return false;
      if (SpeedTime != other.SpeedTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SoilId != 0) hash ^= SoilId.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (PropId != 0) hash ^= PropId.GetHashCode();
      if (BeginTime != 0) hash ^= BeginTime.GetHashCode();
      if (SpeedTime != 0) hash ^= SpeedTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SoilId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SoilId);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(State);
      }
      if (PropId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PropId);
      }
      if (BeginTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BeginTime);
      }
      if (SpeedTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SpeedTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SoilId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoilId);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (PropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropId);
      }
      if (BeginTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeginTime);
      }
      if (SpeedTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SoilDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.SoilId != 0) {
        SoilId = other.SoilId;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.PropId != 0) {
        PropId = other.PropId;
      }
      if (other.BeginTime != 0) {
        BeginTime = other.BeginTime;
      }
      if (other.SpeedTime != 0) {
        SpeedTime = other.SpeedTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SoilId = input.ReadInt32();
            break;
          }
          case 16: {
            State = input.ReadInt32();
            break;
          }
          case 24: {
            PropId = input.ReadInt32();
            break;
          }
          case 32: {
            BeginTime = input.ReadInt32();
            break;
          }
          case 40: {
            SpeedTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求庄园数据信息		msgId=176002
  /// </summary>
  public sealed partial class ReqGardenInfoProto : pb::IMessage<ReqGardenInfoProto> {
    private static readonly pb::MessageParser<ReqGardenInfoProto> _parser = new pb::MessageParser<ReqGardenInfoProto>(() => new ReqGardenInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqGardenInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGardenInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGardenInfoProto(ReqGardenInfoProto other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqGardenInfoProto Clone() {
      return new ReqGardenInfoProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqGardenInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqGardenInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqGardenInfoProto other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求扩建土地(已经解锁才能扩建)		msgId=176003
  /// </summary>
  public sealed partial class ReqExpandSoilProto : pb::IMessage<ReqExpandSoilProto> {
    private static readonly pb::MessageParser<ReqExpandSoilProto> _parser = new pb::MessageParser<ReqExpandSoilProto>(() => new ReqExpandSoilProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqExpandSoilProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqExpandSoilProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqExpandSoilProto(ReqExpandSoilProto other) : this() {
      soilId_ = other.soilId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqExpandSoilProto Clone() {
      return new ReqExpandSoilProto(this);
    }

    /// <summary>Field number for the "soilId" field.</summary>
    public const int SoilIdFieldNumber = 1;
    private int soilId_;
    /// <summary>
    ///土地编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SoilId {
      get { return soilId_; }
      set {
        soilId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqExpandSoilProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqExpandSoilProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoilId != other.SoilId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SoilId != 0) hash ^= SoilId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SoilId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SoilId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SoilId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoilId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqExpandSoilProto other) {
      if (other == null) {
        return;
      }
      if (other.SoilId != 0) {
        SoilId = other.SoilId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SoilId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求种植作物		msgId=176004
  /// </summary>
  public sealed partial class ReqPlantCropProto : pb::IMessage<ReqPlantCropProto> {
    private static readonly pb::MessageParser<ReqPlantCropProto> _parser = new pb::MessageParser<ReqPlantCropProto>(() => new ReqPlantCropProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqPlantCropProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPlantCropProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPlantCropProto(ReqPlantCropProto other) : this() {
      soilId_ = other.soilId_;
      propId_ = other.propId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPlantCropProto Clone() {
      return new ReqPlantCropProto(this);
    }

    /// <summary>Field number for the "soilId" field.</summary>
    public const int SoilIdFieldNumber = 1;
    private int soilId_;
    /// <summary>
    ///土地编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SoilId {
      get { return soilId_; }
      set {
        soilId_ = value;
      }
    }

    /// <summary>Field number for the "propId" field.</summary>
    public const int PropIdFieldNumber = 2;
    private int propId_;
    /// <summary>
    ///种子道具id(道具表id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqPlantCropProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqPlantCropProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoilId != other.SoilId) return false;
      if (PropId != other.PropId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SoilId != 0) hash ^= SoilId.GetHashCode();
      if (PropId != 0) hash ^= PropId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SoilId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SoilId);
      }
      if (PropId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SoilId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoilId);
      }
      if (PropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqPlantCropProto other) {
      if (other == null) {
        return;
      }
      if (other.SoilId != 0) {
        SoilId = other.SoilId;
      }
      if (other.PropId != 0) {
        PropId = other.PropId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SoilId = input.ReadInt32();
            break;
          }
          case 16: {
            PropId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求农作物施肥		msgId=176005
  /// </summary>
  public sealed partial class ReqApplyFertilizeProto : pb::IMessage<ReqApplyFertilizeProto> {
    private static readonly pb::MessageParser<ReqApplyFertilizeProto> _parser = new pb::MessageParser<ReqApplyFertilizeProto>(() => new ReqApplyFertilizeProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqApplyFertilizeProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqApplyFertilizeProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqApplyFertilizeProto(ReqApplyFertilizeProto other) : this() {
      soilId_ = other.soilId_;
      muckId_ = other.muckId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqApplyFertilizeProto Clone() {
      return new ReqApplyFertilizeProto(this);
    }

    /// <summary>Field number for the "soilId" field.</summary>
    public const int SoilIdFieldNumber = 1;
    private int soilId_;
    /// <summary>
    ///土地编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SoilId {
      get { return soilId_; }
      set {
        soilId_ = value;
      }
    }

    /// <summary>Field number for the "muckId" field.</summary>
    public const int MuckIdFieldNumber = 2;
    private int muckId_;
    /// <summary>
    ///使用的肥料id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MuckId {
      get { return muckId_; }
      set {
        muckId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqApplyFertilizeProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqApplyFertilizeProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoilId != other.SoilId) return false;
      if (MuckId != other.MuckId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SoilId != 0) hash ^= SoilId.GetHashCode();
      if (MuckId != 0) hash ^= MuckId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SoilId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SoilId);
      }
      if (MuckId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MuckId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SoilId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoilId);
      }
      if (MuckId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MuckId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqApplyFertilizeProto other) {
      if (other == null) {
        return;
      }
      if (other.SoilId != 0) {
        SoilId = other.SoilId;
      }
      if (other.MuckId != 0) {
        MuckId = other.MuckId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SoilId = input.ReadInt32();
            break;
          }
          case 16: {
            MuckId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求收割农作物		msgId=176006
  /// </summary>
  public sealed partial class ReqReapCropProto : pb::IMessage<ReqReapCropProto> {
    private static readonly pb::MessageParser<ReqReapCropProto> _parser = new pb::MessageParser<ReqReapCropProto>(() => new ReqReapCropProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqReapCropProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqReapCropProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqReapCropProto(ReqReapCropProto other) : this() {
      soilId_ = other.soilId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqReapCropProto Clone() {
      return new ReqReapCropProto(this);
    }

    /// <summary>Field number for the "soilId" field.</summary>
    public const int SoilIdFieldNumber = 1;
    private int soilId_;
    /// <summary>
    ///土地编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SoilId {
      get { return soilId_; }
      set {
        soilId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqReapCropProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqReapCropProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoilId != other.SoilId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SoilId != 0) hash ^= SoilId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SoilId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SoilId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SoilId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoilId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqReapCropProto other) {
      if (other == null) {
        return;
      }
      if (other.SoilId != 0) {
        SoilId = other.SoilId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SoilId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求一键种植农作物(按照策划要求种植)		msgId=176007
  /// </summary>
  public sealed partial class ReqQuickPlantCropsProto : pb::IMessage<ReqQuickPlantCropsProto> {
    private static readonly pb::MessageParser<ReqQuickPlantCropsProto> _parser = new pb::MessageParser<ReqQuickPlantCropsProto>(() => new ReqQuickPlantCropsProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqQuickPlantCropsProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqQuickPlantCropsProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqQuickPlantCropsProto(ReqQuickPlantCropsProto other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqQuickPlantCropsProto Clone() {
      return new ReqQuickPlantCropsProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqQuickPlantCropsProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqQuickPlantCropsProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqQuickPlantCropsProto other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求铲除土地上的农作物		msgId=176008
  /// </summary>
  public sealed partial class ReqRemoveCropProto : pb::IMessage<ReqRemoveCropProto> {
    private static readonly pb::MessageParser<ReqRemoveCropProto> _parser = new pb::MessageParser<ReqRemoveCropProto>(() => new ReqRemoveCropProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqRemoveCropProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqRemoveCropProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqRemoveCropProto(ReqRemoveCropProto other) : this() {
      soilId_ = other.soilId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqRemoveCropProto Clone() {
      return new ReqRemoveCropProto(this);
    }

    /// <summary>Field number for the "soilId" field.</summary>
    public const int SoilIdFieldNumber = 1;
    private int soilId_;
    /// <summary>
    ///操作的土地编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SoilId {
      get { return soilId_; }
      set {
        soilId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqRemoveCropProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqRemoveCropProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoilId != other.SoilId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SoilId != 0) hash ^= SoilId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SoilId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SoilId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SoilId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoilId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqRemoveCropProto other) {
      if (other == null) {
        return;
      }
      if (other.SoilId != 0) {
        SoilId = other.SoilId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SoilId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求一键收割农作物		msgId=176009
  /// </summary>
  public sealed partial class ReqQuickReapCropsProto : pb::IMessage<ReqQuickReapCropsProto> {
    private static readonly pb::MessageParser<ReqQuickReapCropsProto> _parser = new pb::MessageParser<ReqQuickReapCropsProto>(() => new ReqQuickReapCropsProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqQuickReapCropsProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqQuickReapCropsProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqQuickReapCropsProto(ReqQuickReapCropsProto other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqQuickReapCropsProto Clone() {
      return new ReqQuickReapCropsProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqQuickReapCropsProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqQuickReapCropsProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqQuickReapCropsProto other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 庄园日志Dto		msgId=176010
  /// </summary>
  public sealed partial class GradenLogDtoProto : pb::IMessage<GradenLogDtoProto> {
    private static readonly pb::MessageParser<GradenLogDtoProto> _parser = new pb::MessageParser<GradenLogDtoProto>(() => new GradenLogDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GradenLogDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GradenLogDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GradenLogDtoProto(GradenLogDtoProto other) : this() {
      logId_ = other.logId_;
      createTime_ = other.createTime_;
      paramList_ = other.paramList_.Clone();
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GradenLogDtoProto Clone() {
      return new GradenLogDtoProto(this);
    }

    /// <summary>Field number for the "logId" field.</summary>
    public const int LogIdFieldNumber = 1;
    private int logId_;
    /// <summary>
    ///日志模板id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LogId {
      get { return logId_; }
      set {
        logId_ = value;
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private int createTime_;
    /// <summary>
    ///日志记录时间 /s
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "paramList" field.</summary>
    public const int ParamListFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_paramList_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> paramList_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///日志内容模板对应参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ParamList {
      get { return paramList_; }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 4;
    private global::Com.Proto.ResourceMessage.RewardGroupDtoProto resource_;
    /// <summary>
    ///如果有资源的话这里才有值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.ResourceMessage.RewardGroupDtoProto Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GradenLogDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GradenLogDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LogId != other.LogId) return false;
      if (CreateTime != other.CreateTime) return false;
      if(!paramList_.Equals(other.paramList_)) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LogId != 0) hash ^= LogId.GetHashCode();
      if (CreateTime != 0) hash ^= CreateTime.GetHashCode();
      hash ^= paramList_.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LogId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LogId);
      }
      if (CreateTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CreateTime);
      }
      paramList_.WriteTo(output, _repeated_paramList_codec);
      if (resource_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Resource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LogId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LogId);
      }
      if (CreateTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreateTime);
      }
      size += paramList_.CalculateSize(_repeated_paramList_codec);
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GradenLogDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.LogId != 0) {
        LogId = other.LogId;
      }
      if (other.CreateTime != 0) {
        CreateTime = other.CreateTime;
      }
      paramList_.Add(other.paramList_);
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
        }
        Resource.MergeFrom(other.Resource);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LogId = input.ReadInt32();
            break;
          }
          case 16: {
            CreateTime = input.ReadInt32();
            break;
          }
          case 26: {
            paramList_.AddEntriesFrom(input, _repeated_paramList_codec);
            break;
          }
          case 34: {
            if (resource_ == null) {
              Resource = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
            }
            input.ReadMessage(Resource);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回庄园数据信息		msgId=176101
  /// </summary>
  public sealed partial class ResGardenInfoProto : pb::IMessage<ResGardenInfoProto> {
    private static readonly pb::MessageParser<ResGardenInfoProto> _parser = new pb::MessageParser<ResGardenInfoProto>(() => new ResGardenInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResGardenInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResGardenInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResGardenInfoProto(ResGardenInfoProto other) : this() {
      soilInfoList_ = other.soilInfoList_.Clone();
      logList_ = other.logList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResGardenInfoProto Clone() {
      return new ResGardenInfoProto(this);
    }

    /// <summary>Field number for the "soilInfoList" field.</summary>
    public const int SoilInfoListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.GardenMessage.SoilDtoProto> _repeated_soilInfoList_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.GardenMessage.SoilDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.GardenMessage.SoilDtoProto> soilInfoList_ = new pbc::RepeatedField<global::Com.Proto.GardenMessage.SoilDtoProto>();
    /// <summary>
    ///玩家已解锁的土地信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.GardenMessage.SoilDtoProto> SoilInfoList {
      get { return soilInfoList_; }
    }

    /// <summary>Field number for the "logList" field.</summary>
    public const int LogListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.GardenMessage.GradenLogDtoProto> _repeated_logList_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.GardenMessage.GradenLogDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.GardenMessage.GradenLogDtoProto> logList_ = new pbc::RepeatedField<global::Com.Proto.GardenMessage.GradenLogDtoProto>();
    /// <summary>
    ///日志列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.GardenMessage.GradenLogDtoProto> LogList {
      get { return logList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResGardenInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResGardenInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!soilInfoList_.Equals(other.soilInfoList_)) return false;
      if(!logList_.Equals(other.logList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= soilInfoList_.GetHashCode();
      hash ^= logList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      soilInfoList_.WriteTo(output, _repeated_soilInfoList_codec);
      logList_.WriteTo(output, _repeated_logList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += soilInfoList_.CalculateSize(_repeated_soilInfoList_codec);
      size += logList_.CalculateSize(_repeated_logList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResGardenInfoProto other) {
      if (other == null) {
        return;
      }
      soilInfoList_.Add(other.soilInfoList_);
      logList_.Add(other.logList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            soilInfoList_.AddEntriesFrom(input, _repeated_soilInfoList_codec);
            break;
          }
          case 18: {
            logList_.AddEntriesFrom(input, _repeated_logList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回扩建土地信息		msgId=176102
  /// </summary>
  public sealed partial class ResExpandSoilProto : pb::IMessage<ResExpandSoilProto> {
    private static readonly pb::MessageParser<ResExpandSoilProto> _parser = new pb::MessageParser<ResExpandSoilProto>(() => new ResExpandSoilProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResExpandSoilProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResExpandSoilProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResExpandSoilProto(ResExpandSoilProto other) : this() {
      soilInfo_ = other.soilInfo_ != null ? other.soilInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResExpandSoilProto Clone() {
      return new ResExpandSoilProto(this);
    }

    /// <summary>Field number for the "soilInfo" field.</summary>
    public const int SoilInfoFieldNumber = 1;
    private global::Com.Proto.GardenMessage.SoilDtoProto soilInfo_;
    /// <summary>
    ///土地信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.GardenMessage.SoilDtoProto SoilInfo {
      get { return soilInfo_; }
      set {
        soilInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResExpandSoilProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResExpandSoilProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SoilInfo, other.SoilInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (soilInfo_ != null) hash ^= SoilInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (soilInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SoilInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (soilInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SoilInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResExpandSoilProto other) {
      if (other == null) {
        return;
      }
      if (other.soilInfo_ != null) {
        if (soilInfo_ == null) {
          SoilInfo = new global::Com.Proto.GardenMessage.SoilDtoProto();
        }
        SoilInfo.MergeFrom(other.SoilInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (soilInfo_ == null) {
              SoilInfo = new global::Com.Proto.GardenMessage.SoilDtoProto();
            }
            input.ReadMessage(SoilInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回种植结果(更新土地信息)		msgId=176103
  /// </summary>
  public sealed partial class ResPlantCropProto : pb::IMessage<ResPlantCropProto> {
    private static readonly pb::MessageParser<ResPlantCropProto> _parser = new pb::MessageParser<ResPlantCropProto>(() => new ResPlantCropProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResPlantCropProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPlantCropProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPlantCropProto(ResPlantCropProto other) : this() {
      soilInfo_ = other.soilInfo_ != null ? other.soilInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPlantCropProto Clone() {
      return new ResPlantCropProto(this);
    }

    /// <summary>Field number for the "soilInfo" field.</summary>
    public const int SoilInfoFieldNumber = 1;
    private global::Com.Proto.GardenMessage.SoilDtoProto soilInfo_;
    /// <summary>
    ///土地信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.GardenMessage.SoilDtoProto SoilInfo {
      get { return soilInfo_; }
      set {
        soilInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResPlantCropProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResPlantCropProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SoilInfo, other.SoilInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (soilInfo_ != null) hash ^= SoilInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (soilInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SoilInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (soilInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SoilInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResPlantCropProto other) {
      if (other == null) {
        return;
      }
      if (other.soilInfo_ != null) {
        if (soilInfo_ == null) {
          SoilInfo = new global::Com.Proto.GardenMessage.SoilDtoProto();
        }
        SoilInfo.MergeFrom(other.SoilInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (soilInfo_ == null) {
              SoilInfo = new global::Com.Proto.GardenMessage.SoilDtoProto();
            }
            input.ReadMessage(SoilInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回农作物施肥结果		msgId=176104
  /// </summary>
  public sealed partial class ResApplyFertilizeProto : pb::IMessage<ResApplyFertilizeProto> {
    private static readonly pb::MessageParser<ResApplyFertilizeProto> _parser = new pb::MessageParser<ResApplyFertilizeProto>(() => new ResApplyFertilizeProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResApplyFertilizeProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResApplyFertilizeProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResApplyFertilizeProto(ResApplyFertilizeProto other) : this() {
      soilInfo_ = other.soilInfo_ != null ? other.soilInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResApplyFertilizeProto Clone() {
      return new ResApplyFertilizeProto(this);
    }

    /// <summary>Field number for the "soilInfo" field.</summary>
    public const int SoilInfoFieldNumber = 1;
    private global::Com.Proto.GardenMessage.SoilDtoProto soilInfo_;
    /// <summary>
    ///操作之后的土地信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.GardenMessage.SoilDtoProto SoilInfo {
      get { return soilInfo_; }
      set {
        soilInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResApplyFertilizeProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResApplyFertilizeProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SoilInfo, other.SoilInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (soilInfo_ != null) hash ^= SoilInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (soilInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SoilInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (soilInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SoilInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResApplyFertilizeProto other) {
      if (other == null) {
        return;
      }
      if (other.soilInfo_ != null) {
        if (soilInfo_ == null) {
          SoilInfo = new global::Com.Proto.GardenMessage.SoilDtoProto();
        }
        SoilInfo.MergeFrom(other.SoilInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (soilInfo_ == null) {
              SoilInfo = new global::Com.Proto.GardenMessage.SoilDtoProto();
            }
            input.ReadMessage(SoilInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回收割农作物		msgId=176105
  /// </summary>
  public sealed partial class ResReapCropProto : pb::IMessage<ResReapCropProto> {
    private static readonly pb::MessageParser<ResReapCropProto> _parser = new pb::MessageParser<ResReapCropProto>(() => new ResReapCropProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResReapCropProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResReapCropProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResReapCropProto(ResReapCropProto other) : this() {
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      soilInfo_ = other.soilInfo_ != null ? other.soilInfo_.Clone() : null;
      foisonState_ = other.foisonState_;
      godLikeCount_ = other.godLikeCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResReapCropProto Clone() {
      return new ResReapCropProto(this);
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 1;
    private global::Com.Proto.ResourceMessage.RewardGroupDtoProto resource_;
    /// <summary>
    ///获得的奖励列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.ResourceMessage.RewardGroupDtoProto Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "soilInfo" field.</summary>
    public const int SoilInfoFieldNumber = 2;
    private global::Com.Proto.GardenMessage.SoilDtoProto soilInfo_;
    /// <summary>
    ///操作之后的土地信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.GardenMessage.SoilDtoProto SoilInfo {
      get { return soilInfo_; }
      set {
        soilInfo_ = value;
      }
    }

    /// <summary>Field number for the "foisonState" field.</summary>
    public const int FoisonStateFieldNumber = 3;
    private bool foisonState_;
    /// <summary>
    ///是否大丰收
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FoisonState {
      get { return foisonState_; }
      set {
        foisonState_ = value;
      }
    }

    /// <summary>Field number for the "godLikeCount" field.</summary>
    public const int GodLikeCountFieldNumber = 4;
    private int godLikeCount_;
    /// <summary>
    ///触发神迹次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GodLikeCount {
      get { return godLikeCount_; }
      set {
        godLikeCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResReapCropProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResReapCropProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Resource, other.Resource)) return false;
      if (!object.Equals(SoilInfo, other.SoilInfo)) return false;
      if (FoisonState != other.FoisonState) return false;
      if (GodLikeCount != other.GodLikeCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (soilInfo_ != null) hash ^= SoilInfo.GetHashCode();
      if (FoisonState != false) hash ^= FoisonState.GetHashCode();
      if (GodLikeCount != 0) hash ^= GodLikeCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resource_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Resource);
      }
      if (soilInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SoilInfo);
      }
      if (FoisonState != false) {
        output.WriteRawTag(24);
        output.WriteBool(FoisonState);
      }
      if (GodLikeCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GodLikeCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (soilInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SoilInfo);
      }
      if (FoisonState != false) {
        size += 1 + 1;
      }
      if (GodLikeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GodLikeCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResReapCropProto other) {
      if (other == null) {
        return;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
        }
        Resource.MergeFrom(other.Resource);
      }
      if (other.soilInfo_ != null) {
        if (soilInfo_ == null) {
          SoilInfo = new global::Com.Proto.GardenMessage.SoilDtoProto();
        }
        SoilInfo.MergeFrom(other.SoilInfo);
      }
      if (other.FoisonState != false) {
        FoisonState = other.FoisonState;
      }
      if (other.GodLikeCount != 0) {
        GodLikeCount = other.GodLikeCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resource_ == null) {
              Resource = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 18: {
            if (soilInfo_ == null) {
              SoilInfo = new global::Com.Proto.GardenMessage.SoilDtoProto();
            }
            input.ReadMessage(SoilInfo);
            break;
          }
          case 24: {
            FoisonState = input.ReadBool();
            break;
          }
          case 32: {
            GodLikeCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回一键种植农作物		msgId=176106
  /// </summary>
  public sealed partial class ResQuickPlantCropsProto : pb::IMessage<ResQuickPlantCropsProto> {
    private static readonly pb::MessageParser<ResQuickPlantCropsProto> _parser = new pb::MessageParser<ResQuickPlantCropsProto>(() => new ResQuickPlantCropsProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResQuickPlantCropsProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResQuickPlantCropsProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResQuickPlantCropsProto(ResQuickPlantCropsProto other) : this() {
      soilInfoList_ = other.soilInfoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResQuickPlantCropsProto Clone() {
      return new ResQuickPlantCropsProto(this);
    }

    /// <summary>Field number for the "soilInfoList" field.</summary>
    public const int SoilInfoListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.GardenMessage.SoilDtoProto> _repeated_soilInfoList_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.GardenMessage.SoilDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.GardenMessage.SoilDtoProto> soilInfoList_ = new pbc::RepeatedField<global::Com.Proto.GardenMessage.SoilDtoProto>();
    /// <summary>
    ///所有有操作过的土地信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.GardenMessage.SoilDtoProto> SoilInfoList {
      get { return soilInfoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResQuickPlantCropsProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResQuickPlantCropsProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!soilInfoList_.Equals(other.soilInfoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= soilInfoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      soilInfoList_.WriteTo(output, _repeated_soilInfoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += soilInfoList_.CalculateSize(_repeated_soilInfoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResQuickPlantCropsProto other) {
      if (other == null) {
        return;
      }
      soilInfoList_.Add(other.soilInfoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            soilInfoList_.AddEntriesFrom(input, _repeated_soilInfoList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回铲除农作物(种子需要返还给玩家)		msgId=176107
  /// </summary>
  public sealed partial class ResRemoveCropProto : pb::IMessage<ResRemoveCropProto> {
    private static readonly pb::MessageParser<ResRemoveCropProto> _parser = new pb::MessageParser<ResRemoveCropProto>(() => new ResRemoveCropProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResRemoveCropProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResRemoveCropProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResRemoveCropProto(ResRemoveCropProto other) : this() {
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      soilInfo_ = other.soilInfo_ != null ? other.soilInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResRemoveCropProto Clone() {
      return new ResRemoveCropProto(this);
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 1;
    private global::Com.Proto.ResourceMessage.RewardGroupDtoProto resource_;
    /// <summary>
    ///返还的道具列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.ResourceMessage.RewardGroupDtoProto Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "soilInfo" field.</summary>
    public const int SoilInfoFieldNumber = 2;
    private global::Com.Proto.GardenMessage.SoilDtoProto soilInfo_;
    /// <summary>
    ///土地信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.GardenMessage.SoilDtoProto SoilInfo {
      get { return soilInfo_; }
      set {
        soilInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResRemoveCropProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResRemoveCropProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Resource, other.Resource)) return false;
      if (!object.Equals(SoilInfo, other.SoilInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (soilInfo_ != null) hash ^= SoilInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resource_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Resource);
      }
      if (soilInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SoilInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (soilInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SoilInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResRemoveCropProto other) {
      if (other == null) {
        return;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
        }
        Resource.MergeFrom(other.Resource);
      }
      if (other.soilInfo_ != null) {
        if (soilInfo_ == null) {
          SoilInfo = new global::Com.Proto.GardenMessage.SoilDtoProto();
        }
        SoilInfo.MergeFrom(other.SoilInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resource_ == null) {
              Resource = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 18: {
            if (soilInfo_ == null) {
              SoilInfo = new global::Com.Proto.GardenMessage.SoilDtoProto();
            }
            input.ReadMessage(SoilInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回一键收获农作物		msgId=176108
  /// </summary>
  public sealed partial class ResQuickReapCropsProto : pb::IMessage<ResQuickReapCropsProto> {
    private static readonly pb::MessageParser<ResQuickReapCropsProto> _parser = new pb::MessageParser<ResQuickReapCropsProto>(() => new ResQuickReapCropsProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResQuickReapCropsProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResQuickReapCropsProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResQuickReapCropsProto(ResQuickReapCropsProto other) : this() {
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      soilInfoList_ = other.soilInfoList_.Clone();
      foisonIdList_ = other.foisonIdList_.Clone();
      godLikeCount_ = other.godLikeCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResQuickReapCropsProto Clone() {
      return new ResQuickReapCropsProto(this);
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 1;
    private global::Com.Proto.ResourceMessage.RewardGroupDtoProto resource_;
    /// <summary>
    ///收获道具列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.ResourceMessage.RewardGroupDtoProto Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "soilInfoList" field.</summary>
    public const int SoilInfoListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.GardenMessage.SoilDtoProto> _repeated_soilInfoList_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.GardenMessage.SoilDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.GardenMessage.SoilDtoProto> soilInfoList_ = new pbc::RepeatedField<global::Com.Proto.GardenMessage.SoilDtoProto>();
    /// <summary>
    ///收获的土地信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.GardenMessage.SoilDtoProto> SoilInfoList {
      get { return soilInfoList_; }
    }

    /// <summary>Field number for the "foisonIdList" field.</summary>
    public const int FoisonIdListFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_foisonIdList_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> foisonIdList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///丰收的土地id列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FoisonIdList {
      get { return foisonIdList_; }
    }

    /// <summary>Field number for the "godLikeCount" field.</summary>
    public const int GodLikeCountFieldNumber = 4;
    private int godLikeCount_;
    /// <summary>
    ///触发神迹次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GodLikeCount {
      get { return godLikeCount_; }
      set {
        godLikeCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResQuickReapCropsProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResQuickReapCropsProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Resource, other.Resource)) return false;
      if(!soilInfoList_.Equals(other.soilInfoList_)) return false;
      if(!foisonIdList_.Equals(other.foisonIdList_)) return false;
      if (GodLikeCount != other.GodLikeCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resource_ != null) hash ^= Resource.GetHashCode();
      hash ^= soilInfoList_.GetHashCode();
      hash ^= foisonIdList_.GetHashCode();
      if (GodLikeCount != 0) hash ^= GodLikeCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resource_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Resource);
      }
      soilInfoList_.WriteTo(output, _repeated_soilInfoList_codec);
      foisonIdList_.WriteTo(output, _repeated_foisonIdList_codec);
      if (GodLikeCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GodLikeCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      size += soilInfoList_.CalculateSize(_repeated_soilInfoList_codec);
      size += foisonIdList_.CalculateSize(_repeated_foisonIdList_codec);
      if (GodLikeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GodLikeCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResQuickReapCropsProto other) {
      if (other == null) {
        return;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
        }
        Resource.MergeFrom(other.Resource);
      }
      soilInfoList_.Add(other.soilInfoList_);
      foisonIdList_.Add(other.foisonIdList_);
      if (other.GodLikeCount != 0) {
        GodLikeCount = other.GodLikeCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resource_ == null) {
              Resource = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 18: {
            soilInfoList_.AddEntriesFrom(input, _repeated_soilInfoList_codec);
            break;
          }
          case 26:
          case 24: {
            foisonIdList_.AddEntriesFrom(input, _repeated_foisonIdList_codec);
            break;
          }
          case 32: {
            GodLikeCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 添加庄园日志		msgId=176109
  /// </summary>
  public sealed partial class ResAddGardenLogProto : pb::IMessage<ResAddGardenLogProto> {
    private static readonly pb::MessageParser<ResAddGardenLogProto> _parser = new pb::MessageParser<ResAddGardenLogProto>(() => new ResAddGardenLogProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResAddGardenLogProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.GardenMessage.GardenReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAddGardenLogProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAddGardenLogProto(ResAddGardenLogProto other) : this() {
      logInfo_ = other.logInfo_ != null ? other.logInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResAddGardenLogProto Clone() {
      return new ResAddGardenLogProto(this);
    }

    /// <summary>Field number for the "logInfo" field.</summary>
    public const int LogInfoFieldNumber = 1;
    private global::Com.Proto.GardenMessage.GradenLogDtoProto logInfo_;
    /// <summary>
    ///日志信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.GardenMessage.GradenLogDtoProto LogInfo {
      get { return logInfo_; }
      set {
        logInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResAddGardenLogProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResAddGardenLogProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogInfo, other.LogInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (logInfo_ != null) hash ^= LogInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (logInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (logInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResAddGardenLogProto other) {
      if (other == null) {
        return;
      }
      if (other.logInfo_ != null) {
        if (logInfo_ == null) {
          LogInfo = new global::Com.Proto.GardenMessage.GradenLogDtoProto();
        }
        LogInfo.MergeFrom(other.LogInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logInfo_ == null) {
              LogInfo = new global::Com.Proto.GardenMessage.GradenLogDtoProto();
            }
            input.ReadMessage(LogInfo);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
