// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: reddot.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto.ReddotMessage {

  /// <summary>Holder for reflection information generated from reddot.proto</summary>
  public static partial class ReddotReflection {

    #region Descriptor
    /// <summary>File descriptor for reddot.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReddotReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxyZWRkb3QucHJvdG8SF2NvbS5wcm90by5yZWRkb3RNZXNzYWdlIjgKElJl",
            "ZGRvdEluZm9EdG9Qcm90bxISCgpyZWRQb2ludElkGAEgASgFEg4KBnZhbHVl",
            "cxgCIAEoBSJSChJSZXNSZWRkb3RJbmZvUHJvdG8SPAoHcmVkZG90cxgBIAMo",
            "CzIrLmNvbS5wcm90by5yZWRkb3RNZXNzYWdlLlJlZGRvdEluZm9EdG9Qcm90",
            "byIrChVSZXFSZWRkb3RDb25zdWx0UHJvdG8SEgoKcmVkUG9pbnRJZBgBIAEo",
            "BUIvCh9jb20uZ2FtZS5tb2R1bGUucmVkZG90LnByb3RvY29sQgxSZWRkb3RQ",
            "cm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReddotMessage.ReddotInfoDtoProto), global::Com.Proto.ReddotMessage.ReddotInfoDtoProto.Parser, new[]{ "RedPointId", "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReddotMessage.ResReddotInfoProto), global::Com.Proto.ReddotMessage.ResReddotInfoProto.Parser, new[]{ "Reddots" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ReddotMessage.ReqReddotConsultProto), global::Com.Proto.ReddotMessage.ReqReddotConsultProto.Parser, new[]{ "RedPointId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///红点信息
  /// </summary>
  public sealed partial class ReddotInfoDtoProto : pb::IMessage<ReddotInfoDtoProto> {
    private static readonly pb::MessageParser<ReddotInfoDtoProto> _parser = new pb::MessageParser<ReddotInfoDtoProto>(() => new ReddotInfoDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReddotInfoDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ReddotMessage.ReddotReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReddotInfoDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReddotInfoDtoProto(ReddotInfoDtoProto other) : this() {
      redPointId_ = other.redPointId_;
      values_ = other.values_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReddotInfoDtoProto Clone() {
      return new ReddotInfoDtoProto(this);
    }

    /// <summary>Field number for the "redPointId" field.</summary>
    public const int RedPointIdFieldNumber = 1;
    private int redPointId_;
    /// <summary>
    ///红点条件id,一个模块可以有多个条件.条件id可以和模块id绑定,客户端用于定位红点显示地方.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RedPointId {
      get { return redPointId_; }
      set {
        redPointId_ = value;
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private int values_;
    /// <summary>
    ///次数或引用id,用于显示可使用次数,或用于模块道具id,如新获得一件道具需要显示红点.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Values {
      get { return values_; }
      set {
        values_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReddotInfoDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReddotInfoDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RedPointId != other.RedPointId) return false;
      if (Values != other.Values) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RedPointId != 0) hash ^= RedPointId.GetHashCode();
      if (Values != 0) hash ^= Values.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RedPointId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RedPointId);
      }
      if (Values != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RedPointId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RedPointId);
      }
      if (Values != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Values);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReddotInfoDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.RedPointId != 0) {
        RedPointId = other.RedPointId;
      }
      if (other.Values != 0) {
        Values = other.Values;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RedPointId = input.ReadInt32();
            break;
          }
          case 16: {
            Values = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回红点数据		msgId=199002
  /// </summary>
  public sealed partial class ResReddotInfoProto : pb::IMessage<ResReddotInfoProto> {
    private static readonly pb::MessageParser<ResReddotInfoProto> _parser = new pb::MessageParser<ResReddotInfoProto>(() => new ResReddotInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResReddotInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ReddotMessage.ReddotReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResReddotInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResReddotInfoProto(ResReddotInfoProto other) : this() {
      reddots_ = other.reddots_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResReddotInfoProto Clone() {
      return new ResReddotInfoProto(this);
    }

    /// <summary>Field number for the "reddots" field.</summary>
    public const int ReddotsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.ReddotMessage.ReddotInfoDtoProto> _repeated_reddots_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.ReddotMessage.ReddotInfoDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ReddotMessage.ReddotInfoDtoProto> reddots_ = new pbc::RepeatedField<global::Com.Proto.ReddotMessage.ReddotInfoDtoProto>();
    /// <summary>
    ///红点列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ReddotMessage.ReddotInfoDtoProto> Reddots {
      get { return reddots_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResReddotInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResReddotInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reddots_.Equals(other.reddots_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reddots_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reddots_.WriteTo(output, _repeated_reddots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reddots_.CalculateSize(_repeated_reddots_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResReddotInfoProto other) {
      if (other == null) {
        return;
      }
      reddots_.Add(other.reddots_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reddots_.AddEntriesFrom(input, _repeated_reddots_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求红点查阅      msgId=199001
  /// </summary>
  public sealed partial class ReqReddotConsultProto : pb::IMessage<ReqReddotConsultProto> {
    private static readonly pb::MessageParser<ReqReddotConsultProto> _parser = new pb::MessageParser<ReqReddotConsultProto>(() => new ReqReddotConsultProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqReddotConsultProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ReddotMessage.ReddotReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqReddotConsultProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqReddotConsultProto(ReqReddotConsultProto other) : this() {
      redPointId_ = other.redPointId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqReddotConsultProto Clone() {
      return new ReqReddotConsultProto(this);
    }

    /// <summary>Field number for the "redPointId" field.</summary>
    public const int RedPointIdFieldNumber = 1;
    private int redPointId_;
    /// <summary>
    ///红点条件id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RedPointId {
      get { return redPointId_; }
      set {
        redPointId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqReddotConsultProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqReddotConsultProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RedPointId != other.RedPointId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RedPointId != 0) hash ^= RedPointId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RedPointId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RedPointId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RedPointId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RedPointId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqReddotConsultProto other) {
      if (other == null) {
        return;
      }
      if (other.RedPointId != 0) {
        RedPointId = other.RedPointId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RedPointId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
