// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PBRank.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Protocol {

  #region Messages
  /// <summary>
  ///排行基础信息
  /// </summary>
  public sealed class RankInfo : pb::IMessage {
    private static readonly pb::MessageParser<RankInfo> _parser = new pb::MessageParser<RankInfo>(() => new RankInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankInfo> Parser { get { return _parser; } }

    /// <summary>Field number for the "objId" field.</summary>
    public const int ObjIdFieldNumber = 1;
    private long objId_;
    /// <summary>
    ///id, 对象id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObjId {
      get { return objId_; }
      set {
        objId_ = value;
      }
    }

    /// <summary>Field number for the "ranking" field.</summary>
    public const int RankingFieldNumber = 2;
    private int ranking_;
    /// <summary>
    ///排名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ranking {
      get { return ranking_; }
      set {
        ranking_ = value;
      }
    }

    /// <summary>Field number for the "objValue" field.</summary>
    public const int ObjValueFieldNumber = 3;
    private int objValue_;
    /// <summary>
    ///值1,排序列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjValue {
      get { return objValue_; }
      set {
        objValue_ = value;
      }
    }

    /// <summary>Field number for the "objValue2" field.</summary>
    public const int ObjValue2FieldNumber = 4;
    private int objValue2_;
    /// <summary>
    ///值2,额外信息列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjValue2 {
      get { return objValue2_; }
      set {
        objValue2_ = value;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 5;
    private global::Protocol.PlayerProfile player_;
    /// <summary>
    ///玩家信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.PlayerProfile Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ObjId);
      }
      if (Ranking != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Ranking);
      }
      if (ObjValue != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ObjValue);
      }
      if (ObjValue2 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ObjValue2);
      }
      if (player_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Player);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObjId);
      }
      if (Ranking != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ranking);
      }
      if (ObjValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjValue);
      }
      if (ObjValue2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjValue2);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ObjId = input.ReadInt64();
            break;
          }
          case 16: {
            Ranking = input.ReadInt32();
            break;
          }
          case 24: {
            ObjValue = input.ReadInt32();
            break;
          }
          case 32: {
            ObjValue2 = input.ReadInt32();
            break;
          }
          case 42: {
            if (player_ == null) {
              player_ = new global::Protocol.PlayerProfile();
            }
            input.ReadMessage(player_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///请求排行榜
  /// </summary>
  public sealed class ReqRankList : pb::IMessage {
    private static readonly pb::MessageParser<ReqRankList> _parser = new pb::MessageParser<ReqRankList>(() => new ReqRankList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqRankList> Parser { get { return _parser; } }

    /// <summary>Field number for the "rankType" field.</summary>
    public const int RankTypeFieldNumber = 1;
    private int rankType_;
    /// <summary>
    ///排行榜类型,1=战力排行.根据排行榜配置id去请求排行信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RankType {
      get { return rankType_; }
      set {
        rankType_ = value;
      }
    }

    /// <summary>Field number for the "startIndex" field.</summary>
    public const int StartIndexFieldNumber = 2;
    private int startIndex_;
    /// <summary>
    ///请求榜数据开始索引 （0开始）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 3;
    private int count_;
    /// <summary>
    ///请求榜数据索引偏移数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RankType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RankType);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartIndex);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RankType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankType);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RankType = input.ReadInt32();
            break;
          }
          case 16: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///响应排行榜
  /// </summary>
  public sealed class AckRankList : pb::IMessage {
    private static readonly pb::MessageParser<AckRankList> _parser = new pb::MessageParser<AckRankList>(() => new AckRankList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AckRankList> Parser { get { return _parser; } }

    /// <summary>Field number for the "rankType" field.</summary>
    public const int RankTypeFieldNumber = 1;
    private int rankType_;
    /// <summary>
    ///排行榜类型,1=战力排行,2=剧情排行...
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RankType {
      get { return rankType_; }
      set {
        rankType_ = value;
      }
    }

    /// <summary>Field number for the "startIndex" field.</summary>
    public const int StartIndexFieldNumber = 2;
    private int startIndex_;
    /// <summary>
    ///榜数据开始索引
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 3;
    private int count_;
    /// <summary>
    ///榜数据索引偏移数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "myRank" field.</summary>
    public const int MyRankFieldNumber = 4;
    private global::Protocol.RankInfo myRank_;
    /// <summary>
    ///我的信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.RankInfo MyRank {
      get { return myRank_; }
      set {
        myRank_ = value;
      }
    }

    /// <summary>Field number for the "ranks" field.</summary>
    public const int RanksFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Protocol.RankInfo> _repeated_ranks_codec
        = pb::FieldCodec.ForMessage(42, global::Protocol.RankInfo.Parser);
    private readonly pbc::RepeatedField<global::Protocol.RankInfo> ranks_ = new pbc::RepeatedField<global::Protocol.RankInfo>();
    /// <summary>
    ///排行榜列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.RankInfo> Ranks {
      get { return ranks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RankType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RankType);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartIndex);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
      if (myRank_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MyRank);
      }
      ranks_.WriteTo(output, _repeated_ranks_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RankType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankType);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (myRank_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MyRank);
      }
      size += ranks_.CalculateSize(_repeated_ranks_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RankType = input.ReadInt32();
            break;
          }
          case 16: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
          case 34: {
            if (myRank_ == null) {
              myRank_ = new global::Protocol.RankInfo();
            }
            input.ReadMessage(myRank_);
            break;
          }
          case 42: {
            ranks_.AddEntriesFrom(input, _repeated_ranks_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
