// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: chat.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto.ChatMessage {

  /// <summary>Holder for reflection information generated from chat.proto</summary>
  public static partial class ChatReflection {

    #region Descriptor
    /// <summary>File descriptor for chat.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChatReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpjaGF0LnByb3RvEhVjb20ucHJvdG8uY2hhdE1lc3NhZ2Ui0wEKEENoYXRJ",
            "bmZvRHRvUHJvdG8SEAoIcGxheWVySWQYASABKAMSEgoKcGxheWVyTmFtZRgC",
            "IAEoCRINCgVsZXZlbBgDIAEoBRIOCgZoZWFkSWQYBCABKAUSEAoIdmlwTGV2",
            "ZWwYBSABKAUSDwoHY29udGVudBgGIAEoCRIPCgd0aXRsZUlkGAcgASgFEgwK",
            "BHRpbWUYCCABKAUSEwoLbWVzc2FnZVR5cGUYCSABKAUSDgoGcGFyYW1zGAog",
            "AygJEhMKC2hlYWRGcmFtZUlkGAsgASgFIkEKElJlcUNoYXRSZWNvcmRQcm90",
            "bxIMCgR0eXBlGAEgASgFEgsKA251bRgCIAEoBRIQCgh0YXJnZXRJZBgDIAEo",
            "AyI/CgxSZXFDaGF0UHJvdG8SDAoEdHlwZRgBIAEoBRIPCgdjb250ZW50GAIg",
            "ASgJEhAKCHBsYXllcklkGAMgASgDImEKElJlc0NoYXRSZWNvcmRQcm90bxIM",
            "CgR0eXBlGAEgASgFEj0KDGNoYXRJbmZvTGlzdBgCIAMoCzInLmNvbS5wcm90",
            "by5jaGF0TWVzc2FnZS5DaGF0SW5mb0R0b1Byb3RvIlcKDFJlc0NoYXRQcm90",
            "bxIMCgR0eXBlGAEgASgFEjkKCGNoYXRJbmZvGAIgASgLMicuY29tLnByb3Rv",
            "LmNoYXRNZXNzYWdlLkNoYXRJbmZvRHRvUHJvdG8iLAoYUmVzQ2xlYXJDaGF0",
            "UmVjb3Jkc1Byb3RvEhAKCHBsYXllcklkGAEgASgDIqkBChRSZXNJbml0Q2hh",
            "dEluZm9Qcm90bxI8CgtuZXdDaGF0SW5mbxgBIAEoCzInLmNvbS5wcm90by5j",
            "aGF0TWVzc2FnZS5DaGF0SW5mb0R0b1Byb3RvEj0KDHN5c0NoYXRJbmZvcxgC",
            "IAMoCzInLmNvbS5wcm90by5jaGF0TWVzc2FnZS5DaGF0SW5mb0R0b1Byb3Rv",
            "EhQKDG5leHRDaGF0VGltZRgDIAEoBSIlChJSZXNSb2xsTm90aWNlUHJvdG8S",
            "DwoHY29udGVudBgBIAEoCUIrCh1jb20uZ2FtZS5tb2R1bGUuY2hhdC5wcm90",
            "b2NvbEIKQ2hhdFByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChatMessage.ChatInfoDtoProto), global::Com.Proto.ChatMessage.ChatInfoDtoProto.Parser, new[]{ "PlayerId", "PlayerName", "Level", "HeadId", "VipLevel", "Content", "TitleId", "Time", "MessageType", "Params", "HeadFrameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChatMessage.ReqChatRecordProto), global::Com.Proto.ChatMessage.ReqChatRecordProto.Parser, new[]{ "Type", "Num", "TargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChatMessage.ReqChatProto), global::Com.Proto.ChatMessage.ReqChatProto.Parser, new[]{ "Type", "Content", "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChatMessage.ResChatRecordProto), global::Com.Proto.ChatMessage.ResChatRecordProto.Parser, new[]{ "Type", "ChatInfoList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChatMessage.ResChatProto), global::Com.Proto.ChatMessage.ResChatProto.Parser, new[]{ "Type", "ChatInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChatMessage.ResClearChatRecordsProto), global::Com.Proto.ChatMessage.ResClearChatRecordsProto.Parser, new[]{ "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChatMessage.ResInitChatInfoProto), global::Com.Proto.ChatMessage.ResInitChatInfoProto.Parser, new[]{ "NewChatInfo", "SysChatInfos", "NextChatTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.ChatMessage.ResRollNoticeProto), global::Com.Proto.ChatMessage.ResRollNoticeProto.Parser, new[]{ "Content" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 协议列表
  /// 聊天信息dto		msgId=166001
  /// </summary>
  public sealed partial class ChatInfoDtoProto : pb::IMessage<ChatInfoDtoProto> {
    private static readonly pb::MessageParser<ChatInfoDtoProto> _parser = new pb::MessageParser<ChatInfoDtoProto>(() => new ChatInfoDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatInfoDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ChatMessage.ChatReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatInfoDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatInfoDtoProto(ChatInfoDtoProto other) : this() {
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      level_ = other.level_;
      headId_ = other.headId_;
      vipLevel_ = other.vipLevel_;
      content_ = other.content_;
      titleId_ = other.titleId_;
      time_ = other.time_;
      messageType_ = other.messageType_;
      params_ = other.params_.Clone();
      headFrameId_ = other.headFrameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatInfoDtoProto Clone() {
      return new ChatInfoDtoProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    /// <summary>
    ///玩家名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    /// <summary>
    ///位份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "headId" field.</summary>
    public const int HeadIdFieldNumber = 4;
    private int headId_;
    /// <summary>
    ///头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeadId {
      get { return headId_; }
      set {
        headId_ = value;
      }
    }

    /// <summary>Field number for the "vipLevel" field.</summary>
    public const int VipLevelFieldNumber = 5;
    private int vipLevel_;
    /// <summary>
    ///vip等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VipLevel {
      get { return vipLevel_; }
      set {
        vipLevel_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 6;
    private string content_ = "";
    /// <summary>
    ///内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "titleId" field.</summary>
    public const int TitleIdFieldNumber = 7;
    private int titleId_;
    /// <summary>
    ///玩家当前使用称号id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TitleId {
      get { return titleId_; }
      set {
        titleId_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 8;
    private int time_;
    /// <summary>
    ///聊天发送时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 9;
    private int messageType_;
    /// <summary>
    ///消息类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_params_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> params_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///额外参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Params {
      get { return params_; }
    }

    /// <summary>Field number for the "headFrameId" field.</summary>
    public const int HeadFrameIdFieldNumber = 11;
    private int headFrameId_;
    /// <summary>
    ///头像框
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeadFrameId {
      get { return headFrameId_; }
      set {
        headFrameId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatInfoDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatInfoDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (Level != other.Level) return false;
      if (HeadId != other.HeadId) return false;
      if (VipLevel != other.VipLevel) return false;
      if (Content != other.Content) return false;
      if (TitleId != other.TitleId) return false;
      if (Time != other.Time) return false;
      if (MessageType != other.MessageType) return false;
      if(!params_.Equals(other.params_)) return false;
      if (HeadFrameId != other.HeadFrameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (HeadId != 0) hash ^= HeadId.GetHashCode();
      if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (TitleId != 0) hash ^= TitleId.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      hash ^= params_.GetHashCode();
      if (HeadFrameId != 0) hash ^= HeadFrameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (HeadId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HeadId);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(VipLevel);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (TitleId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TitleId);
      }
      if (Time != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Time);
      }
      if (MessageType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MessageType);
      }
      params_.WriteTo(output, _repeated_params_codec);
      if (HeadFrameId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(HeadFrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (HeadId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeadId);
      }
      if (VipLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (TitleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TitleId);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageType);
      }
      size += params_.CalculateSize(_repeated_params_codec);
      if (HeadFrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeadFrameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatInfoDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.HeadId != 0) {
        HeadId = other.HeadId;
      }
      if (other.VipLevel != 0) {
        VipLevel = other.VipLevel;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.TitleId != 0) {
        TitleId = other.TitleId;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      params_.Add(other.params_);
      if (other.HeadFrameId != 0) {
        HeadFrameId = other.HeadFrameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            HeadId = input.ReadInt32();
            break;
          }
          case 40: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
          case 56: {
            TitleId = input.ReadInt32();
            break;
          }
          case 64: {
            Time = input.ReadInt32();
            break;
          }
          case 72: {
            MessageType = input.ReadInt32();
            break;
          }
          case 82: {
            params_.AddEntriesFrom(input, _repeated_params_codec);
            break;
          }
          case 88: {
            HeadFrameId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求聊天记录		msgId=166101
  /// </summary>
  public sealed partial class ReqChatRecordProto : pb::IMessage<ReqChatRecordProto> {
    private static readonly pb::MessageParser<ReqChatRecordProto> _parser = new pb::MessageParser<ReqChatRecordProto>(() => new ReqChatRecordProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqChatRecordProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ChatMessage.ChatReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqChatRecordProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqChatRecordProto(ReqChatRecordProto other) : this() {
      type_ = other.type_;
      num_ = other.num_;
      targetId_ = other.targetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqChatRecordProto Clone() {
      return new ReqChatRecordProto(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///聊天类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    /// <summary>
    ///客户端已有的聊天条数，例如，如果为0，服务器返回1-10条消息，如果为5，服务器返回6-15条消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 3;
    private long targetId_;
    /// <summary>
    ///目标id 频道为好友的时,此id为好友id,当频道为泡温泉时,此处为温泉房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqChatRecordProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqChatRecordProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Num != other.Num) return false;
      if (TargetId != other.TargetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (TargetId != 0L) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (TargetId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (TargetId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqChatRecordProto other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      if (other.TargetId != 0L) {
        TargetId = other.TargetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 24: {
            TargetId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求发送聊天消息		msgId=166102
  /// </summary>
  public sealed partial class ReqChatProto : pb::IMessage<ReqChatProto> {
    private static readonly pb::MessageParser<ReqChatProto> _parser = new pb::MessageParser<ReqChatProto>(() => new ReqChatProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqChatProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ChatMessage.ChatReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqChatProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqChatProto(ReqChatProto other) : this() {
      type_ = other.type_;
      content_ = other.content_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqChatProto Clone() {
      return new ReqChatProto(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///聊天类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    /// <summary>
    ///聊天内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 3;
    private long playerId_;
    /// <summary>
    ///私聊玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqChatProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqChatProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Content != other.Content) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (PlayerId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqChatProto other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            PlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回聊天记录		msgId=166201
  /// </summary>
  public sealed partial class ResChatRecordProto : pb::IMessage<ResChatRecordProto> {
    private static readonly pb::MessageParser<ResChatRecordProto> _parser = new pb::MessageParser<ResChatRecordProto>(() => new ResChatRecordProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResChatRecordProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ChatMessage.ChatReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResChatRecordProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResChatRecordProto(ResChatRecordProto other) : this() {
      type_ = other.type_;
      chatInfoList_ = other.chatInfoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResChatRecordProto Clone() {
      return new ResChatRecordProto(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///聊天类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "chatInfoList" field.</summary>
    public const int ChatInfoListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.ChatMessage.ChatInfoDtoProto> _repeated_chatInfoList_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.ChatMessage.ChatInfoDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ChatMessage.ChatInfoDtoProto> chatInfoList_ = new pbc::RepeatedField<global::Com.Proto.ChatMessage.ChatInfoDtoProto>();
    /// <summary>
    ///聊天记录列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ChatMessage.ChatInfoDtoProto> ChatInfoList {
      get { return chatInfoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResChatRecordProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResChatRecordProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!chatInfoList_.Equals(other.chatInfoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= chatInfoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      chatInfoList_.WriteTo(output, _repeated_chatInfoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += chatInfoList_.CalculateSize(_repeated_chatInfoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResChatRecordProto other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      chatInfoList_.Add(other.chatInfoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            chatInfoList_.AddEntriesFrom(input, _repeated_chatInfoList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回聊天消息		msgId=166202
  /// </summary>
  public sealed partial class ResChatProto : pb::IMessage<ResChatProto> {
    private static readonly pb::MessageParser<ResChatProto> _parser = new pb::MessageParser<ResChatProto>(() => new ResChatProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResChatProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ChatMessage.ChatReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResChatProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResChatProto(ResChatProto other) : this() {
      type_ = other.type_;
      chatInfo_ = other.chatInfo_ != null ? other.chatInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResChatProto Clone() {
      return new ResChatProto(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///聊天类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "chatInfo" field.</summary>
    public const int ChatInfoFieldNumber = 2;
    private global::Com.Proto.ChatMessage.ChatInfoDtoProto chatInfo_;
    /// <summary>
    ///聊天内容列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.ChatMessage.ChatInfoDtoProto ChatInfo {
      get { return chatInfo_; }
      set {
        chatInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResChatProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResChatProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(ChatInfo, other.ChatInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (chatInfo_ != null) hash ^= ChatInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (chatInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ChatInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (chatInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResChatProto other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.chatInfo_ != null) {
        if (chatInfo_ == null) {
          ChatInfo = new global::Com.Proto.ChatMessage.ChatInfoDtoProto();
        }
        ChatInfo.MergeFrom(other.ChatInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            if (chatInfo_ == null) {
              ChatInfo = new global::Com.Proto.ChatMessage.ChatInfoDtoProto();
            }
            input.ReadMessage(ChatInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 通知清理指定玩家的聊天记录		msgId=166206
  /// </summary>
  public sealed partial class ResClearChatRecordsProto : pb::IMessage<ResClearChatRecordsProto> {
    private static readonly pb::MessageParser<ResClearChatRecordsProto> _parser = new pb::MessageParser<ResClearChatRecordsProto>(() => new ResClearChatRecordsProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResClearChatRecordsProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ChatMessage.ChatReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResClearChatRecordsProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResClearChatRecordsProto(ResClearChatRecordsProto other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResClearChatRecordsProto Clone() {
      return new ResClearChatRecordsProto(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    /// <summary>
    ///要清理的玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResClearChatRecordsProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResClearChatRecordsProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResClearChatRecordsProto other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 初始聊天信息		msgId=166207
  /// </summary>
  public sealed partial class ResInitChatInfoProto : pb::IMessage<ResInitChatInfoProto> {
    private static readonly pb::MessageParser<ResInitChatInfoProto> _parser = new pb::MessageParser<ResInitChatInfoProto>(() => new ResInitChatInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResInitChatInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ChatMessage.ChatReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResInitChatInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResInitChatInfoProto(ResInitChatInfoProto other) : this() {
      newChatInfo_ = other.newChatInfo_ != null ? other.newChatInfo_.Clone() : null;
      sysChatInfos_ = other.sysChatInfos_.Clone();
      nextChatTime_ = other.nextChatTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResInitChatInfoProto Clone() {
      return new ResInitChatInfoProto(this);
    }

    /// <summary>Field number for the "newChatInfo" field.</summary>
    public const int NewChatInfoFieldNumber = 1;
    private global::Com.Proto.ChatMessage.ChatInfoDtoProto newChatInfo_;
    /// <summary>
    ///最新的聊天消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.ChatMessage.ChatInfoDtoProto NewChatInfo {
      get { return newChatInfo_; }
      set {
        newChatInfo_ = value;
      }
    }

    /// <summary>Field number for the "sysChatInfos" field.</summary>
    public const int SysChatInfosFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.ChatMessage.ChatInfoDtoProto> _repeated_sysChatInfos_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.ChatMessage.ChatInfoDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.ChatMessage.ChatInfoDtoProto> sysChatInfos_ = new pbc::RepeatedField<global::Com.Proto.ChatMessage.ChatInfoDtoProto>();
    /// <summary>
    ///系统聊天
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.ChatMessage.ChatInfoDtoProto> SysChatInfos {
      get { return sysChatInfos_; }
    }

    /// <summary>Field number for the "nextChatTime" field.</summary>
    public const int NextChatTimeFieldNumber = 3;
    private int nextChatTime_;
    /// <summary>
    ///下一次发言时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NextChatTime {
      get { return nextChatTime_; }
      set {
        nextChatTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResInitChatInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResInitChatInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NewChatInfo, other.NewChatInfo)) return false;
      if(!sysChatInfos_.Equals(other.sysChatInfos_)) return false;
      if (NextChatTime != other.NextChatTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (newChatInfo_ != null) hash ^= NewChatInfo.GetHashCode();
      hash ^= sysChatInfos_.GetHashCode();
      if (NextChatTime != 0) hash ^= NextChatTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (newChatInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NewChatInfo);
      }
      sysChatInfos_.WriteTo(output, _repeated_sysChatInfos_codec);
      if (NextChatTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NextChatTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (newChatInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewChatInfo);
      }
      size += sysChatInfos_.CalculateSize(_repeated_sysChatInfos_codec);
      if (NextChatTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextChatTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResInitChatInfoProto other) {
      if (other == null) {
        return;
      }
      if (other.newChatInfo_ != null) {
        if (newChatInfo_ == null) {
          NewChatInfo = new global::Com.Proto.ChatMessage.ChatInfoDtoProto();
        }
        NewChatInfo.MergeFrom(other.NewChatInfo);
      }
      sysChatInfos_.Add(other.sysChatInfos_);
      if (other.NextChatTime != 0) {
        NextChatTime = other.NextChatTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (newChatInfo_ == null) {
              NewChatInfo = new global::Com.Proto.ChatMessage.ChatInfoDtoProto();
            }
            input.ReadMessage(NewChatInfo);
            break;
          }
          case 18: {
            sysChatInfos_.AddEntriesFrom(input, _repeated_sysChatInfos_codec);
            break;
          }
          case 24: {
            NextChatTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 滚动公告播放		msgId=166208
  /// </summary>
  public sealed partial class ResRollNoticeProto : pb::IMessage<ResRollNoticeProto> {
    private static readonly pb::MessageParser<ResRollNoticeProto> _parser = new pb::MessageParser<ResRollNoticeProto>(() => new ResRollNoticeProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResRollNoticeProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.ChatMessage.ChatReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResRollNoticeProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResRollNoticeProto(ResRollNoticeProto other) : this() {
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResRollNoticeProto Clone() {
      return new ResRollNoticeProto(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string content_ = "";
    /// <summary>
    ///公告内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResRollNoticeProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResRollNoticeProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResRollNoticeProto other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
