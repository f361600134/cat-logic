// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: wish.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Proto.WishMessage {

  /// <summary>Holder for reflection information generated from wish.proto</summary>
  public static partial class WishReflection {

    #region Descriptor
    /// <summary>File descriptor for wish.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WishReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgp3aXNoLnByb3RvEhVjb20ucHJvdG8ud2lzaE1lc3NhZ2UaDnJlc291cmNl",
            "LnByb3RvIiAKEFJlcVdpc2hJbmZvUHJvdG8SDAoEdHlwZRgBIAEoBSIkChBS",
            "ZXFNYWtlV2lzaFByb3RvEhAKCGNvbmZpZ0lkGAEgASgFIioKFlJlcVdpc2hC",
            "b3R0bGVJbmZvUHJvdG8SEAoIY29uZmlnSWQYASABKAUiOQoWUmVxV2lzaEJv",
            "dHRsZVR1cm5Qcm90bxIQCghjb25maWdJZBgBIAEoBRINCgVpbmRleBgCIAEo",
            "BSJpChhSZXFXaXNoQ2xvdGhDb21wb3NlUHJvdG8SEAoIY29uZmlnSWQYASAB",
            "KAUSOwoJY2xvdGhMaXN0GAIgAygLMiguY29tLnByb3RvLndpc2hNZXNzYWdl",
            "Lldpc2hDbG90aER0b1Byb3RvIi0KGVJlcURpc2NhcmRXaXNoQm90dGxlUHJv",
            "dG8SEAoIY29uZmlnSWQYASABKAUiUQoQUmVzV2lzaEluZm9Qcm90bxI9Cgx3",
            "aXNoSW5mb0xpc3QYASADKAsyJy5jb20ucHJvdG8ud2lzaE1lc3NhZ2UuV2lz",
            "aEluZm9EdG9Qcm90byJoChBSZXNNYWtlV2lzaFByb3RvEhQKDG5leHRGcmVl",
            "VGltZRgBIAEoBRI+CgZyZXdhcmQYAiABKAsyLi5jb20ucHJvdG8ucmVzb3Vy",
            "Y2VNZXNzYWdlLlJld2FyZEdyb3VwRHRvUHJvdG8inwEKFlJlc1dpc2hCb3R0",
            "bGVJbmZvUHJvdG8SFAoMY2FuVHVybkNvdW50GAEgASgFEhQKDHN1bVR1cm5D",
            "b3VudBgCIAEoBRJHChB0dXJuT3ZlckNhcmRMaXN0GAMgAygLMi0uY29tLnBy",
            "b3RvLndpc2hNZXNzYWdlLldpc2hCb3R0bGVDYXJkRHRvUHJvdG8SEAoIY2Fy",
            "ZExpc3QYBCADKAUiXgoWUmVzV2lzaEJvdHRsZVR1cm5Qcm90bxIUCgxjYW5U",
            "dXJuQ291bnQYASABKAUSFAoMc3VtVHVybkNvdW50GAIgASgFEhgKEHdpc2hC",
            "b3R0bGVQb25kSWQYAyABKAUiWgoYUmVzV2lzaENsb3RoQ29tcG9zZVByb3Rv",
            "Ej4KBnJld2FyZBgBIAEoCzIuLmNvbS5wcm90by5yZXNvdXJjZU1lc3NhZ2Uu",
            "UmV3YXJkR3JvdXBEdG9Qcm90byJuChlSZXNEaXNjYXJkV2lzaEJvdHRsZVBy",
            "b3RvEhAKCGNvbmZpZ0lkGAEgASgFEj8KCGluZm9MaXN0GAIgAygLMi0uY29t",
            "LnByb3RvLndpc2hNZXNzYWdlLldpc2hCb3R0bGVJbmZvRHRvUHJvdG8iWwoY",
            "UmVzVXNhYmxlV2lzaEJvdHRsZVByb3RvEj8KCGluZm9MaXN0GAEgAygLMi0u",
            "Y29tLnByb3RvLndpc2hNZXNzYWdlLldpc2hCb3R0bGVJbmZvRHRvUHJvdG8i",
            "WQoYUmVzV2lzaEFjdGl2aXR5UG9vbFByb3RvEj0KBGxpc3QYASADKAsyLy5j",
            "b20ucHJvdG8ud2lzaE1lc3NhZ2UuV2lzaEFjdGl2aXR5UG9vbER0b1Byb3Rv",
            "Ik4KEFdpc2hJbmZvRHRvUHJvdG8SEAoIY29uZmlnSWQYASABKAUSFAoMbmV4",
            "dEZyZWVUaW1lGAIgASgFEhIKCmNhZHJlQXRsYXMYAyADKAkiQQoWV2lzaEJv",
            "dHRsZUNhcmREdG9Qcm90bxINCgVpbmRleBgBIAEoBRIYChB3aXNoQm90dGxl",
            "UG9uZElkGAIgASgFIjEKEVdpc2hDbG90aER0b1Byb3RvEg8KB2Nsb3RoSWQY",
            "ASABKAUSCwoDbnVtGAIgASgFIrEBChZXaXNoQm90dGxlSW5mb0R0b1Byb3Rv",
            "EhAKCGNvbmZpZ0lkGAEgASgFEhQKDGNhblR1cm5Db3VudBgCIAEoBRIUCgxz",
            "dW1UdXJuQ291bnQYAyABKAUSRwoQdHVybk92ZXJDYXJkTGlzdBgEIAMoCzIt",
            "LmNvbS5wcm90by53aXNoTWVzc2FnZS5XaXNoQm90dGxlQ2FyZER0b1Byb3Rv",
            "EhAKCGNhcmRMaXN0GAUgAygFIk8KGFdpc2hBY3Rpdml0eVBvb2xEdG9Qcm90",
            "bxIPCgdzdWJUeXBlGAEgASgFEhEKCXN0YXJ0VGltZRgCIAEoBRIPCgdlbmRU",
            "aW1lGAMgASgFQisKHWNvbS5nYW1lLm1vZHVsZS53aXNoLnByb3RvY29sQgpX",
            "aXNoUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.Proto.ResourceMessage.ResourceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ReqWishInfoProto), global::Com.Proto.WishMessage.ReqWishInfoProto.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ReqMakeWishProto), global::Com.Proto.WishMessage.ReqMakeWishProto.Parser, new[]{ "ConfigId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ReqWishBottleInfoProto), global::Com.Proto.WishMessage.ReqWishBottleInfoProto.Parser, new[]{ "ConfigId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ReqWishBottleTurnProto), global::Com.Proto.WishMessage.ReqWishBottleTurnProto.Parser, new[]{ "ConfigId", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ReqWishClothComposeProto), global::Com.Proto.WishMessage.ReqWishClothComposeProto.Parser, new[]{ "ConfigId", "ClothList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ReqDiscardWishBottleProto), global::Com.Proto.WishMessage.ReqDiscardWishBottleProto.Parser, new[]{ "ConfigId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ResWishInfoProto), global::Com.Proto.WishMessage.ResWishInfoProto.Parser, new[]{ "WishInfoList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ResMakeWishProto), global::Com.Proto.WishMessage.ResMakeWishProto.Parser, new[]{ "NextFreeTime", "Reward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ResWishBottleInfoProto), global::Com.Proto.WishMessage.ResWishBottleInfoProto.Parser, new[]{ "CanTurnCount", "SumTurnCount", "TurnOverCardList", "CardList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ResWishBottleTurnProto), global::Com.Proto.WishMessage.ResWishBottleTurnProto.Parser, new[]{ "CanTurnCount", "SumTurnCount", "WishBottlePondId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ResWishClothComposeProto), global::Com.Proto.WishMessage.ResWishClothComposeProto.Parser, new[]{ "Reward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ResDiscardWishBottleProto), global::Com.Proto.WishMessage.ResDiscardWishBottleProto.Parser, new[]{ "ConfigId", "InfoList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ResUsableWishBottleProto), global::Com.Proto.WishMessage.ResUsableWishBottleProto.Parser, new[]{ "InfoList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.ResWishActivityPoolProto), global::Com.Proto.WishMessage.ResWishActivityPoolProto.Parser, new[]{ "List" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.WishInfoDtoProto), global::Com.Proto.WishMessage.WishInfoDtoProto.Parser, new[]{ "ConfigId", "NextFreeTime", "CadreAtlas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.WishBottleCardDtoProto), global::Com.Proto.WishMessage.WishBottleCardDtoProto.Parser, new[]{ "Index", "WishBottlePondId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.WishClothDtoProto), global::Com.Proto.WishMessage.WishClothDtoProto.Parser, new[]{ "ClothId", "Num" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.WishBottleInfoDtoProto), global::Com.Proto.WishMessage.WishBottleInfoDtoProto.Parser, new[]{ "ConfigId", "CanTurnCount", "SumTurnCount", "TurnOverCardList", "CardList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Proto.WishMessage.WishActivityPoolDtoProto), global::Com.Proto.WishMessage.WishActivityPoolDtoProto.Parser, new[]{ "SubType", "StartTime", "EndTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 协议列表
  /// 请求许愿信息		msgId=175001
  /// </summary>
  public sealed partial class ReqWishInfoProto : pb::IMessage<ReqWishInfoProto> {
    private static readonly pb::MessageParser<ReqWishInfoProto> _parser = new pb::MessageParser<ReqWishInfoProto>(() => new ReqWishInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqWishInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishInfoProto(ReqWishInfoProto other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishInfoProto Clone() {
      return new ReqWishInfoProto(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    ///类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqWishInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqWishInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqWishInfoProto other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求许愿		msgId=175002
  /// </summary>
  public sealed partial class ReqMakeWishProto : pb::IMessage<ReqMakeWishProto> {
    private static readonly pb::MessageParser<ReqMakeWishProto> _parser = new pb::MessageParser<ReqMakeWishProto>(() => new ReqMakeWishProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqMakeWishProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqMakeWishProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqMakeWishProto(ReqMakeWishProto other) : this() {
      configId_ = other.configId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqMakeWishProto Clone() {
      return new ReqMakeWishProto(this);
    }

    /// <summary>Field number for the "configId" field.</summary>
    public const int ConfigIdFieldNumber = 1;
    private int configId_;
    /// <summary>
    ///配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigId {
      get { return configId_; }
      set {
        configId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqMakeWishProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqMakeWishProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigId != other.ConfigId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqMakeWishProto other) {
      if (other == null) {
        return;
      }
      if (other.ConfigId != 0) {
        ConfigId = other.ConfigId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求心愿瓶信息		msgId=175003
  /// </summary>
  public sealed partial class ReqWishBottleInfoProto : pb::IMessage<ReqWishBottleInfoProto> {
    private static readonly pb::MessageParser<ReqWishBottleInfoProto> _parser = new pb::MessageParser<ReqWishBottleInfoProto>(() => new ReqWishBottleInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqWishBottleInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishBottleInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishBottleInfoProto(ReqWishBottleInfoProto other) : this() {
      configId_ = other.configId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishBottleInfoProto Clone() {
      return new ReqWishBottleInfoProto(this);
    }

    /// <summary>Field number for the "configId" field.</summary>
    public const int ConfigIdFieldNumber = 1;
    private int configId_;
    /// <summary>
    ///配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigId {
      get { return configId_; }
      set {
        configId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqWishBottleInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqWishBottleInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigId != other.ConfigId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqWishBottleInfoProto other) {
      if (other == null) {
        return;
      }
      if (other.ConfigId != 0) {
        ConfigId = other.ConfigId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求心愿瓶翻牌		msgId=175004
  /// </summary>
  public sealed partial class ReqWishBottleTurnProto : pb::IMessage<ReqWishBottleTurnProto> {
    private static readonly pb::MessageParser<ReqWishBottleTurnProto> _parser = new pb::MessageParser<ReqWishBottleTurnProto>(() => new ReqWishBottleTurnProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqWishBottleTurnProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishBottleTurnProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishBottleTurnProto(ReqWishBottleTurnProto other) : this() {
      configId_ = other.configId_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishBottleTurnProto Clone() {
      return new ReqWishBottleTurnProto(this);
    }

    /// <summary>Field number for the "configId" field.</summary>
    public const int ConfigIdFieldNumber = 1;
    private int configId_;
    /// <summary>
    ///配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigId {
      get { return configId_; }
      set {
        configId_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private int index_;
    /// <summary>
    ///卡牌位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqWishBottleTurnProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqWishBottleTurnProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigId != other.ConfigId) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigId);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqWishBottleTurnProto other) {
      if (other == null) {
        return;
      }
      if (other.ConfigId != 0) {
        ConfigId = other.ConfigId;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigId = input.ReadInt32();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求服装合成		msgId=175005
  /// </summary>
  public sealed partial class ReqWishClothComposeProto : pb::IMessage<ReqWishClothComposeProto> {
    private static readonly pb::MessageParser<ReqWishClothComposeProto> _parser = new pb::MessageParser<ReqWishClothComposeProto>(() => new ReqWishClothComposeProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqWishClothComposeProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishClothComposeProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishClothComposeProto(ReqWishClothComposeProto other) : this() {
      configId_ = other.configId_;
      clothList_ = other.clothList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqWishClothComposeProto Clone() {
      return new ReqWishClothComposeProto(this);
    }

    /// <summary>Field number for the "configId" field.</summary>
    public const int ConfigIdFieldNumber = 1;
    private int configId_;
    /// <summary>
    ///服装合成配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigId {
      get { return configId_; }
      set {
        configId_ = value;
      }
    }

    /// <summary>Field number for the "clothList" field.</summary>
    public const int ClothListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.WishMessage.WishClothDtoProto> _repeated_clothList_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.WishMessage.WishClothDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.WishMessage.WishClothDtoProto> clothList_ = new pbc::RepeatedField<global::Com.Proto.WishMessage.WishClothDtoProto>();
    /// <summary>
    ///服装列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.WishMessage.WishClothDtoProto> ClothList {
      get { return clothList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqWishClothComposeProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqWishClothComposeProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigId != other.ConfigId) return false;
      if(!clothList_.Equals(other.clothList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
      hash ^= clothList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigId);
      }
      clothList_.WriteTo(output, _repeated_clothList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
      }
      size += clothList_.CalculateSize(_repeated_clothList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqWishClothComposeProto other) {
      if (other == null) {
        return;
      }
      if (other.ConfigId != 0) {
        ConfigId = other.ConfigId;
      }
      clothList_.Add(other.clothList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigId = input.ReadInt32();
            break;
          }
          case 18: {
            clothList_.AddEntriesFrom(input, _repeated_clothList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求丢弃心愿瓶		msgId=175006
  /// </summary>
  public sealed partial class ReqDiscardWishBottleProto : pb::IMessage<ReqDiscardWishBottleProto> {
    private static readonly pb::MessageParser<ReqDiscardWishBottleProto> _parser = new pb::MessageParser<ReqDiscardWishBottleProto>(() => new ReqDiscardWishBottleProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqDiscardWishBottleProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqDiscardWishBottleProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqDiscardWishBottleProto(ReqDiscardWishBottleProto other) : this() {
      configId_ = other.configId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqDiscardWishBottleProto Clone() {
      return new ReqDiscardWishBottleProto(this);
    }

    /// <summary>Field number for the "configId" field.</summary>
    public const int ConfigIdFieldNumber = 1;
    private int configId_;
    /// <summary>
    ///心愿瓶配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigId {
      get { return configId_; }
      set {
        configId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqDiscardWishBottleProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqDiscardWishBottleProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigId != other.ConfigId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqDiscardWishBottleProto other) {
      if (other == null) {
        return;
      }
      if (other.ConfigId != 0) {
        ConfigId = other.ConfigId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回许愿信息		msgId=175101
  /// </summary>
  public sealed partial class ResWishInfoProto : pb::IMessage<ResWishInfoProto> {
    private static readonly pb::MessageParser<ResWishInfoProto> _parser = new pb::MessageParser<ResWishInfoProto>(() => new ResWishInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResWishInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishInfoProto(ResWishInfoProto other) : this() {
      wishInfoList_ = other.wishInfoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishInfoProto Clone() {
      return new ResWishInfoProto(this);
    }

    /// <summary>Field number for the "wishInfoList" field.</summary>
    public const int WishInfoListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.WishMessage.WishInfoDtoProto> _repeated_wishInfoList_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.WishMessage.WishInfoDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.WishMessage.WishInfoDtoProto> wishInfoList_ = new pbc::RepeatedField<global::Com.Proto.WishMessage.WishInfoDtoProto>();
    /// <summary>
    ///许愿信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.WishMessage.WishInfoDtoProto> WishInfoList {
      get { return wishInfoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResWishInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResWishInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!wishInfoList_.Equals(other.wishInfoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= wishInfoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      wishInfoList_.WriteTo(output, _repeated_wishInfoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += wishInfoList_.CalculateSize(_repeated_wishInfoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResWishInfoProto other) {
      if (other == null) {
        return;
      }
      wishInfoList_.Add(other.wishInfoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            wishInfoList_.AddEntriesFrom(input, _repeated_wishInfoList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回许愿		msgId=175102
  /// </summary>
  public sealed partial class ResMakeWishProto : pb::IMessage<ResMakeWishProto> {
    private static readonly pb::MessageParser<ResMakeWishProto> _parser = new pb::MessageParser<ResMakeWishProto>(() => new ResMakeWishProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResMakeWishProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResMakeWishProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResMakeWishProto(ResMakeWishProto other) : this() {
      nextFreeTime_ = other.nextFreeTime_;
      reward_ = other.reward_ != null ? other.reward_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResMakeWishProto Clone() {
      return new ResMakeWishProto(this);
    }

    /// <summary>Field number for the "nextFreeTime" field.</summary>
    public const int NextFreeTimeFieldNumber = 1;
    private int nextFreeTime_;
    /// <summary>
    ///下一次免费时间 (-1 不免费)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NextFreeTime {
      get { return nextFreeTime_; }
      set {
        nextFreeTime_ = value;
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 2;
    private global::Com.Proto.ResourceMessage.RewardGroupDtoProto reward_;
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.ResourceMessage.RewardGroupDtoProto Reward {
      get { return reward_; }
      set {
        reward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResMakeWishProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResMakeWishProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NextFreeTime != other.NextFreeTime) return false;
      if (!object.Equals(Reward, other.Reward)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NextFreeTime != 0) hash ^= NextFreeTime.GetHashCode();
      if (reward_ != null) hash ^= Reward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NextFreeTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NextFreeTime);
      }
      if (reward_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NextFreeTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextFreeTime);
      }
      if (reward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResMakeWishProto other) {
      if (other == null) {
        return;
      }
      if (other.NextFreeTime != 0) {
        NextFreeTime = other.NextFreeTime;
      }
      if (other.reward_ != null) {
        if (reward_ == null) {
          Reward = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
        }
        Reward.MergeFrom(other.Reward);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NextFreeTime = input.ReadInt32();
            break;
          }
          case 18: {
            if (reward_ == null) {
              Reward = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
            }
            input.ReadMessage(Reward);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回心愿瓶信息		msgId=175103
  /// </summary>
  public sealed partial class ResWishBottleInfoProto : pb::IMessage<ResWishBottleInfoProto> {
    private static readonly pb::MessageParser<ResWishBottleInfoProto> _parser = new pb::MessageParser<ResWishBottleInfoProto>(() => new ResWishBottleInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResWishBottleInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishBottleInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishBottleInfoProto(ResWishBottleInfoProto other) : this() {
      canTurnCount_ = other.canTurnCount_;
      sumTurnCount_ = other.sumTurnCount_;
      turnOverCardList_ = other.turnOverCardList_.Clone();
      cardList_ = other.cardList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishBottleInfoProto Clone() {
      return new ResWishBottleInfoProto(this);
    }

    /// <summary>Field number for the "canTurnCount" field.</summary>
    public const int CanTurnCountFieldNumber = 1;
    private int canTurnCount_;
    /// <summary>
    ///可翻牌次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CanTurnCount {
      get { return canTurnCount_; }
      set {
        canTurnCount_ = value;
      }
    }

    /// <summary>Field number for the "sumTurnCount" field.</summary>
    public const int SumTurnCountFieldNumber = 2;
    private int sumTurnCount_;
    /// <summary>
    ///总的可翻牌次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SumTurnCount {
      get { return sumTurnCount_; }
      set {
        sumTurnCount_ = value;
      }
    }

    /// <summary>Field number for the "turnOverCardList" field.</summary>
    public const int TurnOverCardListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Proto.WishMessage.WishBottleCardDtoProto> _repeated_turnOverCardList_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Proto.WishMessage.WishBottleCardDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleCardDtoProto> turnOverCardList_ = new pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleCardDtoProto>();
    /// <summary>
    ///已翻卡牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleCardDtoProto> TurnOverCardList {
      get { return turnOverCardList_; }
    }

    /// <summary>Field number for the "cardList" field.</summary>
    public const int CardListFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_cardList_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> cardList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///未翻卡牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CardList {
      get { return cardList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResWishBottleInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResWishBottleInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CanTurnCount != other.CanTurnCount) return false;
      if (SumTurnCount != other.SumTurnCount) return false;
      if(!turnOverCardList_.Equals(other.turnOverCardList_)) return false;
      if(!cardList_.Equals(other.cardList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CanTurnCount != 0) hash ^= CanTurnCount.GetHashCode();
      if (SumTurnCount != 0) hash ^= SumTurnCount.GetHashCode();
      hash ^= turnOverCardList_.GetHashCode();
      hash ^= cardList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CanTurnCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CanTurnCount);
      }
      if (SumTurnCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SumTurnCount);
      }
      turnOverCardList_.WriteTo(output, _repeated_turnOverCardList_codec);
      cardList_.WriteTo(output, _repeated_cardList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CanTurnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CanTurnCount);
      }
      if (SumTurnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SumTurnCount);
      }
      size += turnOverCardList_.CalculateSize(_repeated_turnOverCardList_codec);
      size += cardList_.CalculateSize(_repeated_cardList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResWishBottleInfoProto other) {
      if (other == null) {
        return;
      }
      if (other.CanTurnCount != 0) {
        CanTurnCount = other.CanTurnCount;
      }
      if (other.SumTurnCount != 0) {
        SumTurnCount = other.SumTurnCount;
      }
      turnOverCardList_.Add(other.turnOverCardList_);
      cardList_.Add(other.cardList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CanTurnCount = input.ReadInt32();
            break;
          }
          case 16: {
            SumTurnCount = input.ReadInt32();
            break;
          }
          case 26: {
            turnOverCardList_.AddEntriesFrom(input, _repeated_turnOverCardList_codec);
            break;
          }
          case 34:
          case 32: {
            cardList_.AddEntriesFrom(input, _repeated_cardList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回心愿瓶翻牌		msgId=175104
  /// </summary>
  public sealed partial class ResWishBottleTurnProto : pb::IMessage<ResWishBottleTurnProto> {
    private static readonly pb::MessageParser<ResWishBottleTurnProto> _parser = new pb::MessageParser<ResWishBottleTurnProto>(() => new ResWishBottleTurnProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResWishBottleTurnProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishBottleTurnProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishBottleTurnProto(ResWishBottleTurnProto other) : this() {
      canTurnCount_ = other.canTurnCount_;
      sumTurnCount_ = other.sumTurnCount_;
      wishBottlePondId_ = other.wishBottlePondId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishBottleTurnProto Clone() {
      return new ResWishBottleTurnProto(this);
    }

    /// <summary>Field number for the "canTurnCount" field.</summary>
    public const int CanTurnCountFieldNumber = 1;
    private int canTurnCount_;
    /// <summary>
    ///可翻牌次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CanTurnCount {
      get { return canTurnCount_; }
      set {
        canTurnCount_ = value;
      }
    }

    /// <summary>Field number for the "sumTurnCount" field.</summary>
    public const int SumTurnCountFieldNumber = 2;
    private int sumTurnCount_;
    /// <summary>
    ///总的可翻牌次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SumTurnCount {
      get { return sumTurnCount_; }
      set {
        sumTurnCount_ = value;
      }
    }

    /// <summary>Field number for the "wishBottlePondId" field.</summary>
    public const int WishBottlePondIdFieldNumber = 3;
    private int wishBottlePondId_;
    /// <summary>
    ///奖池配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WishBottlePondId {
      get { return wishBottlePondId_; }
      set {
        wishBottlePondId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResWishBottleTurnProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResWishBottleTurnProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CanTurnCount != other.CanTurnCount) return false;
      if (SumTurnCount != other.SumTurnCount) return false;
      if (WishBottlePondId != other.WishBottlePondId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CanTurnCount != 0) hash ^= CanTurnCount.GetHashCode();
      if (SumTurnCount != 0) hash ^= SumTurnCount.GetHashCode();
      if (WishBottlePondId != 0) hash ^= WishBottlePondId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CanTurnCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CanTurnCount);
      }
      if (SumTurnCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SumTurnCount);
      }
      if (WishBottlePondId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(WishBottlePondId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CanTurnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CanTurnCount);
      }
      if (SumTurnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SumTurnCount);
      }
      if (WishBottlePondId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WishBottlePondId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResWishBottleTurnProto other) {
      if (other == null) {
        return;
      }
      if (other.CanTurnCount != 0) {
        CanTurnCount = other.CanTurnCount;
      }
      if (other.SumTurnCount != 0) {
        SumTurnCount = other.SumTurnCount;
      }
      if (other.WishBottlePondId != 0) {
        WishBottlePondId = other.WishBottlePondId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CanTurnCount = input.ReadInt32();
            break;
          }
          case 16: {
            SumTurnCount = input.ReadInt32();
            break;
          }
          case 24: {
            WishBottlePondId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回服装合成		msgId=175105
  /// </summary>
  public sealed partial class ResWishClothComposeProto : pb::IMessage<ResWishClothComposeProto> {
    private static readonly pb::MessageParser<ResWishClothComposeProto> _parser = new pb::MessageParser<ResWishClothComposeProto>(() => new ResWishClothComposeProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResWishClothComposeProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishClothComposeProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishClothComposeProto(ResWishClothComposeProto other) : this() {
      reward_ = other.reward_ != null ? other.reward_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishClothComposeProto Clone() {
      return new ResWishClothComposeProto(this);
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 1;
    private global::Com.Proto.ResourceMessage.RewardGroupDtoProto reward_;
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Proto.ResourceMessage.RewardGroupDtoProto Reward {
      get { return reward_; }
      set {
        reward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResWishClothComposeProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResWishClothComposeProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reward, other.Reward)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reward_ != null) hash ^= Reward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reward_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResWishClothComposeProto other) {
      if (other == null) {
        return;
      }
      if (other.reward_ != null) {
        if (reward_ == null) {
          Reward = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
        }
        Reward.MergeFrom(other.Reward);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (reward_ == null) {
              Reward = new global::Com.Proto.ResourceMessage.RewardGroupDtoProto();
            }
            input.ReadMessage(Reward);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回丢弃心愿瓶		msgId=175106
  /// </summary>
  public sealed partial class ResDiscardWishBottleProto : pb::IMessage<ResDiscardWishBottleProto> {
    private static readonly pb::MessageParser<ResDiscardWishBottleProto> _parser = new pb::MessageParser<ResDiscardWishBottleProto>(() => new ResDiscardWishBottleProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResDiscardWishBottleProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResDiscardWishBottleProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResDiscardWishBottleProto(ResDiscardWishBottleProto other) : this() {
      configId_ = other.configId_;
      infoList_ = other.infoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResDiscardWishBottleProto Clone() {
      return new ResDiscardWishBottleProto(this);
    }

    /// <summary>Field number for the "configId" field.</summary>
    public const int ConfigIdFieldNumber = 1;
    private int configId_;
    /// <summary>
    ///心愿瓶配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigId {
      get { return configId_; }
      set {
        configId_ = value;
      }
    }

    /// <summary>Field number for the "infoList" field.</summary>
    public const int InfoListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Proto.WishMessage.WishBottleInfoDtoProto> _repeated_infoList_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Proto.WishMessage.WishBottleInfoDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleInfoDtoProto> infoList_ = new pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleInfoDtoProto>();
    /// <summary>
    ///可用的心愿瓶信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleInfoDtoProto> InfoList {
      get { return infoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResDiscardWishBottleProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResDiscardWishBottleProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigId != other.ConfigId) return false;
      if(!infoList_.Equals(other.infoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
      hash ^= infoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigId);
      }
      infoList_.WriteTo(output, _repeated_infoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
      }
      size += infoList_.CalculateSize(_repeated_infoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResDiscardWishBottleProto other) {
      if (other == null) {
        return;
      }
      if (other.ConfigId != 0) {
        ConfigId = other.ConfigId;
      }
      infoList_.Add(other.infoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigId = input.ReadInt32();
            break;
          }
          case 18: {
            infoList_.AddEntriesFrom(input, _repeated_infoList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回可用的心愿瓶		msgId=175107
  /// </summary>
  public sealed partial class ResUsableWishBottleProto : pb::IMessage<ResUsableWishBottleProto> {
    private static readonly pb::MessageParser<ResUsableWishBottleProto> _parser = new pb::MessageParser<ResUsableWishBottleProto>(() => new ResUsableWishBottleProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResUsableWishBottleProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResUsableWishBottleProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResUsableWishBottleProto(ResUsableWishBottleProto other) : this() {
      infoList_ = other.infoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResUsableWishBottleProto Clone() {
      return new ResUsableWishBottleProto(this);
    }

    /// <summary>Field number for the "infoList" field.</summary>
    public const int InfoListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.WishMessage.WishBottleInfoDtoProto> _repeated_infoList_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.WishMessage.WishBottleInfoDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleInfoDtoProto> infoList_ = new pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleInfoDtoProto>();
    /// <summary>
    ///心愿瓶信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleInfoDtoProto> InfoList {
      get { return infoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResUsableWishBottleProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResUsableWishBottleProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!infoList_.Equals(other.infoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= infoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      infoList_.WriteTo(output, _repeated_infoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += infoList_.CalculateSize(_repeated_infoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResUsableWishBottleProto other) {
      if (other == null) {
        return;
      }
      infoList_.Add(other.infoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            infoList_.AddEntriesFrom(input, _repeated_infoList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 推送许愿活动奖池列表 (登录后、活动开始后)		msgId=175108
  /// </summary>
  public sealed partial class ResWishActivityPoolProto : pb::IMessage<ResWishActivityPoolProto> {
    private static readonly pb::MessageParser<ResWishActivityPoolProto> _parser = new pb::MessageParser<ResWishActivityPoolProto>(() => new ResWishActivityPoolProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResWishActivityPoolProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishActivityPoolProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishActivityPoolProto(ResWishActivityPoolProto other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWishActivityPoolProto Clone() {
      return new ResWishActivityPoolProto(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Proto.WishMessage.WishActivityPoolDtoProto> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Proto.WishMessage.WishActivityPoolDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.WishMessage.WishActivityPoolDtoProto> list_ = new pbc::RepeatedField<global::Com.Proto.WishMessage.WishActivityPoolDtoProto>();
    /// <summary>
    ///许愿活动奖池列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.WishMessage.WishActivityPoolDtoProto> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResWishActivityPoolProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResWishActivityPoolProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResWishActivityPoolProto other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 许愿信息		msgId=175201
  /// </summary>
  public sealed partial class WishInfoDtoProto : pb::IMessage<WishInfoDtoProto> {
    private static readonly pb::MessageParser<WishInfoDtoProto> _parser = new pb::MessageParser<WishInfoDtoProto>(() => new WishInfoDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WishInfoDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishInfoDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishInfoDtoProto(WishInfoDtoProto other) : this() {
      configId_ = other.configId_;
      nextFreeTime_ = other.nextFreeTime_;
      cadreAtlas_ = other.cadreAtlas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishInfoDtoProto Clone() {
      return new WishInfoDtoProto(this);
    }

    /// <summary>Field number for the "configId" field.</summary>
    public const int ConfigIdFieldNumber = 1;
    private int configId_;
    /// <summary>
    ///配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigId {
      get { return configId_; }
      set {
        configId_ = value;
      }
    }

    /// <summary>Field number for the "nextFreeTime" field.</summary>
    public const int NextFreeTimeFieldNumber = 2;
    private int nextFreeTime_;
    /// <summary>
    ///下一次免费的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NextFreeTime {
      get { return nextFreeTime_; }
      set {
        nextFreeTime_ = value;
      }
    }

    /// <summary>Field number for the "cadreAtlas" field.</summary>
    public const int CadreAtlasFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_cadreAtlas_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> cadreAtlas_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///龙骨数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CadreAtlas {
      get { return cadreAtlas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WishInfoDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WishInfoDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigId != other.ConfigId) return false;
      if (NextFreeTime != other.NextFreeTime) return false;
      if(!cadreAtlas_.Equals(other.cadreAtlas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
      if (NextFreeTime != 0) hash ^= NextFreeTime.GetHashCode();
      hash ^= cadreAtlas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigId);
      }
      if (NextFreeTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NextFreeTime);
      }
      cadreAtlas_.WriteTo(output, _repeated_cadreAtlas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
      }
      if (NextFreeTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextFreeTime);
      }
      size += cadreAtlas_.CalculateSize(_repeated_cadreAtlas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WishInfoDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.ConfigId != 0) {
        ConfigId = other.ConfigId;
      }
      if (other.NextFreeTime != 0) {
        NextFreeTime = other.NextFreeTime;
      }
      cadreAtlas_.Add(other.cadreAtlas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigId = input.ReadInt32();
            break;
          }
          case 16: {
            NextFreeTime = input.ReadInt32();
            break;
          }
          case 26: {
            cadreAtlas_.AddEntriesFrom(input, _repeated_cadreAtlas_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 心愿瓶卡牌		msgId=175202
  /// </summary>
  public sealed partial class WishBottleCardDtoProto : pb::IMessage<WishBottleCardDtoProto> {
    private static readonly pb::MessageParser<WishBottleCardDtoProto> _parser = new pb::MessageParser<WishBottleCardDtoProto>(() => new WishBottleCardDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WishBottleCardDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishBottleCardDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishBottleCardDtoProto(WishBottleCardDtoProto other) : this() {
      index_ = other.index_;
      wishBottlePondId_ = other.wishBottlePondId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishBottleCardDtoProto Clone() {
      return new WishBottleCardDtoProto(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    /// <summary>
    ///卡牌位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "wishBottlePondId" field.</summary>
    public const int WishBottlePondIdFieldNumber = 2;
    private int wishBottlePondId_;
    /// <summary>
    ///奖池配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WishBottlePondId {
      get { return wishBottlePondId_; }
      set {
        wishBottlePondId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WishBottleCardDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WishBottleCardDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (WishBottlePondId != other.WishBottlePondId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (WishBottlePondId != 0) hash ^= WishBottlePondId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (WishBottlePondId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WishBottlePondId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (WishBottlePondId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WishBottlePondId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WishBottleCardDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.WishBottlePondId != 0) {
        WishBottlePondId = other.WishBottlePondId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            WishBottlePondId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 服装信息		msgId=175203
  /// </summary>
  public sealed partial class WishClothDtoProto : pb::IMessage<WishClothDtoProto> {
    private static readonly pb::MessageParser<WishClothDtoProto> _parser = new pb::MessageParser<WishClothDtoProto>(() => new WishClothDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WishClothDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishClothDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishClothDtoProto(WishClothDtoProto other) : this() {
      clothId_ = other.clothId_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishClothDtoProto Clone() {
      return new WishClothDtoProto(this);
    }

    /// <summary>Field number for the "clothId" field.</summary>
    public const int ClothIdFieldNumber = 1;
    private int clothId_;
    /// <summary>
    ///服装ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClothId {
      get { return clothId_; }
      set {
        clothId_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    /// <summary>
    ///服装数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WishClothDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WishClothDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClothId != other.ClothId) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClothId != 0) hash ^= ClothId.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClothId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClothId);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClothId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClothId);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WishClothDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.ClothId != 0) {
        ClothId = other.ClothId;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClothId = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 心愿瓶信息		msgId=175204
  /// </summary>
  public sealed partial class WishBottleInfoDtoProto : pb::IMessage<WishBottleInfoDtoProto> {
    private static readonly pb::MessageParser<WishBottleInfoDtoProto> _parser = new pb::MessageParser<WishBottleInfoDtoProto>(() => new WishBottleInfoDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WishBottleInfoDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishBottleInfoDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishBottleInfoDtoProto(WishBottleInfoDtoProto other) : this() {
      configId_ = other.configId_;
      canTurnCount_ = other.canTurnCount_;
      sumTurnCount_ = other.sumTurnCount_;
      turnOverCardList_ = other.turnOverCardList_.Clone();
      cardList_ = other.cardList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishBottleInfoDtoProto Clone() {
      return new WishBottleInfoDtoProto(this);
    }

    /// <summary>Field number for the "configId" field.</summary>
    public const int ConfigIdFieldNumber = 1;
    private int configId_;
    /// <summary>
    ///心愿瓶配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigId {
      get { return configId_; }
      set {
        configId_ = value;
      }
    }

    /// <summary>Field number for the "canTurnCount" field.</summary>
    public const int CanTurnCountFieldNumber = 2;
    private int canTurnCount_;
    /// <summary>
    ///可翻牌次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CanTurnCount {
      get { return canTurnCount_; }
      set {
        canTurnCount_ = value;
      }
    }

    /// <summary>Field number for the "sumTurnCount" field.</summary>
    public const int SumTurnCountFieldNumber = 3;
    private int sumTurnCount_;
    /// <summary>
    ///总的可翻牌次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SumTurnCount {
      get { return sumTurnCount_; }
      set {
        sumTurnCount_ = value;
      }
    }

    /// <summary>Field number for the "turnOverCardList" field.</summary>
    public const int TurnOverCardListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Proto.WishMessage.WishBottleCardDtoProto> _repeated_turnOverCardList_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Proto.WishMessage.WishBottleCardDtoProto.Parser);
    private readonly pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleCardDtoProto> turnOverCardList_ = new pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleCardDtoProto>();
    /// <summary>
    ///已翻卡牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Proto.WishMessage.WishBottleCardDtoProto> TurnOverCardList {
      get { return turnOverCardList_; }
    }

    /// <summary>Field number for the "cardList" field.</summary>
    public const int CardListFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_cardList_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> cardList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///未翻卡牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CardList {
      get { return cardList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WishBottleInfoDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WishBottleInfoDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigId != other.ConfigId) return false;
      if (CanTurnCount != other.CanTurnCount) return false;
      if (SumTurnCount != other.SumTurnCount) return false;
      if(!turnOverCardList_.Equals(other.turnOverCardList_)) return false;
      if(!cardList_.Equals(other.cardList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
      if (CanTurnCount != 0) hash ^= CanTurnCount.GetHashCode();
      if (SumTurnCount != 0) hash ^= SumTurnCount.GetHashCode();
      hash ^= turnOverCardList_.GetHashCode();
      hash ^= cardList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigId);
      }
      if (CanTurnCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CanTurnCount);
      }
      if (SumTurnCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SumTurnCount);
      }
      turnOverCardList_.WriteTo(output, _repeated_turnOverCardList_codec);
      cardList_.WriteTo(output, _repeated_cardList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
      }
      if (CanTurnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CanTurnCount);
      }
      if (SumTurnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SumTurnCount);
      }
      size += turnOverCardList_.CalculateSize(_repeated_turnOverCardList_codec);
      size += cardList_.CalculateSize(_repeated_cardList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WishBottleInfoDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.ConfigId != 0) {
        ConfigId = other.ConfigId;
      }
      if (other.CanTurnCount != 0) {
        CanTurnCount = other.CanTurnCount;
      }
      if (other.SumTurnCount != 0) {
        SumTurnCount = other.SumTurnCount;
      }
      turnOverCardList_.Add(other.turnOverCardList_);
      cardList_.Add(other.cardList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigId = input.ReadInt32();
            break;
          }
          case 16: {
            CanTurnCount = input.ReadInt32();
            break;
          }
          case 24: {
            SumTurnCount = input.ReadInt32();
            break;
          }
          case 34: {
            turnOverCardList_.AddEntriesFrom(input, _repeated_turnOverCardList_codec);
            break;
          }
          case 42:
          case 40: {
            cardList_.AddEntriesFrom(input, _repeated_cardList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 许愿活动奖池		msgId=175205
  /// </summary>
  public sealed partial class WishActivityPoolDtoProto : pb::IMessage<WishActivityPoolDtoProto> {
    private static readonly pb::MessageParser<WishActivityPoolDtoProto> _parser = new pb::MessageParser<WishActivityPoolDtoProto>(() => new WishActivityPoolDtoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WishActivityPoolDtoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Proto.WishMessage.WishReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishActivityPoolDtoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishActivityPoolDtoProto(WishActivityPoolDtoProto other) : this() {
      subType_ = other.subType_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WishActivityPoolDtoProto Clone() {
      return new WishActivityPoolDtoProto(this);
    }

    /// <summary>Field number for the "subType" field.</summary>
    public const int SubTypeFieldNumber = 1;
    private int subType_;
    /// <summary>
    ///子类型 (许愿配置表中的subType)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubType {
      get { return subType_; }
      set {
        subType_ = value;
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private int startTime_;
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "endTime" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private int endTime_;
    /// <summary>
    ///结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WishActivityPoolDtoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WishActivityPoolDtoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubType != other.SubType) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubType != 0) hash ^= SubType.GetHashCode();
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SubType);
      }
      if (StartTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartTime);
      }
      if (EndTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubType);
      }
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WishActivityPoolDtoProto other) {
      if (other == null) {
        return;
      }
      if (other.SubType != 0) {
        SubType = other.SubType;
      }
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubType = input.ReadInt32();
            break;
          }
          case 16: {
            StartTime = input.ReadInt32();
            break;
          }
          case 24: {
            EndTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
